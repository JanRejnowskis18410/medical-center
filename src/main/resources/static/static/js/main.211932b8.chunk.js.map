{"version":3,"sources":["img/logo.png","components/fragments/Navigation.js","components/fragments/Footer.js","config/config.js","components/patient/PatientData.js","components/patientFiles/UploadNewFile.js","components/appointment/Appointment.js","components/appointment/AppointmentList.js","components/appointment/NewAppointmentForm.js","components/appointment/AvailableAppointment.js","components/appointment/AppointmentModal.js","components/appointment/NewAppointment.js","components/referral/Referral.js","components/referral/ReferralList.js","components/schedule/Schedule.js","components/schedule/ScheduleForm.js","components/checkup/CheckUp.js","components/appointment/doctor/AppointmentDetailsButtonPanel.js","components/checkup/CheckUpList.js","components/prescription/PrescriptionListTableRow.js","components/prescription/PrescriptionListTable.js","components/prescription/PrescriptionList.js","components/login/LanguageChanger.js","components/login/LoginForm.js","components/login/RegisterForm.js","img/404.png","components/login/NotFound.js","components/appointment/doctor/DoctorAppointment.js","components/appointment/doctor/TodayAppointmentList.js","components/fragments/doctor/DoctorNavigation.js","components/appointment/doctor/AppointmentDetailsForm.js","components/appointment/doctor/AppointmentDetails.js","components/appointment/doctor/visitsHistory/ArchivalVisit.js","components/appointment/doctor/visitsHistory/VisitsHistoryList.js","components/appointment/doctor/files/FilesTable.js","components/checkup/doctor/DoctorCheckUp.js","components/checkup/doctor/DoctorCheckUpList.js","img/stetoscope.jpg","App.js","i18n.js","index.js"],"names":["Navigation","changeLanguage","t","setLogged","history","useHistory","profileTitle","size","pathname","useLocation","Navbar","bg","variant","expand","collapseOnSelect","sticky","className","Container","fluid","Brand","alt","src","logo","Toggle","Collapse","id","Nav","to","activeHref","Link","exact","NavDropdown","title","Item","onClick","Divider","sessionStorage","clear","setItem","push","Footer","baseUrl","today","Date","PatientData","logout","useState","redirect","setRedirect","JSON","parse","getItem","undefined","userId","userToken","schema","yup","shape","firstName","min","max","required","lastName","pesel","test","digits","split","parseInt","substring","checksum","birthDate","phoneNumber","email","password","confirmPassword","oneOf","street","streetNumber","city","postCode","matches","country","data","setPatient","setFirstName","setLastName","setPesel","setBirthDate","setPhone","setEmail","emailChange","setEmailChange","setPassword","setConfirmPassword","patientsFiles","setPatientFiles","setStreet","setStreetNumber","setCity","setPostCode","setCountry","useEffect","controller","AbortController","a","fetchPatient","patient","console","log","abort","address","fetch","headers","res","status","json","validationSchema","enableReinitialize","onSubmit","newObj","method","body","stringify","then","window","alert","Error","catch","err","newAuthObj","initialErrors","validateOnChange","validateOnMount","initialValues","handleSubmit","values","touched","errors","Form","Row","Col","Group","Label","Control","type","name","placeholder","defaultValue","isInvalid","isValid","onChange","e","target","value","Feedback","style","color","display","justifyContent","Button","UploadNewFile","files","setFiles","selectedFile","setSelectedFile","deletedFile","setDeletedFile","fileDescription","setFileDescription","setErrors","ref","useRef","fetchPatientFiles","patientFiles","convertToBase64","file","Promise","resolve","reject","fileReader","FileReader","readAsDataURL","onload","result","onerror","error","handleFileUpload","base64","binaryData","atob","byteNumbers","Array","length","i","charCodeAt","Uint8Array","array","from","date","getFullYear","getMonth","getDate","fileToUpload","preventDefault","findFormErrors","Object","keys","current","newErrors","description","includes","controlId","as","Table","width","backgroundColor","map","uploadDate","href","document","createElement","byteArr","URL","createObjectURL","Blob","download","appendChild","click","removeChild","handleFileDownload","handleFileDeletion","Appointment","appointment","setCancelledAppointment","app","setAppointment","open","setOpen","reserved","confirmed","done","x","getTimezoneOffset","formatYmd","toISOString","slice","setDate","state","togglePanel","service","serviceName","doctor","margin","confirmedApp","handleConfirmation","cancelledApp","handleCancellation","recommendations","diagnosticTests","diagnosticTestName","prescriptions","AppointmentList","appointments","setAppointments","appDate","setAppDate","filteredAppointments","setFilteredAppointments","canceledAppointment","pageSizes","page","setPage","count","setCount","pageSize","setPageSize","getRequestParams","params","todaysVisits","visitToConfirm","futureVisits","pastVisits","finalApps","fetchAppointments","totalPages","sort","b","checkAppId","patientId","filter","htmlFor","facilityAppointments","phoneAppointments","appointmentsFilteredByDate","handleDateFilter","height","event","Pagination","siblingCount","boundaryCount","withRouter","getAppointments","referral","location","languages","appointmentType","setAppointmentType","language","setLanguage","setService","receivedReferral","setReceivedReferral","selectedReferral","setSelectedReferral","setSelectedDoctor","referrals","setReferrals","services","setServices","doctors","setDoctors","dateFrom","setDateFrom","dateTo","setDateTo","fetchServices","forEach","fetchDoctors","querySelector","disabled","getElementById","medicalService","facilityService","checked","radioBtnFacility","radioBtnPhone","fetchReferrals","availableReferrals","expiryDate","clearReferralFields","appType","serviceMess","Check","label","Select","lang","clearService","ser","doc","AvailableAppointment","setOpenModal","setSelectedAppointment","setApp","handleClick","AppointmentModal","selectedAppointment","setReferral","referralId","bookAnAppointment","receivedService","setReceivedService","openModal","setDoctor","getAvailableAppointments","apps","time","toString","fontFamily","Referral","setRef","issueDate","ReferralList","filterReferrals","useStyles","makeStyles","theme","todayCell","fade","palette","primary","main","weekendCell","action","disabledBackground","weekend","TimeTableCell","props","classes","startDate","getDay","DayScaleCell","Schedule","schedule","convertDate","year","month","day","hours","minutes","processedAppointments","properAppointments","entries","endDate","convertAppointments","Paper","firstDayOfWeek","locale","startDayHour","endDayHour","timeTableCellComponent","dayScaleCellComponent","ScheduleForm","specializations","setSpecializations","selectedSpecialization","setSelectedSpecialization","selectedDoctor","setSchedule","fetchSpecializations","spec","specialization","obj","CheckUp","checkup","setState","checkUp","setChekup","appointmentDate","doctorFirstName","doctorLastName","doctorsDescription","appointmentId","checkUpId","String","AppointmentDetailsButtonPanel","button","indexOf","CheckUpList","checkups","setCheckups","getCheckups","fetchCheckups","checkUps","PrescriptionListTableRow","prescription","creationDate","medications","medicine","numberOfPackages","accessCode","doctorPwz","PrescriptionListTable","prescriptionData","PrescriptionList","setPrescriptions","fetchPrescriptions","LanguageChanger","textAlign","marginBottom","marginRight","cursor","marginLeft","LoginForm","setRole","notExistError","setNotExistError","marginTop","URLSearchParams","access_token","user_id","decoded","jwtDecode","exp","role","handleChange","xs","md","fontSize","RegisterForm","newPerson","message","NotFound","errorImage","DoctorAppointment","moment","now","medicalServiceName","diff","TodayAppointmentList","DoctorNavigation","AppointmentDetailsForm","setCheckUps","setMedications","setDescription","setRecommendations","referralExpiryDate","setReferralExpiryDate","referralToDelete","setReferralToDelete","saved","medication","setMedication","medicationDosage","setMedicationDosage","medicationQuantity","setMedicationQuantity","medicationToDelete","setMedicationToDelete","medicationsToAdd","setMedicationsToAdd","selectedCheckup","setSelectedCheckup","checkupDescription","setCheckupDescription","checkupResult","setCheckupResult","checkupResultFile","setCheckupResultFile","checkupToDelete","setCheckupToDelete","checkUpsToAdd","setCheckUpsToAdd","fetchCheckUps","fetchMedications","handleCheckupAddition","addedCheckup","rows","column","overflow","handleReferralAddition","refIndex","splice","handleReferralDeletion","medicationId","handleMedicationAddition","medIndex","handleMedicationDeletion","checkupIndex","handleCheckupDeletion","removeItem","handleCancel","Math","floor","random","fetchBody","AppointmentDetails","ArchivalVisit","VisitsHistoryList","patientsAppointments","setPatientsAppointments","patientAppointment","FilesTable","fetchFiles","DoctorCheckUp","setShowAll","setCheckUp","setResult","setFile","setDoctorsDescription","showForm","handleRealization","setTimeout","toUpperCase","DoctorCheckUpList","filterCheckups","App","logged","useTranslation","i18n","logOut","backgroundImage","background","path","component","use","Backend","LanguageDetector","initReactI18next","init","fallbackLng","debug","detection","order","cache","interpolation","escapeValue","ReactDOM","render","StrictMode","fallback"],"mappings":"mNAAe,MAA0B,iC,oECgE1BA,EAxDI,SAAC,GAAmC,IAAlCC,EAAiC,EAAjCA,eAAgBC,EAAiB,EAAjBA,EAAGC,EAAc,EAAdA,UAC9BC,EAAUC,cACVC,EAAgB,cAAC,IAAD,CAAUC,KAAM,KAC/BC,EAAYC,cAAZD,SASP,OACQ,cAACE,EAAA,EAAD,CAAQC,GAAG,QAAQC,QAAQ,QAAQC,OAAO,KAAKC,iBAAiB,OAAOC,OAAO,MAAMC,UAAU,eAA9F,SACI,eAACC,EAAA,EAAD,CAAWC,OAAK,EAAhB,UACI,cAACR,EAAA,EAAOS,MAAR,CAAcH,UAAU,eAAxB,SAAuC,qBAAKI,IAAI,kBAAkBC,IAAKC,MACvE,cAACZ,EAAA,EAAOa,OAAR,CAAe,gBAAc,qBAC7B,eAACb,EAAA,EAAOc,SAAR,CAAiBC,GAAG,8BAA8BT,UAAU,cAA5D,UACI,eAACU,EAAA,EAAD,CAAKV,UAAU,SAAf,UACQ,cAAC,gBAAD,CAAeW,GAAG,gBAAgBC,WAAW,SAA7C,SACI,cAACF,EAAA,EAAIG,KAAL,CAAUC,OAAK,EAACd,UAAU,cAA1B,SAA0Cd,EAAE,oBAEhD,cAAC,gBAAD,CAAeyB,GAAG,aAAaC,WAAW,SAA1C,SACI,cAACF,EAAA,EAAIG,KAAL,CAAUC,OAAK,EAACd,UAAU,cAA1B,SAA0Cd,EAAE,iBAEhD,cAAC,gBAAD,CAAeyB,GAAG,YAAYC,WAAW,SAAzC,SACI,cAACF,EAAA,EAAIG,KAAL,CAAUC,OAAK,EAACd,UAAU,cAA1B,SAA0Cd,EAAE,iBAEhD,cAAC,gBAAD,CAAeyB,GAAG,aAAaC,WAAW,SAA1C,SACI,cAACF,EAAA,EAAIG,KAAL,CAAUC,OAAK,EAACd,UAAU,cAA1B,SAA0Cd,EAAE,gBAEhD,cAAC,gBAAD,CAAeyB,GAAG,iBAAiBC,WAAW,SAA9C,SACI,cAACF,EAAA,EAAIG,KAAL,CAAUC,OAAK,EAACd,UAAU,cAA1B,SAA0Cd,EAAE,uBAd3BM,GAiB7B,eAACuB,EAAA,EAAD,CAAaf,UAAU,mBAAmBgB,MAAO1B,EAAcmB,GAAG,qBAAlE,UACI,cAAC,gBAAD,CAAeE,GAAG,cAAcC,WAAW,SAA3C,SACI,cAACF,EAAA,EAAIG,KAAL,CAAUC,OAAK,EAACd,UAAU,wBAA1B,SAAmDd,EAAE,iBAEzD,cAAC,gBAAD,CAAeyB,GAAG,YAAYC,WAAW,SAAzC,SACI,cAACF,EAAA,EAAIG,KAAL,CAAUC,OAAK,EAACd,UAAU,eAA1B,SAA0Cd,EAAE,eAGhD,eAAC6B,EAAA,EAAD,CAAaC,MAAO9B,EAAE,YAAauB,GAAG,qBAAtC,UACI,cAACM,EAAA,EAAYE,KAAb,CAAkBC,QAAS,WAAOjC,EAAe,OAAjD,qBACA,cAAC8B,EAAA,EAAYE,KAAb,CAAkBC,QAAS,WAAOjC,EAAe,OAAjD,uBAEJ,cAAC8B,EAAA,EAAYI,QAAb,IACA,cAACJ,EAAA,EAAYE,KAAb,CAAkBC,QA3CrB,WACjBE,eAAeC,QACfD,eAAeE,QAAQ,SAAU,SACjCnC,GAAU,GACVC,EAAQmC,KAAK,WAuCO,SAA0CrC,EAAE,wBC/CzDsC,EAPA,SAAC,GAAQ,IAAPtC,EAAM,EAANA,EACb,OACI,iCACKA,EAAE,a,4ECLFuC,EAA6E,uCCSnFC,EAAQ,IAAIC,KA2VJC,EAzVK,SAAC,GAA4B,IAA3B1C,EAA0B,EAA1BA,EAAG2C,EAAuB,EAAvBA,OAAQ1C,EAAe,EAAfA,UACvBC,EAAUC,cAChB,EAAgCyC,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA4BF,oBAAS,WAEjC,OADcG,KAAKC,MAAMd,eAAee,QAAQ,aAChCC,KAFpB,mBAAOC,EAAP,KAIA,GAJA,KAIkCP,oBAAS,WAEvC,OADcG,KAAKC,MAAMd,eAAee,QAAQ,gBAChCC,MAFpB,mBAAOE,EAAP,KAKMC,GALN,KAKeC,MAAaC,MAAM,CAC9BC,UAAWF,MAAaG,IAAI,EAAGzD,EAAE,0BAA0B0D,IAAI,GAAI1D,EAAE,0BAA0B2D,SAAS3D,EAAE,aAC1G4D,SAAUN,MAAaG,IAAI,EAAGzD,EAAE,yBAAyB0D,IAAI,GAAI1D,EAAE,yBAAyB2D,SAAS3D,EAAE,aACvG6D,MAAOP,MAAaG,IAAI,GAAIzD,EAAE,wBAAwB0D,IAAI,GAAI1D,EAAE,wBAC3D8D,KAAK,YAAa9D,EAAE,sBACjB,SAAuB6D,GAEnB,IAAwB,IADd,cACFC,KAAKD,GACT,OAAO,EAEP,IAAIE,GAAU,GAAKF,GAAOG,MAAM,IAChC,GAAKC,SAASJ,EAAMK,UAAU,EAAG,IAAM,IAAQD,SAASJ,EAAMK,UAAU,EAAG,IAAM,GAC7E,OAAO,EAEX,IAAIC,GAAY,EAAIF,SAASF,EAAO,IAAM,EAAIE,SAASF,EAAO,IAAM,EAAIE,SAASF,EAAO,IAAM,EAAIE,SAASF,EAAO,IAAM,EAAIE,SAASF,EAAO,IAAM,EAAIE,SAASF,EAAO,IAAM,EAAIE,SAASF,EAAO,IAAM,EAAIE,SAASF,EAAO,IAAM,EAAIE,SAASF,EAAO,IAAM,EAAIE,SAASF,EAAO,KAAO,GAKrR,OAJiB,IAAbI,IACAA,EAAW,IACfA,EAAW,GAAKA,EAERF,SAASF,EAAO,OAASI,KAEtCR,SAAS3D,EAAE,aACtBoE,UAAWd,MAAWI,IAAIlB,EAAOxC,EAAE,wBAAwB2D,SAAS3D,EAAE,aACtEqE,YAAaf,MAAaG,IAAI,EAAGzD,EAAE,qBAAqB2D,SAAS3D,EAAE,aACnEsE,MAAOhB,MAAagB,MAAMtE,EAAE,eAAe2D,SAAS3D,EAAE,aACtDuE,SAAUjB,MAAaG,IAAI,EAAGzD,EAAE,+BAA+B0D,IAAI,GAAI1D,EAAE,+BAA+B2D,SAAS3D,EAAE,aACnHwE,gBAAiBlB,MAAamB,MAAM,CAACnB,IAAQ,YAAa,IAAKtD,EAAE,kBAAkB2D,SAAS3D,EAAE,aAC9F0E,OAAQpB,MAAaG,IAAI,GAAGE,SAAS3D,EAAE,aACvC2E,aAAcrB,MAAaK,SAAS3D,EAAE,aACtC4E,KAAMtB,MAAaK,SAAS3D,EAAE,aAC9B6E,SAAUvB,MAAaK,SAAS3D,EAAE,aAAa8E,QAAQ,oBAAqB9E,EAAE,kBAC9E+E,QAASzB,MAAaK,SAAS3D,EAAE,gBAGrC,EAA2B4C,mBAAS,IAApC,mBAAOoC,EAAP,KAAaC,EAAb,KACA,EAAkCrC,wBAASM,GAA3C,mBAAOM,EAAP,KAAkB0B,EAAlB,KACA,EAAgCtC,wBAASM,GAAzC,mBAAOU,EAAP,KAAiBuB,EAAjB,KACA,EAA0BvC,wBAASM,GAAnC,mBAAOW,EAAP,KAAcuB,EAAd,KACA,EAAkCxC,wBAASM,GAA3C,mBAAOkB,EAAP,KAAkBiB,EAAlB,KACA,EAAgCzC,wBAASM,GAAzC,mBAAOmB,EAAP,KAAoBiB,EAApB,KACA,GAA0B1C,wBAASM,GAAnC,qBAAOoB,GAAP,MAAciB,GAAd,MACA,GAAsC3C,oBAAS,GAA/C,qBAAO4C,GAAP,MAAoBC,GAApB,MACA,GAAgC7C,wBAASM,GAAzC,qBAAOqB,GAAP,MAAiBmB,GAAjB,MACA,GAA8C9C,wBAASM,GAAvD,qBAAOsB,GAAP,MAAwBmB,GAAxB,MACA,GAAyC/C,wBAASM,GAAlD,qBAAO0C,GAAP,MAAsBC,GAAtB,MAEA,GAA4BjD,wBAASM,GAArC,qBAAOwB,GAAP,MAAeoB,GAAf,MACA,GAAwClD,wBAASM,GAAjD,qBAAOyB,GAAP,MAAqBoB,GAArB,MACA,GAAwBnD,wBAASM,GAAjC,qBAAO0B,GAAP,MAAaoB,GAAb,MACA,GAAgCpD,wBAASM,GAAzC,qBAAO2B,GAAP,MAAiBoB,GAAjB,MACA,GAA8BrD,wBAASM,GAAvC,qBAAO6B,GAAP,MAAgBmB,GAAhB,MAEAC,qBAAU,WACN,IAAIC,EAAa,IAAIC,gBAYrB,OAVA,sBAAC,4BAAAC,EAAA,+EAE6BC,KAF7B,OAEaC,EAFb,OAGOvB,EAAWuB,GACXJ,EAAa,KAJpB,gDAMOK,QAAQC,IAAR,MACA5D,GAAY,GAPnB,wDAAD,GAUO,kCAAMsD,SAAN,aAAM,EAAYO,WAE1B,IAEHR,qBAAU,gBACMjD,IAAT8B,IACCE,EAAaF,EAAKxB,WAClB2B,EAAYH,EAAKpB,UACjBwB,EAASJ,EAAKnB,OACdwB,EAAaL,EAAKZ,WAClBkB,EAASN,EAAKX,aACdkB,GAASP,EAAKV,OACduB,GAAgBb,EAAKY,eACrBZ,EAAK4B,QAAUd,GAAUd,EAAK4B,QAAQlC,QAAUoB,QAAU5C,GAC1D8B,EAAK4B,QAAUb,GAAgBf,EAAK4B,QAAQjC,cAAgBoB,QAAgB7C,GAC5E8B,EAAK4B,QAAUZ,GAAQhB,EAAK4B,QAAQhC,MAAQoB,QAAQ9C,GACpD8B,EAAK4B,QAAUX,GAAYjB,EAAK4B,QAAQ/B,UAAYoB,QAAY/C,GAChE8B,EAAK4B,QAAUV,GAAWlB,EAAK4B,QAAQ7B,SAAWmB,QAAWhD,MAEnE,CAAC8B,IAEH,IAAMuB,GAAY,uCAAG,8BAAAD,EAAA,sEACCO,MAAM,GAAD,OAAItE,EAAJ,qBAAwBY,GAAS,CACpD2D,QAAS,CAAC,+BAA4B1D,MAFzB,cAIC,OAHZ2D,EADW,QAIVC,QACHlE,GAAY,GALC,SAOEiE,EAAIE,OAPN,cAOXjC,EAPW,yBASVA,GATU,2CAAH,qDAoFlB,OAAgB,IAAbnC,GACCF,EAAOzC,GAEH,8BAIA,sBAAKY,UAAU,YAAf,UACI,qBAAKA,UAAU,aAAf,SACI,6BAAKd,EAAE,cAEX,cAAC,IAAD,CAAQkH,iBAAkB7D,EAClB8D,oBAAoB,EACpBC,SArFpB,WACI,IAAMC,EAAS,CACX,GAAMlE,EACNyD,QAAS,CACLlC,UACAC,gBACAE,YACAD,QACAG,YAEJV,cACAb,YACAI,WACAQ,YACAP,QACA+B,kBAwBJ,GArBAiB,MAAM,GAAD,OAAItE,EAAJ,aAAuB,CACxB+E,OAAQ,MACRR,QAAS,CACL,+BAA4B1D,GAC5B,8BAA8B,GAA9B,OAAkCb,GAClC,eAAgB,kCAEpBgF,KAAMxE,KAAKyE,UAAUH,KACtBI,MAAK,SAACV,GACL,GAAkB,MAAfA,EAAIC,OAGH,MAFAU,OAAOC,MAAM3H,EAAE,gBACf2C,EAAOzC,GACD,IAAI0H,MAAM5H,EAAE,gBAEtB+G,EAAIE,UACLY,OAAM,SAACC,GAAD,OAAOrB,QAAQC,IAAIoB,OAGT,IAAhBtC,SAAsCtC,IAAbqB,IAAuC,KAAbA,IAClDmD,OAAOC,MAAM3H,EAAE,kCAEHkD,IAAbqB,IAAuC,KAAbA,GAAgB,CACzC,IAAIwD,EAAa,GACjBA,EAAU,SAAexD,IACN,IAAhBiB,KACCuC,EAAU,MAAYzD,IAG1BuC,MAAM,GAAD,OAAItE,EAAJ,kBAAqBY,EAArB,sBAAgD,CACjDmE,OAAQ,QACRR,QAAU,CACN,+BAA4B1D,GAC5B,8BAA8B,GAA9B,OAAkCb,GAClC,eAAgB,kCAEpBgF,KAAOxE,KAAKyE,UAAUO,KACvBN,MAAK,SAACV,GACL,GAAkB,MAAfA,EAAIC,OAGH,MAFAU,OAAOC,MAAM3H,EAAE,gBACf2C,EAAOzC,GACD,IAAI0H,MAAM5H,EAAE,mBAEvByH,MAAK,YACa,IAAhBjC,KACCkC,OAAOC,MAAM3H,EAAE,sBACfE,EAAQmC,KAAK,UACbH,eAAeC,QACfD,eAAeE,QAAQ,SAAU,SACjCnC,GAAU,OAEb4H,OAAM,SAAAC,GAAG,OAAErB,QAAQC,IAAIoB,QAkBdE,cAAe,GACfC,kBAAkB,EAClBC,iBAAiB,EACjBC,cAAe,CACX3E,UAAYA,EACZI,SAAWA,EACXC,MAAQA,EACRO,UAAYA,EACZC,YAAcA,EACdC,MAAQA,GACRC,SAAWA,GACXC,gBAAkBA,GAClBE,OAASA,GACTC,aAAeA,GACfC,KAAMA,GACNC,SAAWA,GACXE,QAAUA,IAnBtB,SAqBK,gBACKqD,EADL,EACKA,aACAC,EAFL,EAEKA,OACAC,EAHL,EAGKA,QACAC,EAJL,EAIKA,OAJL,OAMG,eAACC,EAAA,EAAD,CAAM1H,UAAU,qBAAqBsG,SAAUgB,EAA/C,UACI,eAACK,EAAA,EAAD,CAAK3H,UAAU,0BAAf,UACI,cAAC4H,EAAA,EAAD,UACI,eAACF,EAAA,EAAKG,MAAN,WACI,cAACH,EAAA,EAAKI,MAAN,UAAa5I,EAAE,eACf,cAACwI,EAAA,EAAKK,QAAN,CAAcC,KAAK,OAAOC,KAAK,YAAYC,YAAahJ,EAAE,aAAcK,KAAK,KAAK4I,aAAcZ,EAAO7E,UAAW0F,YAAaX,EAAO/E,UAAW2F,QAASb,EAAQ9E,YAAc+E,EAAO/E,UAAW4F,SAAU,SAACC,GAAD,OAAKnE,EAAamE,EAAEC,OAAOC,UACvO,cAACf,EAAA,EAAKK,QAAQW,SAAd,CAAuBV,KAAK,UAA5B,SAAuCP,EAAO/E,iBAGtD,cAACkF,EAAA,EAAD,UACI,eAACF,EAAA,EAAKG,MAAN,WACI,cAACH,EAAA,EAAKI,MAAN,UAAa5I,EAAE,cACf,cAACwI,EAAA,EAAKK,QAAN,CAAcC,KAAK,OAAOC,KAAK,WAAWC,YAAahJ,EAAE,YAAaK,KAAK,KAAM4I,aAAcZ,EAAOzE,SAAUsF,YAAaX,EAAO3E,SAAUuF,QAASb,EAAQ1E,WAAa2E,EAAO3E,SAAUwF,SAAU,SAACC,GAAD,OAAKlE,EAAYkE,EAAEC,OAAOC,UACjO,cAACf,EAAA,EAAKK,QAAQW,SAAd,CAAuBV,KAAK,UAA5B,SAAuCP,EAAO3E,mBAI1D,eAAC6E,EAAA,EAAD,CAAK3H,UAAU,0BAAf,UACI,cAAC4H,EAAA,EAAD,UACI,eAACF,EAAA,EAAKG,MAAN,WACI,cAACH,EAAA,EAAKI,MAAN,qBACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,OAAOC,KAAK,QAAQC,YAAY,QAAQ3I,KAAK,KAAK4I,aAAcZ,EAAOxE,MAAOqF,YAAaX,EAAO1E,MAAOsF,QAASb,EAAQzE,QAAU0E,EAAO1E,MAAOuF,SAAU,SAACC,GAAD,OAAKjE,EAASiE,EAAEC,OAAOC,UACtM,cAACf,EAAA,EAAKK,QAAQW,SAAd,CAAuBV,KAAK,UAA5B,SAAuCP,EAAO1E,aAGtD,cAAC6E,EAAA,EAAD,UACI,eAACF,EAAA,EAAKG,MAAN,WACI,cAACH,EAAA,EAAKI,MAAN,UAAa5I,EAAE,eACf,cAACwI,EAAA,EAAKK,QAAN,CAAcC,KAAK,OAAOC,KAAK,YAAYC,YAAahJ,EAAE,aAAcK,KAAK,KAAK4I,aAAcZ,EAAOjE,UAAW8E,YAAaX,EAAOnE,UAAW+E,QAASb,EAAQlE,YAAcmE,EAAOnE,UAAWgF,SAAU,SAACC,GAAD,OAAKhE,EAAagE,EAAEC,OAAOC,UACvO,cAACf,EAAA,EAAKK,QAAQW,SAAd,CAAuBV,KAAK,UAA5B,SAAuCP,EAAOnE,oBAI1D,eAACqE,EAAA,EAAD,CAAK3H,UAAU,0BAAf,UACI,cAAC4H,EAAA,EAAD,UACI,eAACF,EAAA,EAAKG,MAAN,WACI,cAACH,EAAA,EAAKI,MAAN,UAAa5I,EAAE,iBACf,cAACwI,EAAA,EAAKK,QAAN,CAAcC,KAAK,OAAOC,KAAK,cAAcC,YAAahJ,EAAE,eAAgBK,KAAK,KAAK4I,aAAcZ,EAAOhE,YAAa6E,YAAaX,EAAOlE,YAAa8E,QAASb,EAAQjE,cAAgBkE,EAAOlE,YAAa+E,SAAU,SAACC,GAAD,OAAK/D,EAAS+D,EAAEC,OAAOC,UAC/O,cAACf,EAAA,EAAKK,QAAQW,SAAd,CAAuBV,KAAK,UAA5B,SAAuCP,EAAOlE,mBAGtD,cAACqE,EAAA,EAAD,UACI,eAACF,EAAA,EAAKG,MAAN,WACI,cAACH,EAAA,EAAKI,MAAN,qBACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,QAAQC,KAAK,QAAQC,YAAY,QAAQ3I,KAAK,KAAK4I,aAAcZ,EAAO/D,MAAO4E,YAAaX,EAAOjE,MAAO6E,QAASb,EAAQhE,QAAUiE,EAAOjE,MAAO8E,SAAU,SAACC,GAC7K9D,GAAS8D,EAAEC,OAAOC,OAClB9D,IAAe,MAEnB,cAAC+C,EAAA,EAAKK,QAAQW,SAAd,CAAuBV,KAAK,UAA5B,SAAuCP,EAAOjE,gBAI1D,eAACmE,EAAA,EAAD,CAAK3H,UAAU,0BAAf,UACI,cAAC4H,EAAA,EAAD,UACI,eAACF,EAAA,EAAKG,MAAN,WACI,eAACH,EAAA,EAAKI,MAAN,WAAa5I,EAAE,YAAf,OACA,cAACwI,EAAA,EAAKK,QAAN,CAAcC,KAAK,WAAWC,KAAK,WAAWC,YAAahJ,EAAE,YAAaK,KAAK,KAAK4I,aAAcZ,EAAO9D,SAAU2E,YAAaX,EAAOhE,SAAU4E,QAASb,EAAQ/D,WAAagE,EAAOhE,SAAU6E,SAAU,SAACC,GAAD,OAAK3D,GAAY2D,EAAEC,OAAOC,UACpO,cAACf,EAAA,EAAKK,QAAQW,SAAd,CAAuBV,KAAK,UAA5B,SAAuCP,EAAOhE,gBAGtD,cAACmE,EAAA,EAAD,UACI,eAACF,EAAA,EAAKG,MAAN,WACI,eAACH,EAAA,EAAKI,MAAN,WAAa5I,EAAE,mBAAf,OACA,cAACwI,EAAA,EAAKK,QAAN,CAAcC,KAAK,WAAWC,KAAK,kBAAkBC,YAAahJ,EAAE,mBAAoBK,KAAK,KAAK4I,aAAcZ,EAAO7D,gBAAiB0E,YAAaX,EAAO/D,gBAAiB2E,QAASb,EAAQ9D,kBAAoB+D,EAAO/D,gBAAiB4E,SAAU,SAACC,GAAD,OAAK1D,GAAmB0D,EAAEC,OAAOC,UACrR,cAACf,EAAA,EAAKK,QAAQW,SAAd,CAAuBV,KAAK,UAA5B,SAAuCP,EAAO/D,0BAI1D,oBAAIiF,MAAO,CAACC,MAAO,WAAnB,SAAgC1J,EAAE,iBAClC,uBACA,eAACyI,EAAA,EAAD,CAAK3H,UAAU,0BAAf,UACI,cAAC4H,EAAA,EAAD,UACI,eAACF,EAAA,EAAKG,MAAN,WACI,cAACH,EAAA,EAAKI,MAAN,UAAa5I,EAAE,YACf,cAACwI,EAAA,EAAKK,QAAN,CAAcC,KAAK,OAAOC,KAAK,SAASC,YAAahJ,EAAE,UAAWK,KAAK,KAAK4I,aAAcZ,EAAO3D,OAAQwE,YAAaX,EAAO7D,OAAQyE,QAASb,EAAQ5D,SAAW6D,EAAO7D,OAAQ0E,SAAU,SAACC,GAAD,OAAKvD,GAAUuD,EAAEC,OAAOC,UAClN,cAACf,EAAA,EAAKK,QAAQW,SAAd,CAAuBV,KAAK,UAA5B,SAAuCP,EAAO7D,cAGtD,cAACgE,EAAA,EAAD,UACI,eAACF,EAAA,EAAKG,MAAN,WACI,cAACH,EAAA,EAAKI,MAAN,UAAa5I,EAAE,kBACf,cAACwI,EAAA,EAAKK,QAAN,CAAcC,KAAK,OAAOC,KAAK,eAAeC,YAAahJ,EAAE,gBAAiBK,KAAK,KAAK4I,aAAcZ,EAAO1D,aAAcuE,YAAaX,EAAO5D,aAAcwE,QAASb,EAAQ3D,eAAiB4D,EAAO5D,aAAcyE,SAAU,SAACC,GAAD,OAAKtD,GAAgBsD,EAAEC,OAAOC,UAC5P,cAACf,EAAA,EAAKK,QAAQW,SAAd,CAAuBV,KAAK,UAA5B,SAAuCP,EAAO5D,uBAI1D,eAAC8D,EAAA,EAAD,CAAK3H,UAAU,0BAAf,UACI,cAAC4H,EAAA,EAAD,UACI,eAACF,EAAA,EAAKG,MAAN,WACI,cAACH,EAAA,EAAKI,MAAN,UAAa5I,EAAE,UACf,cAACwI,EAAA,EAAKK,QAAN,CAAcC,KAAK,OAAOC,KAAK,OAAOC,YAAahJ,EAAE,QAASK,KAAK,KAAK4I,aAAcZ,EAAOzD,KAAMsE,YAAaX,EAAO3D,KAAMuE,QAASb,EAAQ1D,OAAS2D,EAAO3D,KAAMwE,SAAU,SAACC,GAAD,OAAKrD,GAAQqD,EAAEC,OAAOC,UACpM,cAACf,EAAA,EAAKK,QAAQW,SAAd,CAAuBV,KAAK,UAA5B,SAAuCP,EAAO3D,YAGtD,cAAC8D,EAAA,EAAD,UACI,eAACF,EAAA,EAAKG,MAAN,WACI,cAACH,EAAA,EAAKI,MAAN,UAAa5I,EAAE,cACf,cAACwI,EAAA,EAAKK,QAAN,CAAcC,KAAK,OAAOC,KAAK,WAAWC,YAAahJ,EAAE,YAAaK,KAAK,KAAK4I,aAAcZ,EAAOxD,SAAUqE,YAAaX,EAAO1D,SAAUsE,QAASb,EAAQzD,WAAa0D,EAAO1D,SAAUuE,SAAU,SAACC,GAAD,OAAKpD,GAAYoD,EAAEC,OAAOC,UAChO,cAACf,EAAA,EAAKK,QAAQW,SAAd,CAAuBV,KAAK,UAA5B,SAAuCP,EAAO1D,mBAI1D,eAAC4D,EAAA,EAAD,CAAK3H,UAAU,0BAAf,UACI,cAAC4H,EAAA,EAAD,UACI,eAACF,EAAA,EAAKG,MAAN,WACI,cAACH,EAAA,EAAKI,MAAN,UAAa5I,EAAE,aACf,cAACwI,EAAA,EAAKK,QAAN,CAAcC,KAAK,OAAOC,KAAK,UAAUC,YAAahJ,EAAE,WAAYK,KAAK,KAAK4I,aAAcZ,EAAOtD,QAASmE,YAAaX,EAAOxD,QAASoE,QAASb,EAAQvD,UAAYwD,EAAOxD,QAASqE,SAAU,SAACC,GAAD,OAAKnD,GAAWmD,EAAEC,OAAOC,UACzN,cAACf,EAAA,EAAKK,QAAQW,SAAd,CAAuBV,KAAK,UAA5B,SAAuCP,EAAOxD,eAGtD,cAAC2D,EAAA,EAAD,UACI,cAACF,EAAA,EAAKG,MAAN,SAGR,qBAAKc,MAAO,CAACE,QAAQ,OAAQC,eAAgB,UAA7C,SACI,cAACC,EAAA,EAAD,CAAQnJ,QAAQ,UAAUL,KAAK,KAAKyI,KAAK,SAAzC,SAAmD9I,EAAE,sB,wBC/DtE8J,EApRO,SAAC,GAAgB,IAAf9J,EAAc,EAAdA,EAAG2C,EAAW,EAAXA,OACjBzC,EAAUC,cAEhB,EAA4ByC,oBAAS,WAEjC,OADcG,KAAKC,MAAMd,eAAee,QAAQ,aAChCC,KAFpB,mBAAOC,EAAP,KAIA,GAJA,KAIkCP,oBAAS,WAEvC,OADcG,KAAKC,MAAMd,eAAee,QAAQ,gBAChCC,MAFpB,mBAAOE,EAAP,KAKA,GALA,KAK0BR,mBAAS,KAAnC,mBAAOmH,EAAP,KAAcC,EAAd,KACA,EAAwCpH,wBAASM,GAAjD,mBAAO+G,EAAP,KAAqBC,EAArB,KACA,EAAsCtH,wBAASM,GAA/C,mBAAOiH,EAAP,KAAoBC,EAApB,KACA,EAA8CxH,wBAASM,GAAvD,mBAAOmH,EAAP,KAAwBC,EAAxB,KACA,EAA4B1H,mBAAS,IAArC,mBAAO2F,EAAP,KAAegC,EAAf,KACMC,EAAMC,mBACZ,EAAgC7H,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAMAqD,qBAAU,WACN,IAAIC,EAAa,IAAIC,gBAcrB,OAZA,sBAAC,4BAAAC,EAAA,uEAE2BpD,IAAjB+G,EAFV,gCAGsCS,IAHtC,OAGiBC,EAHjB,OAIWX,EAASW,GACTvE,EAAa,KALxB,uDAQOK,QAAQC,IAAR,MACA5D,GAAY,GATnB,wDAAD,GAYO,kCAAKsD,SAAL,aAAK,EAAYO,WAE1B,CAACsD,IAEH9D,qBAAU,WACN,IAAIC,EAAa,IAAIC,gBAerB,OAbA,sBAAC,4BAAAC,EAAA,8DACsBpD,IAAhBiH,EADN,0CAGsCO,IAHtC,OAGiBC,EAHjB,OAIWX,EAASW,GACTP,OAAelH,GACfkD,EAAa,KANxB,kDAQWK,QAAQC,IAAR,MACA5D,GAAY,GATvB,yDAAD,GAaO,kCAAKsD,SAAL,aAAK,EAAYO,WAE1B,CAACwD,IAEH,IAAMO,EAAiB,uCAAG,8BAAApE,EAAA,sEACJO,MAAM,GAAD,OAAItE,EAAJ,qBAAwBY,EAAxB,UAAuC,CAC1D2D,QAAS,CAAC,+BAA4B1D,MAFpB,cAIJ,OAHZ2D,EADgB,QAIfC,QACHlE,GAAY,GALM,SAOHiE,EAAIE,OAPD,cAOhBjC,EAPgB,yBASfA,GATe,2CAAH,qDAYjB4F,EAAkB,SAACC,GACrB,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACzB,IAAMC,EAAa,IAAIC,WACvBD,EAAWE,cAAcN,GACzBI,EAAWG,OAAS,WAChBL,EAAQE,EAAWI,SAEvBJ,EAAWK,QAAU,SAACC,GAClBP,EAAOO,QAKbC,EAAgB,uCAAG,WAAOnC,GAAP,mCAAA/C,EAAA,6DACfuE,EAAOxB,EAAEC,OAAOS,MAAM,GADP,SAEAa,EAAgBC,GAFhB,OAOrB,IALMY,EAFe,OAGjBzG,EAAOyG,EAAOzH,MAAM,WAAW,GAC/B0H,EAAaC,KAAK3G,GAElB4G,EAAc,IAAIC,MAAMH,EAAWI,QAC/BC,EAAI,EAAGA,EAAIL,EAAWI,OAAQC,IAClCH,EAAYG,GAAKL,EAAWM,WAAWD,GAEvCjI,EAAO,IAAImI,WAAWL,GACtBM,EAAQL,MAAMM,KAAKrI,GAEnBtB,EAAQ,IAAIC,KACZ2J,EAAO5J,EAAM6J,cAAc,KAAK7J,EAAM8J,WAAW,GAAG,IAAI9J,EAAM+J,UAE9DC,EAAe,CACf,YAAgBJ,EAChB,KAASF,EACT,KAAS7C,EAAEC,OAAOS,MAAM,GAAGjB,KAC3B,KAASO,EAAEC,OAAOS,MAAM,GAAGhB,MAE/BmB,EAAgBsC,GAtBK,4CAAH,sDAyBfpE,EAAe,SAACiB,GACnBA,EAAEoD,iBAEF,IAAMlE,EAASmE,IAEZC,OAAOC,KAAKrE,GAAQuD,OAAS,EAC5BvB,EAAUhC,QAEUrF,IAAjB+G,QAAkD/G,IAApBmH,IAC7BJ,EAAY,YAAkBI,EAE9BxD,MAAM,GAAD,OAAItE,EAAJ,qBAAwBY,EAAxB,UAAuC,CACxCmE,OAAS,OACTR,QAAS,CACL,+BAA4B1D,GAC5B,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCb,IAEtCgF,KAAMxE,KAAKyE,UAAUyC,KACtBxC,MAAK,SAACV,GACLmD,OAAgBhH,GAChBoH,EAAmB,IAjH/BE,EAAIqC,QAAQtD,MAAQ,GAmHU,MAAfxC,EAAIC,QACHlE,GAAY,MAGf+E,OAAM,SAAAC,GAAG,OAAErB,QAAQC,IAAIoB,QAmCjC4E,EAAiB,WACpB,IAAMI,EAAY,GAelB,YAZoB5J,IAAjB+G,IACC6C,EAAUjC,KAAO7K,EAAE,yBAGAkD,IAApBmH,GAAqD,KAApBA,IAChCyC,EAAUC,YAAc/M,EAAE,8BAGVkD,IAAjB+G,GAVe,CAAC,YAAa,aAAc,kBAAmB,sBAUrB+C,SAAS/C,EAAanB,QAC9DgE,EAAUjC,KAAO7K,EAAE,2BAGhB8M,GAGX,OAAgB,IAAbjK,GACCF,EAAOzC,GAEH,8BAIA,sBAAKY,UAAU,YAAf,UACI,qBAAKA,UAAU,aAAf,SACI,6BAAKd,EAAE,kBAEX,eAACwI,EAAA,EAAD,CAAM1H,UAAU,qBAAhB,UACI,eAAC0H,EAAA,EAAKG,MAAN,CAAYsE,UAAU,OAAOnM,UAAU,OAAvC,UACI,cAAC0H,EAAA,EAAKI,MAAN,UAAa5I,EAAE,UACf,cAACwI,EAAA,EAAKK,QAAN,CAAcqE,GAAG,QAAQ1C,IAAKA,EAAK1B,KAAK,OAAOI,YAAaX,EAAOsC,KAAMzB,SAAU,SAACC,GAChFmC,EAAiBnC,GACXd,EAAM,MACRgC,EAAU,2BACHhC,GADE,kBAEJ,OAAS,WAGtB,cAACC,EAAA,EAAKK,QAAQW,SAAd,CAAuBV,KAAK,UAA5B,SAAuCP,EAAOsC,UAElD,eAACrC,EAAA,EAAKG,MAAN,CAAYsE,UAAU,cAAcnM,UAAU,OAA9C,UACI,cAAC0H,EAAA,EAAKI,MAAN,UAAa5I,EAAE,qBACf,cAACwI,EAAA,EAAKK,QAAN,CAAcqE,GAAG,WAAW3D,MAAOc,EAAiBnB,YAAaX,EAAOwE,YAC1D3D,SAAU,SAACC,GACPiB,EAAmBjB,EAAEC,OAAOC,OACtBhB,EAAM,aACRgC,EAAU,2BACHhC,GADE,kBAEJ,cAAgB,WAG3C,cAACC,EAAA,EAAKK,QAAQW,SAAd,CAAuBV,KAAK,UAA5B,SAAuCP,EAAOwE,iBAElD,qBAAKtD,MAAO,CAACE,QAAS,OAAQC,eAAgB,UAA9C,SACI,cAACC,EAAA,EAAD,CAAQnJ,QAAQ,UAAUsB,QAAS,SAACqH,GAAD,OAAOjB,EAAaiB,IAAvD,SAA4DrJ,EAAE,kBAGrE+J,EAAM+B,OAAS,EACZ,eAACqB,EAAA,EAAD,CAAOrM,UAAU,6CAA6C2I,MAAO,CAAC2D,MAAO,OAA7E,UACI,uBAAO3D,MAAO,CAAC4D,gBAAiB,WAAhC,SACA,+BACI,6BAAKrN,EAAE,oBACP,6BAAKA,EAAE,qBACP,6BAAKA,EAAE,gBACP,6BAAKA,EAAE,iBAGX,gCACC+J,EAAMuD,KAAI,SAACzC,GAAD,OACP,+BACI,6BAAKA,EAAK9B,OACV,6BAAK8B,EAAKkC,cACV,6BAAKlC,EAAK0C,aACV,6BACI,qBAAIzM,UAAU,cAAd,UACI,6BACI,cAAC+I,EAAA,EAAD,CAAQnJ,QAAQ,UAAU8M,KAAI,UAAKjL,EAAL,qBAAyBY,EAAzB,kBAAyC0H,EAAKtJ,IACpES,QAAS,SAAAqH,GAAC,OA9G9B,SAACA,EAAGwB,GAC3BxB,EAAEoD,iBACF5F,MAAM,GAAD,OAAItE,EAAJ,qBAAwBY,EAAxB,kBAAwC0H,EAAKtJ,IAAK,CACnDuF,QAAS,CAAC,+BAA4B1D,MAErCqE,MAAK,SAAAV,GAAG,OAAIA,EAAIE,UAChBQ,MAAK,SAAAV,GACF,IAAIT,EAAIoB,OAAO+F,SAASC,cAAc,KAClCC,EAAU,IAAI1B,WAAWlF,EAAI8D,MACjCvE,EAAEkH,KAAO9F,OAAOkG,IAAIC,gBAAgB,IAAIC,KAAK,CAACH,GAAU,CAAC7E,KAAM+B,EAAK/B,QACpExC,EAAEyH,SAAWhH,EAAIgC,KACjB0E,SAASlG,KAAKyG,YAAY1H,GAC1BA,EAAE2H,QACFR,SAASlG,KAAK2G,YAAY5H,MAiGuB6H,CAAmB9E,EAAGwB,IAD5C,SACoD7K,EAAE,gBAE1D,6BACI,cAAC6J,EAAA,EAAD,CAAQnJ,QAAQ,SAAS8M,KAAI,UAAKjL,EAAL,qBAAyBY,EAAzB,kBAAyC0H,EAAKtJ,IACnES,QAAS,SAAAqH,GACLe,EAAeS,GAlGvC,SAACxB,EAAGwB,GAC5BxB,EAAEoD,iBAEF5F,MAAM,GAAD,OAAItE,EAAJ,qBAAwBY,EAAxB,kBAAwC0H,EAAKtJ,IAAK,CACnDuF,QAAS,CAAC,+BAA4B1D,IACtCkE,OAAQ,WACTG,MAAK,SAAAV,GACc,MAAfA,EAAIC,QACHlE,GAAY,MAEjB+E,OAAM,SAAAC,GAAG,OAAIrB,QAAQC,IAAIoB,MAyFoBsG,CAAmB/E,EAAGwB,IAHlC,SAIY7K,EAAE,qBAfrB6K,EAAKtJ,YAsBXvB,EAAE,e,yBCtHlBqO,EArJK,SAAC,GAAsD,IAArDC,EAAoD,EAApDA,YAAaC,EAAuC,EAAvCA,wBAAyBvO,EAAc,EAAdA,EAAG2C,EAAW,EAAXA,OACrDzC,EAAUC,cAChB,EAAgCyC,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAkCF,oBAAS,WAEvC,OADcG,KAAKC,MAAMd,eAAee,QAAQ,gBAChCC,KAFpB,mBAAOE,EAAP,KAKA,GALA,KAK8BR,mBAAS0L,IAAvC,mBAAOE,EAAP,KAAYC,EAAZ,KACA,EAAwB7L,oBAAS,GAAjC,mBAAO8L,EAAP,KAAaC,EAAb,KAGMC,EAAW,WACXC,EAAY,YACZC,EAAO,OAETC,EAAuC,KAAlC,IAAItM,MAAQuM,oBAErB7I,qBAAU,gBACWjD,IAAdoL,GACCG,EAAeH,KAEpB,CAACA,IAEJ,IAiDMW,EAAY,SAAA7C,GAAI,OAAIA,EAAK8C,cAAcC,MAAM,EAAG,KACtD,OAAgB,IAAbtM,GACCF,EAAOzC,GAEH,8BAIA,sBACIY,UAAW0N,EAAIpC,KAAS,IAAI3J,MAAK,IAAIA,MAAO2M,SAAQ,IAAI3M,MAAO8J,UAAY,IAAO,IAAI9J,KAAK+L,EAAIpC,KAAK+C,MAAM,EAAG,MAAUX,EAAIa,QAAUT,EAAY,oCAC1I,IAAInM,MAAK,IAAIA,MAAO2M,SAAQ,IAAI3M,MAAO8J,UAAY,IAAKA,YAAe,IAAI9J,KAAK+L,EAAIpC,KAAK+C,MAAM,EAAG,KAAM5C,WAAciC,EAAIa,QAAUT,EAAY,qCAC7IK,EAAU,IAAIxM,QAAY+L,EAAIpC,KAAK+C,MAAM,EAAG,KAAW,IAAI1M,MAAK,IAAIA,MAAO2M,SAAQ,IAAI3M,MAAO8J,UAAY,IAAKA,YAAe,IAAI9J,KAAK+L,EAAIpC,KAAK+C,MAAM,EAAG,KAAM5C,WAAaiC,EAAIa,QAAUR,EAAc,iCACtM,oCAAuC,GAAI7M,QAAS,SAAAqH,GAAC,OA7DzD,SAACA,GACjBA,EAAEoD,iBACFkC,GAASD,GA2DoEY,CAAYjG,IAJrF,UAKI,sBAAKvI,UAAU,MAAf,UACI,mBAAGA,UAAU,8BAAb,SAA6C0N,EAAIe,QAAWvP,EAAEwO,EAAIe,QAAQxG,MAAS/I,EAAEwO,EAAIgB,eACzF,sBAAK1O,UAAU,OAAf,UACI,4BAAId,EAAE,UACN,4BAAIsO,EAAYlC,KAAO,IAAI3J,KAAK,IAAIA,KAAK6L,EAAYlC,MAAQ2C,GAAGG,cAAcC,MAAM,EAAG,IAAM,KAC7F,4BAAIb,EAAYlC,KAAO,IAAI3J,KAAK,IAAIA,KAAK6L,EAAYlC,MAAQ2C,GAAGG,cAAcC,MAAM,GAAI,IAAM,KAC5Fb,EAAYe,QAAUP,GAASG,EAAU,IAAIxM,QAAY+L,EAAIpC,KAAK+C,MAAM,EAAG,KAC7E,4BAAG,cAAC,IAAD,CAAa9O,KAAM,GAAIoJ,MAAO,CAACC,MAAO,qBAGhD8E,EAAIpC,KACD,sBAAK3C,MAAO,CAACE,QAAS,OAAQC,eAAgB,iBAA9C,UACI,gCACI,cAAC,IAAD,CAAWvJ,KAAM,KAChBL,EAAE,eAFP,OAE8BwO,EAAIiB,OAAUjB,EAAIiB,OAAOjM,UAAY,IAAMgL,EAAIiB,OAAO7L,SAAY,MAEhG,sBAAK6F,MAAO,CAACE,QAAS,eAAtB,UACI,qBAAKF,MAAO,CAACiG,OAAQ,OAArB,SACQ,IAAIjN,MAAK,IAAIA,MAAO2M,SAAQ,IAAI3M,MAAO8J,UAAY,IAAKA,YAAe,IAAI9J,KAAK+L,EAAIpC,KAAK+C,MAAM,EAAG,KAAM5C,WAAeiC,EAAIa,QAAUT,GACzI,cAAC/E,EAAA,EAAD,CAAQnJ,QAAQ,kBAAkBL,KAAK,KAC/B2B,QAAS,SAAAqH,GAAC,OA7EnB,SAACA,GACxBA,EAAEoD,iBACF,IAAIkD,EAAenB,EACnBmB,EAAaN,MAAQR,EACrBJ,EAAekB,GAEf9I,MAAM,GAAD,OAAItE,EAAJ,yBAA4B+L,EAAY/M,GAAxC,YAAsD,CACvD+F,OAAQ,QACRR,QAAQ,CACJ,eAAgB,mBAChB,+BAA4B1D,MAEjCqE,MAAK,SAACV,GACLA,EAAIE,OACc,MAAfF,EAAIC,OACHlE,GAAY,GAEZ4E,OAAOC,MAAM3H,EAAE,gCAEpB6H,OAAM,SAACC,GAAD,OAAOrB,QAAQC,IAAIoB,MA0DkB8H,CAAmBvG,IADzC,SAC8CrJ,EAAE,iCAGpD,qBAAKyJ,MAAO,CAACiG,OAAQ,OAArB,SACMlB,EAAIa,QAAUT,GAChB,cAAC/E,EAAA,EAAD,CAAQnJ,QAAQ,kBAAkBL,KAAK,KAC/B2B,QAAS,SAAAqH,GAAC,OA7DnB,SAACA,GACxBA,EAAEoD,iBACF,IAAIoD,EAAerB,EACnBqB,EAAaR,MA3CC,YA4Cdd,EAAwBsB,GAExBhJ,MAAM,GAAD,OAAItE,EAAJ,yBAA4B+L,EAAY/M,GAAxC,WAAoD,CACrD+F,OAAQ,QACRR,QAAQ,CACJ,eAAgB,mBAChB,+BAA4B1D,MAEjCqE,MAAK,SAACV,GACLA,EAAIE,OACc,MAAfF,EAAIC,OACHlE,GAAY,GAEZ4E,OAAOC,MAAM3H,EAAE,+BAEpB6H,OAAM,SAACC,GAAD,OAAOrB,QAAQC,IAAIoB,MA0CkBgI,CAAmBzG,IADzC,SAC8CrJ,EAAE,sCAInD,GACXwO,EAAIa,QAAUP,EACZ,mCACKJ,EACG,gCACI,uBACA,sBAAK5N,UAAU,cAAf,UACI,cAAC,IAAD,CAAST,KAAM,KACf,mBAAGS,UAAU,SAAb,SAAuBd,EAAE,wBAE7B,6BACI,6BAAKwO,EAAIuB,gBAAkBvB,EAAIuB,gBAAkB/P,EAAE,yBAEvD,uBAEA,sBAAKc,UAAU,cAAf,UACI,cAAC,IAAD,CAAQT,KAAM,KACd,mBAAGS,UAAU,SAAb,SAAuBd,EAAE,qBAE7B,4BAAIwO,EAAIwB,gBAAgBlE,OAAS,EAAK0C,EAAIwB,gBAAgB1C,KAAI,SAACxJ,GAAD,OAAUA,EAAKmM,sBAAuBjQ,EAAE,gBACtG,uBAEA,sBAAKc,UAAU,cAAf,UACI,cAAC,IAAD,CAAaT,KAAM,KACnB,mBAAGS,UAAU,SAAb,SAAuBd,EAAE,iBAE7B,4BAAIwO,EAAI0B,cAAcpE,OAAS,EAAI9L,EAAE,kBAAoBA,EAAE,mBACrD,OACZ,S,kBCiGXmQ,EAlPS,SAAC,GAAgB,IAAfnQ,EAAc,EAAdA,EAAG2C,EAAW,EAAXA,OACrBzC,EAAUC,cACd,EAAgCyC,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAIM8L,EAAW,WAIjB,EAA4BhM,oBAAS,WAEjC,OADoBG,KAAKC,MAAMd,eAAee,QAAQ,aAChCC,KAF1B,mBAAOC,EAAP,KAIA,GAJA,KAIkCP,oBAAS,WAEvC,OADmBG,KAAKC,MAAMd,eAAee,QAAQ,gBAChCC,MAFzB,mBAAOE,EAAP,KAKA,GALA,KAKwCR,mBAAS,KAAjD,mBAAOwN,EAAP,KAAqBC,EAArB,KACA,EAA8BzN,wBAASM,GAAvC,mBAAOoN,EAAP,KAAgBC,EAAhB,KACA,EAAwD3N,mBAAS,CAACwN,IAAlE,mBAAOI,EAAP,KAA6BC,EAA7B,KACA,EAAuD7N,wBAASM,GAAhE,mBAAOwN,EAAP,KAA4BnC,EAA5B,KAEMoC,EAAY,CAAC,EAAG,EAAG,IACzB,EAAwB/N,mBAAS,GAAjC,mBAAOgO,EAAP,KAAaC,EAAb,KACA,EAA0BjO,mBAAS,GAAnC,mBAAOkO,EAAP,KAAcC,EAAd,KACA,EAAgCnO,mBAAS+N,EAAU,IAAnD,mBAAOK,EAAP,KAAiBC,GAAjB,KAEMC,GAAmB,SAACN,EAAMI,GAC5B,IAAIG,EAAS,GAQb,OANGP,IACCO,EAAM,KAAWP,EAAO,GAEzBI,IACCG,EAAM,KAAWH,GAEdG,GAGXhL,qBAAU,WACN,IAAIC,EAAa,IAAIC,gBAmCrB,OAjCA,sBAAC,oCAAAC,EAAA,6DACO8K,EAAe,GACfC,EAAgB,GAChBC,EAAe,GACfC,EAAa,GACbC,EAAU,GALjB,kBAOaC,KACDhK,MAAK,SAAAV,GACFgK,EAAShK,EAAI2K,YACb3K,EAAIqJ,aAAa9C,KAAI,SAACkB,GACb,IAAI/L,KAAK+L,EAAIpC,KAAK+C,MAAM,EAAE,KAAQ,IAAI1M,MAAK,IAAIA,MAAO2M,SAAQ,IAAI3M,MAAO8J,UAAU,KAAMiC,EAAIa,QAAUT,EACxG0C,EAAajP,KAAKmM,GACX,IAAI/L,MAAK,IAAIA,MAAO2M,SAAQ,IAAI3M,MAAO8J,UAAU,IAAKA,YAAe,IAAI9J,KAAK+L,EAAIpC,KAAK+C,MAAM,EAAE,KAAM5C,WAAciC,EAAIa,QAAUT,EACxIyC,EAAehP,KAAKmM,GAnD9B,cAoDeA,EAAIa,MACT+B,EAAa/O,KAAKmM,GApDjC,SAqDoBA,EAAIa,OACTkC,EAAWlP,KAAKmM,SAGzB/G,MAAK,WACJ2J,EAAeA,EAAaO,MAAK,SAACrL,EAAEsL,GAAH,OAAO,IAAInP,KAAK6D,EAAE8F,MAAQ,IAAI3J,KAAKmP,EAAExF,SACtEoF,EAAS,UAAOH,EAAP,YAA0BD,GAAiBE,EAAiBC,MAvBpF,OAyBOlB,EAAgBmB,GAChBf,EAAwBe,GACxBpL,EAAa,KA3BpB,kDA6BOK,QAAQC,IAAR,MACA5D,GAAY,GA9BnB,yDAAD,GAiCO,kCAAMsD,SAAN,aAAM,EAAYO,WAE1B,CAAC+J,EAAqBE,EAAMI,IAG/B,IAAMa,GAAa,SAACrD,GAChB,OAAuB,MAAhBA,EAAIsD,WAGf3L,qBAAU,WACN,QAAyBjD,IAAtBwN,EAAgC,CAC/B,IAAMrF,EAAS+E,EAAa2B,OAAOF,IACnCxB,EAAgBhF,MAEtB,CAACqF,IAGH,IAAMe,GAAiB,uCAAG,gCAAAnL,EAAA,yDAGH,QAFb6K,EAASD,GAAiBN,EAAMI,IAE5BJ,MAAiC,OAAhBO,EAAO9Q,KAHZ,gCAINwG,MAAM,GAAD,OAAItE,EAAJ,qBAAwBY,EAAxB,8BAAoDgO,EAAOP,KAA3D,iBAAwEO,EAAO9Q,MAAO,CACnGyG,QAAS,CAAC,+BAA4B1D,MALxB,OAOA,OAHlB2D,EAJkB,QAOXC,QACHlE,GAAY,GARE,0BAWG,OAAhBqO,EAAOP,MAAiC,OAAhBO,EAAO9Q,KAXlB,kCAYNwG,MAAM,GAAD,OAAItE,EAAJ,qBAAwBY,EAAxB,8BAAoDgO,EAAOP,MAAO,CAC/E9J,QAAS,CAAC,+BAA4B1D,MAbxB,QAeA,OAHlB2D,EAZkB,QAeXC,QACHlE,GAAY,GAhBE,2BAmBG,OAAhBqO,EAAOP,MAAiC,OAAhBO,EAAO9Q,KAnBlB,kCAoBNwG,MAAM,GAAD,OAAItE,EAAJ,qBAAwBY,EAAxB,8BAAoDgO,EAAO9Q,MAAO,CAC/EyG,QAAS,CAAC,+BAA4B1D,MArBxB,QAuBA,OAHlB2D,EApBkB,QAuBXC,QACHlE,GAAY,GAxBE,yCA4BN+D,MAAM,GAAD,OAAItE,EAAJ,qBAAwBY,EAAxB,iBAA8C,CAC3D2D,QAAS,CAAC,+BAA4B1D,MA7BxB,QA+BA,OAHlB2D,EA5BkB,QA+BXC,QACHlE,GAAY,GAhCE,yBAmCHiE,EAAIE,OAnCD,eAmChBjC,EAnCgB,yBAqCfA,GArCe,4CAAH,qDA8EvB,OAAgB,IAAbnC,GACCF,EAAOzC,GAEH,8BAIA,sBAAKY,UAAU,YAAf,UACI,qBAAKA,UAAU,aAAf,SACI,6BAAKd,EAAE,wBAEX,qBAAKc,UAAU,wBAAf,SACI,sBAAKA,UAAU,sBAAf,UACI,sBAAKA,UAAU,aAAf,UACI,sBAAKA,UAAU,WAAf,UACI,uBAAOgI,KAAK,QAAQvH,GAAG,MAAMwH,KAAK,MAAMQ,MAAM,MAAMH,SAlC1D,WAClBqH,EAAwBL,MAkCA,uBAAO4B,QAAQ,MAAf,SAAsBhS,EAAE,YAE5B,sBAAKc,UAAU,WAAf,UACI,uBAAOgI,KAAK,QAAQvH,GAAG,SAASwH,KAAK,MAAMQ,MAAM,SAC1CH,SAjDN,WACzB,IAAI6I,EAAuB7B,EAAa2B,QAAO,SAAAzD,GAAW,MA5I7C,aA4IkDA,EAAYxF,QAC3E2H,EAAwBwB,MAgDA,uBAAOD,QAAQ,SAAf,SAAyBhS,EAAE,4BAE/B,sBAAKc,UAAU,WAAf,UACI,uBAAOgI,KAAK,QAAQvH,GAAG,OAAOwH,KAAK,MAAMQ,MAAM,OAAOH,SAhDxD,WACtB,IAAI8I,EAAoB9B,EAAa2B,QAAO,SAAAzD,GAAW,MAhJ7C,cAgJkDA,EAAYxF,QACxE2H,EAAwByB,MA+CA,uBAAOF,QAAQ,OAAf,SAAuBhS,EAAE,4BAGjC,8BACI,wBAAQc,UAAU,eAAekB,QAjCrC,WAChB9B,EAAQmC,KAAK,qBAgCO,SAAwDrC,EAAE,4BAItE,sBAAKc,UAAU,OAAf,UACI,qBAAKA,UAAU,UAAf,SACI,cAAC0H,EAAA,EAAD,UACI,eAACA,EAAA,EAAKG,MAAN,WACI,cAACH,EAAA,EAAKI,MAAN,UAAa5I,EAAE,UACf,cAACwI,EAAA,EAAKK,QAAN,CAAcC,KAAK,OAAOM,SAAU,SAACC,GACjCkH,EAAWlH,EAAEC,OAAOC,OAtD3B,SAACF,GAEtB,GADAA,EAAEoD,iBACCpD,EAAEC,OAAOC,MAAM,EACL,IAAI9G,MAAQuM,oBAArB,IACImD,EAA6B/B,EAAa2B,QAAO,SAAAzD,GAAW,OAAKA,EAAYlC,KAAK+C,MAAM,EAAE,MAAQ9F,EAAEC,OAAOC,SAC/GkH,EAAwB0B,QAExB5B,GAAqB,IAAI9N,MAjKFyM,cAAcC,MAAM,EAAE,KAiNrBiD,CAAiB/I,IAClBE,MAAO+G,WAItB,sBAAKxP,UAAU,cAAc2I,MAAO,CAAC4I,OAAQ,MAA7C,UACI,8BAAIrS,EAAE,kBAAN,UACA,wBAAQoJ,SAjFC,SAACkJ,GAC1BrB,GAAYqB,EAAMhJ,OAAOC,OACzBsH,EAAQ,IA+EgDtH,MAAOyH,EAA/C,SACKL,EAAUrD,KAAI,SAACjN,GAAD,OACX,wBAAmBkJ,MAAOlJ,EAA1B,SACKA,GADQA,cAQ7B,qBAAKS,UAAU,kBAAf,SACK0P,EAAqBlD,KAAI,SAACgB,GAAD,OACtB,cAAC,EAAD,CAAkCA,YAAaA,EAClCC,wBAAyBA,EAAyBvO,EAAGA,EAAG2C,OAAQA,GAD3D2L,EAAY/M,SAItC,cAACgR,EAAA,EAAD,CAAYzR,UAAU,OAAOgQ,MAAOA,EAAOF,KAAMA,EAAM4B,aAAc,EAAGC,cAAe,EAC3ElP,MAAM,UAAU6F,SAtGf,SAACkJ,EAAO/I,GAC7BsH,EAAQtH,UC0RDmJ,eAhaY,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,gBAAiB3S,EAAc,EAAdA,EAAG2C,EAAW,EAAXA,OAC7C,EAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA4BF,oBAAS,WAEjC,OADcG,KAAKC,MAAMd,eAAee,QAAQ,aAChCC,KAFpB,mBAAOC,EAAP,KAIA,GAJA,KAIkCP,oBAAS,WAEvC,OADcG,KAAKC,MAAMd,eAAee,QAAQ,gBAChCC,MAFpB,mBAAOE,EAAP,KAKIlD,GALJ,KAKcC,eACR8O,EAAY,SAAA7C,GAAI,OAAIA,EAAK8C,cAAcC,MAAM,EAAE,KAC/CyD,EAAW1S,EAAQ2S,SAASxD,MAC5ByD,EAAY,CAAC,SAAU,WAE7B,EAA8ClQ,wBAASM,GAAvD,mBAAO6P,EAAP,KAAwBC,EAAxB,KACA,EAAgCpQ,mBAASkQ,EAAU,IAAnD,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA8BtQ,wBAASM,GAAvC,mBAAOqM,EAAP,KAAgB4D,EAAhB,KACA,EAAgDvQ,mBAASgQ,QAAsB1P,GAA/E,mBAAOkQ,EAAP,KAAyBC,EAAzB,KACA,EAAgDzQ,mBAASwQ,QAAsClQ,GAA/F,mBAAOoQ,EAAP,KAAyBC,EAAzB,KACA,EAAoC3Q,wBAASM,GAA7C,mBAAOuM,EAAP,KAAe+D,GAAf,KAEA,GAAkC5Q,mBAAS,IAA3C,qBAAO6Q,GAAP,MAAkBC,GAAlB,MACA,GAAgC9Q,mBAAS,IAAzC,qBAAO+Q,GAAP,MAAiBC,GAAjB,MACA,GAA8BhR,mBAAS,IAAvC,qBAAOiR,GAAP,MAAgBC,GAAhB,MACA,GAAgClR,mBAASqM,EAAU,IAAIxM,OAAvD,qBAAOsR,GAAP,MAAiBC,GAAjB,MACA,GAA4BpR,mBAASqM,EAAU,IAAIxM,MAAK,IAAIA,MAAO2M,SAAQ,IAAI3M,MAAO8J,UAAU,OAAhG,qBAAO0H,GAAP,MAAeC,GAAf,MACA,GAA4BtR,mBAAS,IAArC,qBAAO2F,GAAP,MAAegC,GAAf,MAEApE,qBAAU,WACN,IAAIC,EAAa,IAAIC,gBAErB,QAAuBnD,IAApB6P,EACC,MAAuB,aAApBA,GACC,sBAAC,4BAAAzM,EAAA,+EAE8B6N,IAAc,GAF5C,QAEaR,EAFb,QAGgBS,SAAQ,SAAA7E,GAAO,OAAIA,EAAQxG,KAAO/I,EAAEuP,EAAQxG,SACrD6K,GAAYD,GACZvN,EAAa,KALpB,gDAOOK,QAAQC,IAAR,MACA5D,GAAY,GARnB,wDAAD,GAWM,kCAAKsD,SAAL,aAAK,EAAYO,WAGvB,sBAAC,4BAAAL,EAAA,+EAE8B6N,IAAc,GAF5C,QAEaR,EAFb,QAGgBS,SAAQ,SAAA7E,GAAO,OAAIA,EAAQxG,KAAO/I,EAAEuP,EAAQxG,SACrD6K,GAAYD,GACZvN,EAAa,KALpB,gDAOOK,QAAQC,IAAR,MACA5D,GAAY,GARnB,wDAAD,GAYO,kCAAKsD,SAAL,aAAK,EAAYO,YAGlC,CAACoM,IAEH5M,qBAAU,WACN,IAAIC,EAAa,IAAIC,gBAErB,QAAenD,IAAZqM,EAcC,OAbA,sBAAC,4BAAAjJ,EAAA,+EAE6B+N,KAF7B,OAEaR,EAFb,OAGOC,GAAWD,GACUpG,SAAS6G,cAAc,YAC/BC,UAAW,EACxBnO,EAAa,KANpB,kDAQOK,QAAQC,IAAR,MACA5D,GAAY,GATnB,yDAAD,GAaO,kCAAMsD,SAAN,aAAM,EAAYO,WAE/B,CAAC4I,IAEHpJ,qBAAU,WACN,QAAwBjD,IAArBkQ,EAA+B,CAI9B,GAHAG,EAAoBH,GACN3F,SAAS+G,eAAe,oBAC9BjL,MAAQ6J,GACuC,IAApDA,EAAiBqB,eAAeC,gBAC/B1B,EAAmB,YACMvF,SAAS6G,cAAc,aAC/BK,SAAU,OAE3B3B,EAAmB,SACGvF,SAAS6G,cAAc,UAC/BK,SAAU,EAE5BvB,EAAiBqB,eAAe1L,KAAO/I,EAAEoT,EAAiBqB,eAAe1L,MACzEoK,EAAWC,EAAiBqB,gBACNhH,SAAS6G,cAAc,kBAC/BC,UAAW,KAG/B,CAACnB,IAEHjN,qBAAU,WACN,QAAwBjD,IAArBoQ,EAA+B,CAG9B,GAFc7F,SAAS+G,eAAe,oBAC9BjL,MAAQ+J,GACuC,IAApDA,EAAiBmB,eAAeC,gBAAyB,CACxD1B,EAAmB,YACnB,IAAM4B,EAAmBnH,SAAS6G,cAAc,aAChDM,EAAiBD,SAAU,EAC3BC,EAAiBL,UAAW,EACN9G,SAAS6G,cAAc,UAC/BC,UAAW,MACxB,CACDvB,EAAmB,SACnB,IAAM6B,EAAgBpH,SAAS6G,cAAc,UAC7CO,EAAcF,SAAU,EACxBE,EAAcN,UAAW,EACA9G,SAAS6G,cAAc,aAC/BC,UAAW,EAEhCpB,EAAWG,EAAiBmB,gBACNhH,SAAS6G,cAAc,kBAC/BC,UAAW,KAG9B,CAACjB,IAEJnN,qBAAU,WACN,IAAIC,EAAa,IAAIC,gBAiBrB,OAfA,sBAAC,gCAAAC,EAAA,6DACS2I,EAAY,SAAA7C,GAAI,OAAIA,EAAK8C,cAAcC,MAAM,EAAG,KADzD,kBAG+B2F,KAH/B,OAGarB,EAHb,QAIasB,EAAqBtB,EAAUA,UAAU1B,QAAO,SAAAvH,GAAG,OAAGyE,EAAU,IAAIxM,KAAK+H,EAAIwK,cAAgB/F,EAAU,IAAIxM,UAC9F2R,SAAQ,SAAAxB,GACvBA,EAAS6B,eAAe1L,KAAO/I,EAAE4S,EAAS6B,eAAe1L,SAE7D2K,GAAaqB,GACb3O,EAAa,KATpB,kDAWOK,QAAQC,IAAR,MACA5D,GAAY,GAZnB,yDAAD,GAeO,kCAAMsD,SAAN,aAAM,EAAYO,WAC1B,IAGH,IAAMmO,GAAc,uCAAG,8BAAAxO,EAAA,sEACDO,MAAM,GAAD,OAAItE,EAAJ,qBAAwBY,EAAxB,uBAAoD,CACvE2D,QAAS,CAAC,+BAA4B1D,MAFvB,cAKD,OAJZ2D,EADa,QAKZC,QACHlE,GAAY,GANG,SASAiE,EAAIE,OATJ,cASbjC,EATa,yBAWZA,GAXY,2CAAH,qDAcdqP,GAAY,uCAAG,8BAAA/N,EAAA,yDAED,WAAb2M,EAFc,gCAGDpM,MAAM,GAAD,OAAItE,EAAJ,0DAA6DgN,EAAQhO,IAAK,CACvFuF,QAAS,CAAC,+BAA4B1D,MAJ7B,OAMK,OAHlB2D,EAHa,QAMNC,QACHlE,GAAY,GAPH,uCAUD+D,MAAM,GAAD,OAAItE,EAAJ,0DAA6DgN,EAAQhO,IAAK,CACvFuF,QAAS,CAAC,+BAA4B1D,MAX7B,OAaK,OAHlB2D,EAVa,QAaNC,QACHlE,GAAY,GAdH,yBAkBEiE,EAAIE,OAlBN,eAkBXjC,EAlBW,yBAoBVA,GApBU,4CAAH,qDAuBZmP,GAAa,uCAAG,WAAOrL,GAAP,iBAAAxC,EAAA,0DAEN,IAATwC,EAFe,gCAGFjC,MAAM,GAAD,OAAItE,EAAJ,kCAA4C,CACzDuE,QAAS,CAAC,+BAA4B1D,MAJ5B,OAMI,OAHlB2D,EAHc,QAMPC,QACHlE,GAAY,GAPF,uCAUF+D,MAAM,GAAD,OAAItE,EAAJ,mCAA6C,CAC1DuE,QAAS,CAAC,+BAA4B1D,MAX5B,OAaI,OAHlB2D,EAVc,QAaPC,QACHlE,GAAY,GAdF,yBAkBCiE,EAAIE,OAlBL,eAkBZjC,EAlBY,yBAoBXA,GApBW,4CAAH,sDAqCbiQ,GAAsB,SAAC5L,GACzBA,EAAEoD,iBACF8G,OAAoBrQ,GACpBmQ,OAAoBnQ,GACpB8P,OAAmB9P,GACnB,IAAM0R,EAAmBnH,SAAS6G,cAAc,aAChDM,EAAiBD,SAAU,EAC3BC,EAAiBL,UAAW,EAC5B,IAAMM,EAAgBpH,SAAS6G,cAAc,UAC7CO,EAAcF,SAAU,EACxBE,EAAcN,UAAW,EACzBpB,OAAWjQ,GACWuK,SAAS6G,cAAc,kBAC/BC,UAAW,EACzBX,GAAY,IACZE,GAAW,KAWT1L,GAAe,SAACiB,GAClBA,EAAEoD,iBAEF,IAAMlE,EA1Ca,WACnB,IAAMuE,EAAY,GASlB,YARuB5J,IAApB6P,IACCjG,EAAUoI,QAAUlV,EAAE,8BAGXkD,IAAZqM,IACCzC,EAAUqI,YAAcnV,EAAE,iBAGvB8M,EAgCQJ,GAEZC,OAAOC,KAAKrE,GAAQuD,OAAS,EAC5BvB,GAAUhC,GAIFoK,EAAgBI,EAAiBE,EAAU1D,OAFrCrM,IAAXuM,EAEyDA,EAMA,KANQsE,GAAUE,QADlD/Q,IAArBoQ,EAC+EA,EAEA,OAW9F,OAAgB,IAAbzQ,GACCF,EAAOzC,GAEH,8BAIA,eAACsI,EAAA,EAAD,CAAM1H,UAAU,qBAAhB,UACI,eAAC0H,EAAA,EAAKG,MAAN,CAAY7H,UAAU,OAAtB,UACI,cAAC0H,EAAA,EAAKI,MAAN,UAAa5I,EAAE,qBACf,cAACwI,EAAA,EAAK4M,MAAN,CAAYtM,KAAK,QAAQC,KAAK,OAAOxH,GAAG,WAAW8T,MAAOrV,EAAE,YAAagC,QAAS,SAACqH,GAC/E2J,EAAmB,YACbzK,GAAM,SACRgC,GAAU,2BACHhC,IADE,kBAEJ,UAAY,SAEtBW,YAAaX,GAAO2M,UACvB,cAAC1M,EAAA,EAAK4M,MAAN,CAAYtM,KAAK,QAAQC,KAAK,OAAOxH,GAAG,QAAQ8T,MAAOrV,EAAE,oBAAqBgC,QAAS,SAACqH,GACpF2J,EAAmB,SACbzK,GAAM,SACRgC,GAAU,2BACHhC,IADE,kBAEJ,UAAY,SAEtBW,YAAaX,GAAO2M,UACvB,cAAC1M,EAAA,EAAKK,QAAQW,SAAd,CAAuBV,KAAK,UAA5B,SAAuCP,GAAO2M,aAElD,eAACzM,EAAA,EAAD,CAAK3H,UAAU,0BAAf,UACI,cAAC4H,EAAA,EAAD,UACI,eAACF,EAAA,EAAKG,MAAN,WACI,eAACH,EAAA,EAAKI,MAAN,WAAa5I,EAAE,YAAf,OACA,cAACwI,EAAA,EAAK8M,OAAN,CAAa/T,GAAG,mBAAhB,SACKuR,EAAUxF,KAAI,SAACiI,GAAD,OACX,wBAAQhM,MAAOgM,EAAMvT,QAAS,SAACqH,GAAD,OAAO6J,EAAYqC,IAAjD,SAAyDA,cAKzE,cAAC7M,EAAA,EAAD,UACI,eAACF,EAAA,EAAKG,MAAN,WACI,eAACH,EAAA,EAAKI,MAAN,WAAa5I,EAAE,YAAf,OACA,eAACwI,EAAA,EAAK8M,OAAN,CAAa/T,GAAG,mBAAmB0H,aAAcmK,EAAjD,WAEMA,GACF,qCACI,wBAAQpR,QAAS,SAAAqH,GACb4L,GAAoB5L,IACrBE,MAAM,IAFT,SAEcvJ,EAAE,iBACfyT,GAAUnG,KAAI,SAAC9C,GAAD,OACX,wBAAQjB,MAAOiB,EAAkBxI,QAAS,SAACqH,GAAO,IAAD,EAC7CkK,EAAoB/I,GACpBD,IAAS,mBACJ,cAAgB,MADZ,cAEJ,UAAY,MAFR,KAFb,SAMIC,EAAIiK,eAAkBzU,EAAE,SAAW,IAAMwK,EAAIwK,WAAa,MAAQxK,EAAIiK,eAAe1L,KAAQ,IANxEyB,EAAIjJ,UAWpC6R,GACD,qCACI,wBACI7J,MAAO6J,EADX,SAC+BpT,EAAE,SAAW,IAAMoT,EAAiB4B,WAAa,MAAQ5B,EAAiBqB,eAAe1L,OACxH,wBAAQ/G,QAAS,SAAAqH,GACb4L,GAAoB5L,IACrBE,MAAM,IAFT,SAEcvJ,EAAE,iBAEfyT,GAAU1B,QAAO,SAAAvH,GAAG,OAAIA,EAAIjJ,KAAO6R,EAAiB7R,MAAI+L,KAAI,SAAC9C,GAAD,OACzD,wBAAQjB,MAAOiB,EAAkBxI,QAAS,SAACqH,GAAO,IAAD,EAC7CkK,EAAoB/I,GACpBD,IAAS,mBACJ,cAAgB,MADZ,cAEJ,UAAY,MAFR,KAFb,SAMIC,EAAIiK,eAAkBzU,EAAE,SAAW,IAAMwK,EAAIwK,WAAa,MAAQxK,EAAIiK,eAAe1L,KAAQ,IANxEyB,EAAIjJ,qBAcrD,eAACiH,EAAA,EAAKG,MAAN,CAAY7H,UAAU,OAAtB,UACI,cAAC0H,EAAA,EAAKI,MAAN,UAAa5I,EAAE,aACf,eAACwI,EAAA,EAAK8M,OAAN,CAAa/T,GAAG,gBAAgB2H,YAAaX,GAAO4M,YAApD,UACI,wBACInT,QAAS,SAAAqH,GAAC,OAvHb,SAACA,QACMnG,IAArBoQ,IACCjK,EAAEoD,iBACF0G,OAAWjQ,GACX4Q,GAAW,KAmHmB0B,CAAanM,IAD/B,SACoCiK,EAAmBA,EAAiBmB,eAAe1L,KAAO/I,EAAE,mBAC/F2T,GAASrG,KAAI,SAACmI,GAAD,OACV,wBAAQlM,MAAOkM,EAAI1M,KAAM/G,QAAS,SAACqH,GAC/B8J,EAAWsC,GACLlN,GAAM,aACRgC,GAAU,2BACHhC,IADE,kBAEJ,cAAgB,SAL7B,SAOIkN,EAAI1M,aAGhB,cAACP,EAAA,EAAKK,QAAQW,SAAd,CAAuBV,KAAK,UAA5B,SAAuCP,GAAO4M,iBAElD,eAAC3M,EAAA,EAAKG,MAAN,CAAY7H,UAAU,OAAtB,UACI,cAAC0H,EAAA,EAAKI,MAAN,UAAa5I,EAAE,YACf,eAACwI,EAAA,EAAK8M,OAAN,CAAa/T,GAAG,UAAhB,UACI,wBAAQgI,MAAM,IAAd,SAAmBvJ,EAAE,kBACpB6T,GAAQvG,KAAI,SAACoI,GAAD,OACT,wBAAQnM,MAAOmM,EAAIlS,UAAY,IAAMkS,EAAI9R,SACjC5B,QAAS,SAACqH,GAAD,OAAOmK,GAAkBkC,IAD1C,SACiDA,EAAIlS,UAAY,IAAMkS,EAAI9R,oBAIvF,eAAC6E,EAAA,EAAD,CAAK3H,UAAU,0BAAf,UACI,cAAC4H,EAAA,EAAD,UACI,eAACF,EAAA,EAAKG,MAAN,WACI,cAACH,EAAA,EAAKI,MAAN,UAAa5I,EAAE,cACf,cAACwI,EAAA,EAAKK,QAAN,CAAcC,KAAK,OAAOE,YAAahJ,EAAE,YAAauJ,MAAOwK,GAC/C3K,SAAU,SAACC,GAAD,OAAO2K,GAAY3K,EAAEC,OAAOC,eAG5D,cAACb,EAAA,EAAD,UACI,eAACF,EAAA,EAAKG,MAAN,WACI,cAACH,EAAA,EAAKI,MAAN,UAAa5I,EAAE,YACf,cAACwI,EAAA,EAAKK,QAAN,CAAcC,KAAK,OAAOE,YAAahJ,EAAE,UAAWuJ,MAAO0K,GAC7C7K,SAAU,SAACC,GAAD,OAAO6K,GAAU7K,EAAEC,OAAOC,kBAI9D,qBAAKE,MAAO,CAACE,QAAS,OAAQC,eAAgB,UAA9C,SACI,cAACC,EAAA,EAAD,CAAQnJ,QAAQ,UAAUsB,QAAS,SAAAqH,GAAC,OAAIjB,GAAaiB,IAArD,SAA0DrJ,EAAE,+BChYjE2V,EAhCc,SAAC,GAA2D,IAA1DrH,EAAyD,EAAzDA,YAAasH,EAA4C,EAA5CA,aAAcC,EAA8B,EAA9BA,uBAAwB7V,EAAM,EAANA,EAC9E,EAAsB4C,mBAAS0L,GAA/B,mBAAOE,EAAP,KAAYsH,EAAZ,KACI/G,EAAuC,KAAlC,IAAItM,MAAQuM,oBAErB7I,qBAAU,gBACajD,IAAhBoL,GACCwH,EAAOxH,KAEb,CAACA,IAQH,OACI,sBAAKxN,UAAU,uBAAuBgB,MAAO9B,EAAE,qBAA/C,UACI,sBAAKc,UAAU,2BAAf,UACI,4BAAI,IAAI2B,KAAK,IAAIA,KAAK+L,EAAIpC,MAAM2C,GAAGG,cAAcC,MAAM,EAAE,MACzD,4BAAI,IAAI1M,KAAK,IAAIA,KAAK+L,EAAIpC,MAAM2C,GAAGG,cAAcC,MAAM,GAAG,SAE9D,qBAAKrO,UAAU,6BAAf,SACI,4BAAIwN,EAAYmB,OAASzP,EAAE,eAAgB,IAAMsO,EAAYmB,OAAOjM,UAAY,IAAK8K,EAAYmB,OAAO7L,SAAW5D,EAAE,oBAEzH,qBAAKc,UAAU,0BAAf,SACI,wBAAQA,UAAU,eAAekB,QAAS,SAACqH,GAAD,OAhBlC,SAACA,GACjBA,EAAEoD,iBACFoJ,EAAuBrH,GACvBoH,GAAa,GAa0CG,CAAY1M,IAA3D,SAAgErJ,EAAE,mBC0GnEgW,EAlIU,SAAC,GAAsE,IAArEC,EAAoE,EAApEA,oBAAqBL,EAA+C,EAA/CA,aAActC,EAAiC,EAAjCA,iBAAkBtT,EAAe,EAAfA,EAAG2C,EAAY,EAAZA,OAC/E,EAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA4BF,oBAAS,WAEjC,OADoBG,KAAKC,MAAMd,eAAee,QAAQ,aAChCC,KAF1B,mBAAOC,EAAP,KAKA,GALA,KAKkCP,oBAAS,WAEvC,OADcG,KAAKC,MAAMd,eAAee,QAAQ,gBAChCC,MAFpB,mBAAOE,EAAP,KAKMlD,GALN,KAKgBC,eAChB,EAAsCyC,mBAASqT,GAA/C,mBAAO3H,EAAP,KAAoBG,EAApB,KACA,EAAgC7L,mBAAS0Q,GAAzC,mBAAOV,EAAP,KAAiBsD,EAAjB,KACInH,EAAuC,KAAlC,IAAItM,MAAQuM,oBAErB7I,qBAAU,gBACqBjD,IAAxB+S,GACCxH,EAAewH,KAGpB,CAACA,IAEJ9P,qBAAU,gBACkBjD,IAArBoQ,GACC4C,EAAY5C,KAElB,CAACA,IAEH,IA0CkBlH,EAElB,OAAgB,IAAbvJ,GACCF,EAAOzC,GAEH,8BAIA,qBAAKY,UAAU,kBAAf,SACI,sBAAKA,UAAU,iBAAf,UACI,qBAAKA,UAAU,gBAAf,SACI,wBAAQkB,QAAS,kBAAM4T,GAAa,IAApC,kBAEJ,sBAAK9U,UAAU,aAAf,UACI,6BAAKd,EAAE,wBACP,0BAEJ,sBAAKc,UAAU,YAAf,UACI,sBAAKA,UAAU,eAAf,UACI,4BAAId,EAAE,UACN,4BAAI,IAAIyC,KAAK,IAAIA,KAAK6L,EAAYlC,MAAQ2C,GAAGG,cAAcC,MAAM,EAAG,SAExE,sBAAKrO,UAAU,eAAf,UACI,4BAAId,EAAE,UACN,4BAAI,IAAIyC,KAAK,IAAIA,KAAK6L,EAAYlC,MAAQ2C,GAAGG,cAAcC,MAAM,GAAI,SAEzE,sBAAKrO,UAAU,eAAf,UACI,4BAAId,EAAE,qBACN,4BAAyB,aAArBsO,EAAYxF,KAAsB9I,EAAE,YAAcA,EAAE,yBAE5D,sBAAKc,UAAU,eAAf,UACI,4BAAId,EAAE,aACN,4BAAIA,EAAEsO,EAAYiB,QAAQxG,WAE7BuF,EAAYmB,QAAU,sBAAK3O,UAAU,eAAf,UACnB,4BAAId,EAAE,YACN,4BAAIsO,EAAYmB,OAAOjM,UAAY,IAAM8K,EAAYmB,OAAO7L,cAElD,OAAbgP,GAAqB,sBAAK9R,UAAU,eAAf,UAClB,4BAAId,EAAE,kBACN,4BAAeA,EAAX4S,EAAa,MAAW,WAE9B,IAAInQ,KAAK,IAAIA,KAAK6L,EAAYlC,MAAQ2C,GAAGG,cAAcC,MAAM,EAAG,OA3CpE/C,EA2CuF,IAAI3J,KA3CnF2J,EAAK8C,cAAcC,MAAM,EAAG,MA4ClC,qBAAKrO,UAAU,UAAf,SACI,4BAAId,EAAE,8BAEV,sBAAKc,UAAU,cAAf,UACI,wBAAQkB,QAAS,kBAAM4T,GAAa,IAAQ9U,UAAU,eAAtD,SAAsEd,EAAE,YACxE,wBAAQgC,QAAS,SAACqH,GAAD,OA3Ff,SAACA,GAGvB,IACIrE,EAHJqE,EAAEoD,iBAKEzH,EADY,OAAb4N,EACQ,CACHd,UAAY3O,EACZgT,WAAavD,EAASrR,IAGnB,CACHuQ,UAAY3O,IAIP,IAAIV,MAbcyM,cAAcC,MAAM,EAAG,MAazB,IAAI1M,KAAK,IAAIA,KAAK6L,EAAYlC,MAAM2C,GAAGG,cAAcC,MAAM,EAAE,MACtFnK,EAAI,2BACGA,GADH,IAEA6J,WAAY,KAIpBhI,MAAM,GAAD,OAAItE,EAAJ,yBAA4B0T,EAAoB1U,GAAhD,YAA6D,CAC9D+F,OAAQ,QACRR,QAAQ,CACJ,eAAgB,mBAChB,+BAA4B1D,IAEhCmE,KAAMxE,KAAKyE,UAAUxC,KACtByC,MAAK,SAACV,GACa,MAAfA,EAAIC,OACHlE,GAAY,GAEZ4E,OAAOC,MAAM3H,EAAE,wBAEnB+G,EAAIE,UACLQ,KAAKvH,EAAQmC,KAAK,CACb/B,SAAW,mBACXuH,OAAM,SAACC,GAAD,OAAQrB,QAAQC,IAAIoB,MAoDUsO,CAAkB/M,IAA1C,SAA+CrJ,EAAE,yBCmF9D0S,eArMQ,SAAC,GAAgB,IAAf1S,EAAc,EAAdA,EAAG2C,EAAW,EAAXA,OAClBzC,EAAUC,cAChB,EAAgCyC,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAkCF,oBAAS,WAEvC,OADcG,KAAKC,MAAMd,eAAee,QAAQ,gBAChCC,KAFpB,mBAAOE,EAAP,KAKA,GALA,KAKwCR,mBAAS,KAAjD,mBAAOwN,EAAP,KAAqBC,EAArB,KACA,EAA8CzN,wBAASM,GAAvD,mBAAOmT,EAAP,KAAwBC,EAAxB,KACA,EAAsD1T,wBAASM,GAA/D,mBAAO+S,EAAP,KAA4BJ,EAA5B,KACA,EAAgDjT,wBAASM,GAAzD,mBAAOoQ,EAAP,KAAyBC,EAAzB,KACA,EAAkC3Q,oBAAS,GAA3C,mBAAO2T,EAAP,KAAkBX,EAAlB,KACA,EAAgChT,wBAASM,GAAzC,mBAAO6Q,EAAP,KAAiBC,EAAjB,KACA,EAA4BpR,wBAASM,GAArC,mBAAO+Q,EAAP,KAAeC,EAAf,KACA,EAA4BtR,wBAASM,GAArC,mBAAOuM,EAAP,KAAe+G,EAAf,KACA,GAAgC5T,wBAASM,GAAzC,qBAAO+P,GAAP,MAAiBC,GAAjB,MAEMvC,GAAY,CAAC,EAAG,EAAG,IACzB,GAAwB/N,mBAAS,GAAjC,qBAAOgO,GAAP,MAAaC,GAAb,MACA,GAA0BjO,mBAAS,GAAnC,qBAAOkO,GAAP,MAAcC,GAAd,MACA,GAAgCnO,mBAAS+N,GAAU,IAAnD,qBAAOK,GAAP,MAAiBC,GAAjB,MAEMC,GAAmB,SAACN,EAAMI,GAC5B,IAAIG,EAAS,GAQb,OANGP,IACCO,EAAM,KAAWP,EAAO,GAEzBI,IACCG,EAAM,KAAWH,GAEdG,GAgBXhL,qBAAU,WACN,QAAuBjD,IAApBmT,EAA8B,CAC7B,IAAMI,EAAwB,uCAAG,4BAAAnQ,EAAA,sEACVmL,KADU,OACvBiF,EADuB,OAE7BrG,EAAgBqG,EAAKtG,cACrBW,GAAS2F,EAAKhF,YAHe,2CAAH,qDAM9B+E,OAEN,CAACJ,EAAiBzF,GAAMI,KAE1B7K,qBAAU,gBACmBjD,IAAtB+S,GACCJ,EAAuBI,KAE5B,CAACA,IAEJ,IAAMxE,GAAiB,uCAAG,kCAAAnL,EAAA,yDAChB6K,EAASD,GAAiBN,GAAMI,IAClC2F,GAAO,IAAIlU,MAAOmU,WAAWzH,MAAM,GAAG,IAE9B,OAATM,EAJmB,oBAKC,OAAhB0B,EAAOP,MAAiC,OAAhBO,EAAO9Q,KALhB,iCAMFwG,MAAM,GAAD,OAAItE,EAAJ,0CAA6C8T,EAAgB9U,GAA7D,qBAA4EkO,EAAOlO,GAAnF,qBAAkGwS,EAAlG,YAA8G4C,EAA9G,mBAA6H1C,EAA7H,8BAAyJhB,GAAzJ,iBAA0K9B,EAAOP,KAAjL,iBAA8LO,EAAO9Q,MAAO,CACzNyG,QAAS,CAAC,+BAA4B1D,MAP5B,OASI,OAHlB2D,EANc,QASPC,QACHlE,GAAY,GAVF,2BAaO,OAAhBqO,EAAOP,MAAiC,OAAhBO,EAAO9Q,KAbtB,kCAcFwG,MAAM,GAAD,OAAItE,EAAJ,0CAA6C8T,EAAgB9U,GAA7D,qBAA4EkO,EAAOlO,GAAnF,qBAAkGwS,EAAlG,YAA8G4C,EAA9G,mBAA6H1C,EAA7H,8BAAyJhB,GAAzJ,iBAA0K9B,EAAOP,MAAO,CACrM9J,QAAS,CAAC,+BAA4B1D,MAf5B,QAiBI,OAHlB2D,EAdc,QAiBPC,QACHlE,GAAY,GAlBF,2BAoBO,OAAhBqO,EAAOP,MAAiC,OAAhBO,EAAO9Q,KApBtB,kCAqBFwG,MAAM,GAAD,OAAItE,EAAJ,0CAA6C8T,EAAgB9U,GAA7D,qBAA4EkO,EAAOlO,GAAnF,qBAAkGwS,EAAlG,YAA8G4C,EAA9G,mBAA6H1C,EAA7H,8BAAyJhB,GAAzJ,iBAA0K9B,EAAO9Q,MAAO,CACrMyG,QAAS,CAAC,+BAA4B1D,MAtB5B,QAwBI,OAHlB2D,EArBc,QAwBPC,QACHlE,GAAY,GAzBF,yCA4BF+D,MAAM,GAAD,OAAItE,EAAJ,0CAA6C8T,EAAgB9U,GAA7D,qBAA4EkO,EAAOlO,GAAnF,qBAAkGwS,EAAlG,YAA8G4C,EAA9G,mBAA6H1C,EAA7H,8BAAyJhB,IAAW,CACjLnM,QAAS,CAAC,+BAA4B1D,MA7B5B,QA+BI,OAHlB2D,EA5Bc,QA+BPC,QACHlE,GAAY,GAhCF,mCAoCC,OAAhBqO,EAAOP,MAAiC,OAAhBO,EAAO9Q,KApChB,kCAqCFwG,MAAM,GAAD,OAAItE,EAAJ,0CAA6C8T,EAAgB9U,GAA7D,qBAA4EwS,EAA5E,YAAwF4C,EAAxF,mBAAuG1C,EAAvG,8BAAmIhB,GAAnI,iBAAoJ9B,EAAOP,KAA3J,iBAAwKO,EAAO9Q,MAAO,CACnMyG,QAAS,CAAC,+BAA4B1D,MAtC5B,QAwCI,OAHlB2D,EArCc,QAwCPC,QACHlE,GAAY,GAzCF,2BA4CO,OAAhBqO,EAAOP,MAAiC,OAAhBO,EAAO9Q,KA5CtB,kCA6CFwG,MAAM,GAAD,OAAItE,EAAJ,0CAA6C8T,EAAgB9U,GAA7D,qBAA4EwS,EAA5E,YAAwF4C,EAAxF,mBAAuG1C,EAAvG,8BAAmIhB,GAAnI,iBAAoJ9B,EAAOP,MAAO,CAC/K9J,QAAS,CAAC,+BAA4B1D,MA9C5B,QAgDI,OAHlB2D,EA7Cc,QAgDPC,QACHlE,GAAY,GAjDF,2BAoDO,OAAhBqO,EAAOP,MAAiC,OAAhBO,EAAO9Q,KApDtB,kCAqDFwG,MAAM,GAAD,OAAItE,EAAJ,0CAA6C8T,EAAgB9U,GAA7D,qBAA4EwS,EAA5E,YAAwF4C,EAAxF,mBAAuG1C,EAAvG,8BAAmIhB,GAAnI,iBAAoJ9B,EAAO9Q,MAAO,CAC/KyG,QAAS,CAAC,+BAA4B1D,MAtD5B,QAwDI,OAHlB2D,EArDc,QAwDPC,QACHlE,GAAY,GAzDF,yCA6DF+D,MAAM,GAAD,OAAItE,EAAJ,0CAA6C8T,EAAgB9U,GAA7D,qBAA4EwS,EAA5E,YAAwF4C,EAAxF,mBAAuG1C,EAAvG,8BAAmIhB,IAAW,CAC3JnM,QAAS,CAAC,+BAA4B1D,MA9D5B,QAgEI,OAHlB2D,EA7Dc,QAgEPC,QACHlE,GAAY,GAjEF,yBAqEHiE,EAAIE,OArED,eAqEhBjC,EArEgB,yBAuEfA,GAvEe,4CAAH,qDAoFvB,OAAgB,IAAbnC,GACCF,EAAOzC,GAEH,8BAIA,sBAAKY,UAAU,YAAf,UACI,qBAAKA,UAAU,aAAf,SACI,6BAAKd,EAAE,sBAEX,cAAC,EAAD,CAAoB2S,gBA9HA,SAACI,EAAiBE,EAAU1D,EAASE,EAAQsE,EAAUE,EAAQX,GAC3FgD,EAAmB/G,GACnBgE,EAAoBD,GACpBU,EAAYD,GACZG,EAAUD,GACVuC,EAAU/G,GAENyD,GADU,WAAXD,EACa,KAEA,OAqHsDjT,EAAGA,EAAG2C,OAAQA,IAC5E,qCACKyN,EAAatE,OAAS,GACvB,qCACI,oBAAIrC,MAAO,CAACoN,WAAY,0BAAxB,SAAoD7W,EAAE,2BACtD,sBAAKc,UAAU,sCAAf,UACI,8BAAId,EAAE,kBAAN,UACA,wBAAQoJ,SAxBH,SAACkJ,GAC1BrB,GAAYqB,EAAMhJ,OAAOC,OACzBsH,GAAQ,IAsBoDtH,MAAOyH,GAA/C,SACKL,GAAUrD,KAAI,SAACjN,GAAD,OACX,wBAAmBkJ,MAAOlJ,EAA1B,SACKA,GADQA,cAS5B+P,EAAatE,OAAS,EAClBsE,EAAa9C,KAAI,SAACkB,GAAD,OACd,cAAC,EAAD,CAAmCF,YAAaE,EAAKoH,aAAcA,EAC7CC,uBAAwBA,EAAwB7V,EAAGA,GAD9CwO,EAAIjN,YAER2B,IAApBmT,EAAgCrW,EAAE,kBAAoB,GAChEoQ,EAAatE,OAAS,GACvB,cAACyG,EAAA,EAAD,CAAYzR,UAAU,OAAOgQ,MAAOA,GAAOF,KAAMA,GAAM4B,aAAc,EAAGC,cAAe,EAC3ElP,MAAM,UAAU6F,SA9CnB,SAACkJ,EAAO/I,GAC7BsH,GAAQtH,MA+CMgN,QAAqCrT,IAAxB+S,EACX,cAAC,EAAD,CAAkBA,oBAAqBA,EAAqBL,aAAcA,EACxDtC,iBAAkBA,EAAkBtT,EAAGA,EAAG2C,OAAQA,IAAY,YC7JzFmU,EAxCE,SAAC,GAAuC,IAAtClE,EAAqC,EAArCA,SAAUW,EAA2B,EAA3BA,oBAAqBvT,EAAM,EAANA,EACxCE,EAAUC,cAChB,EAAsByC,mBAASgQ,GAA/B,mBAAOpI,EAAP,KAAYuM,EAAZ,KACM9H,EAAY,SAAA7C,GAAI,OAAIA,EAAK8C,cAAcC,MAAM,EAAG,KAEtDhJ,qBAAU,gBACUjD,IAAb0P,GACCmE,EAAOnE,KAEb,CAACA,IAYH,OACI,sBAAK9R,UAAU,WAAf,UACI,qBAAKA,UAAU,eAAf,SACI,mBAAGA,UAAU,iBAAb,SAA+Bd,EAAEwK,EAAIiK,eAAe1L,UAExD,sBAAKjI,UAAU,eAAf,UACI,8BAAId,EAAE,aAAN,OAA0BwK,EAAIwM,aAC9B,8BAAIhX,EAAE,sBAAN,OAAmCwK,EAAIwK,iBAE3C,uBACA,qBAAKvL,MAAO,CAACE,QAAS,OAAQC,eAAgB,YAA9C,SACKqF,EAAU,IAAIxM,KAAK+H,EAAIwK,cAAe/F,EAAU,IAAIxM,MACrD,wBAAQ3B,UAAU,eAAekB,QAAS,SAACqH,GAAD,OAtBlC,SAACA,GACjBA,EAAEoD,iBACF8G,EAAoBX,GAEpB1S,EAAQmC,KAAK,CACT/B,SAAU,mBACV+O,MAAO7E,IAgB8CuL,CAAY1M,IAA7D,SAAkErJ,EAAE,qBACnE,mBAAGyJ,MAAO,CAACC,MAAQ,OAAnB,SAA4B1J,EAAE,2BCgHhCiX,EAhJM,SAAC,GAAgB,IAAfjX,EAAc,EAAdA,EAAG2C,EAAW,EAAXA,OAChBzC,EAAUC,cAChB,EAA4ByC,oBAAS,WAEjC,OADcG,KAAKC,MAAMd,eAAee,QAAQ,aAChCC,KAFpB,mBAAOC,EAAP,KAIA,GAJA,KAIkCP,oBAAS,WAEvC,OADcG,KAAKC,MAAMd,eAAee,QAAQ,gBAChCC,MAFpB,mBAAOE,EAAP,KAKA,GALA,KAKkCR,mBAAS,KAA3C,mBAAO6Q,EAAP,KAAkBC,EAAlB,KACA,EAAgD9Q,wBAASM,GAAzD,mBAAOoQ,EAAP,KAAyBC,EAAzB,KAEM5C,EAAY,CAAC,EAAG,EAAG,IACzB,EAAwB/N,mBAAS,GAAjC,mBAAOgO,EAAP,KAAaC,EAAb,KACA,EAA0BjO,mBAAS,GAAnC,mBAAOkO,EAAP,KAAcC,EAAd,KACA,EAAgCnO,mBAAS+N,EAAU,IAAnD,mBAAOK,EAAP,KAAiBC,EAAjB,KAEA,EAAgCrO,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAEMoO,EAAmB,SAACN,EAAMI,GAC5B,IAAIG,EAAS,GAQb,OANGP,IACCO,EAAM,KAAWP,EAAO,GAEzBI,IACCG,EAAM,KAAWH,GAEdG,GAGXhL,qBAAU,WACN,IAAIC,EAAa,IAAIC,gBAarB,OAXA,sBAAC,4BAAAC,EAAA,+EAE+BwO,IAF/B,OAEarB,EAFb,OAGOC,EAAaD,EAAUA,WACvB1C,EAAS0C,EAAU/B,YACnBtL,EAAa,KALpB,gDAOOK,QAAQC,IAAR,MACA5D,GAAY,GARnB,wDAAD,GAWO,kCAAKsD,SAAL,aAAK,EAAYO,WAE1B,CAACiK,EAAMI,IAET7K,qBAAU,gBACgBjD,IAAnBoQ,GACCI,EAAaD,EAAU1B,OAAOmF,MAGpC,CAAC5D,IAGH,IAAMwB,EAAc,uCAAG,gCAAAxO,EAAA,yDAGA,QAFb6K,EAASD,EAAiBN,EAAMI,IAE5BJ,MAAiC,OAAhBO,EAAO9Q,KAHf,gCAIHwG,MAAM,GAAD,OAAItE,EAAJ,qBAAwBY,EAAxB,2BAAiDgO,EAAOP,KAAxD,iBAAqEO,EAAO9Q,MAAO,CAChGyG,QAAS,CAAC,+BAA4B1D,MAL3B,OAOG,OAHlB2D,EAJe,QAORC,QACHlE,GAAY,GARD,0BAWM,OAAhBqO,EAAOP,MAAiC,OAAhBO,EAAO9Q,KAXrB,kCAYHwG,MAAM,GAAD,OAAItE,EAAJ,qBAAwBY,EAAxB,2BAAiDgO,EAAOP,MAAO,CAC5E9J,QAAS,CAAC,+BAA4B1D,MAb3B,QAeG,OAHlB2D,EAZe,QAeRC,QACHlE,GAAY,GAhBD,2BAkBM,OAAhBqO,EAAOP,MAAiC,OAAhBO,EAAO9Q,KAlBrB,kCAmBHwG,MAAM,GAAD,OAAItE,EAAJ,qBAAwBY,EAAxB,2BAAiDgO,EAAO9Q,MAAO,CAC5EyG,QAAS,CAAC,+BAA4B1D,MApB3B,QAsBG,OAHlB2D,EAnBe,QAsBRC,QACHlE,GAAY,GAvBD,yCA0BH+D,MAAM,GAAD,OAAItE,EAAJ,qBAAwBY,EAAxB,cAA2C,CACxD2D,QAAS,CAAC,+BAA4B1D,MA3B3B,QA6BG,OAHlB2D,EA1Be,QA6BRC,QACHlE,GAAY,GA9BD,yBAkCAiE,EAAIE,OAlCJ,eAkCbjC,EAlCa,yBAoCZA,GApCY,4CAAH,qDAuCdkS,EAAkB,SAACtE,GACrB,GAAGA,EAASrR,KAAO+R,EAAiB/R,GAChC,OAAOqR,GAaf,OAAgB,IAAb/P,GACCF,EAAOzC,GAER,8BAIK,sBAAKY,UAAU,YAAf,UACI,qBAAKA,UAAU,aAAf,SACI,6BAAKd,EAAE,qBAEX,sBAAKc,UAAU,cAAf,UACI,8BAAId,EAAE,kBAAN,UACA,wBAAQoJ,SAlBK,SAACkJ,GAC1BrB,EAAYqB,EAAMhJ,OAAOC,OACzBsH,EAAQ,IAgB4CtH,MAAOyH,EAA/C,SACKL,EAAUrD,KAAI,SAACjN,GAAD,OACX,wBAAmBkJ,MAAOlJ,EAA1B,SACKA,GADQA,WAOxBoT,EAAUnG,KAAI,SAACsF,GAAD,OACX,cAAC,EAAD,CAA4BA,SAAUA,EAAUW,oBAAqBA,EAAqBvT,EAAGA,GAA9E4S,EAASrR,OAE5B,cAACgR,EAAA,EAAD,CAAYzR,UAAU,OAAOgQ,MAAOA,EAAOF,KAAMA,EAAM4B,aAAc,EAAGC,cAAe,EAAGlP,MAAM,UAAU6F,SAlC7F,SAACkJ,EAAO/I,GAC7BsH,EAAQtH,U,0CCvGV4N,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,UAAW,CACPjK,gBAAiBkK,eAAKF,EAAMG,QAAQC,QAAQC,KAAM,IAClD,UAAW,CACPrK,gBAAiBkK,eAAKF,EAAMG,QAAQC,QAAQC,KAAM,MAEtD,UAAW,CACPrK,gBAAiBkK,eAAKF,EAAMG,QAAQC,QAAQC,KAAM,OAG1DC,YAAa,CACTtK,gBAAiBkK,eAAKF,EAAMG,QAAQI,OAAOC,mBAAoB,KAC/D,UAAW,CACPxK,gBAAiBkK,eAAKF,EAAMG,QAAQI,OAAOC,mBAAoB,MAEnE,UAAW,CACPxK,gBAAiBkK,eAAKF,EAAMG,QAAQI,OAAOC,mBAAoB,OAGvErV,MAAO,CACH6K,gBAAiBkK,eAAKF,EAAMG,QAAQC,QAAQC,KAAM,MAEtDI,QAAS,CACLzK,gBAAiBkK,eAAKF,EAAMG,QAAQI,OAAOC,mBAAoB,UAIjEE,EAAgB,SAACC,GACnB,IAAMC,EAAUd,IACRe,EAAcF,EAAdE,UACF9L,EAAO,IAAI3J,KAAKyV,GAEtB,OAAI9L,EAAKG,aAAc,IAAI9J,MAAO8J,UACvB,cAAC,IAASwL,cAAV,2BAA4BC,GAA5B,IAAmClX,UAAWmX,EAAQX,aACzC,IAAlBlL,EAAK+L,UAAoC,IAAlB/L,EAAK+L,SACvB,cAAC,IAASJ,cAAV,2BAA4BC,GAA5B,IAAmClX,UAAWmX,EAAQN,eACxD,cAAC,IAASI,cAAV,eAA4BC,KAGnCI,GAAe,SAACJ,GAClB,IAAMC,EAAUd,IACRe,EAAqBF,EAArBE,UAER,OAF6BF,EAAVxV,MAGR,cAAC,IAAS4V,aAAV,2BAA2BJ,GAA3B,IAAkClX,UAAWmX,EAAQzV,SACnC,IAAvB0V,EAAUC,UAAyC,IAAvBD,EAAUC,SACjC,cAAC,IAASC,aAAV,2BAA2BJ,GAA3B,IAAkClX,UAAWmX,EAAQH,WACvD,cAAC,IAASM,aAAV,eAA2BJ,KA0DzBK,GAvDE,SAAC,GAAe,IAAdC,EAAa,EAAbA,SAEf,EAAwC1V,mBAAS,IAAjD,mBAAOwN,EAAP,KAAqBC,EAArB,KASA,SAASkI,EAAYnM,GACjB,IAAIoM,EAAMC,EAAOC,EAAKC,EAAOC,EAO7B,OANAJ,EAAOpM,EAAKlI,UAAU,EAAG,GAAG,EAC5BuU,EAAQrM,EAAKlI,UAAU,EAAE,GAAG,EAC5BwU,EAAMtM,EAAKlI,UAAU,EAAE,IAAI,EAC3ByU,EAAQvM,EAAKlI,UAAU,GAAG,IAAI,EAC9B0U,EAAUxM,EAAKlI,UAAU,GAAG,IAAI,EAEzB,IAAIzB,KAAK+V,EAAMC,EAAOC,EAAKC,EAAOC,GAiB7C,OAhCAzS,qBAAU,WACN,QAAgBjD,IAAboV,EAAuB,CACtB,IAAIO,EAgBZ,SAA6BP,GACzB,IAAIQ,EAAqB,GAUzB,OARAnM,OAAOoM,QAAQT,GAAUlE,SAAS,mCAAM7K,GAAN,kBAAeoD,OAAOoM,QAAQxP,GAC3D6K,SAAQ,YAAgB,IAAD,mBAAT7K,GAAS,WAChB6C,EAAO,IAAIO,OACfP,EAAI,UAAgBmM,EAAYhP,EAAM2O,WACtC9L,EAAI,QAAcmM,EAAYhP,EAAMyP,SACpCF,EAAmBzW,KAAK+J,SAGzB0M,EA3ByBG,CAAoBX,GAChDjI,EAAgBwI,MAEtB,CAACP,IA4BC,cAACY,EAAA,EAAD,UACI,eAAC,IAAD,CAAWlU,KAAMoL,EAAc+I,eAAgB,EAAGC,OAAO,QAAzD,UACI,cAAC,IAAD,IACA,cAAC,IAAD,CACIC,aAAc,EACdC,WAAY,GACZC,uBAAwBxB,EACxByB,sBAAuBpB,KAE3B,cAAC,IAAD,IACA,cAAC,IAAD,IACA,cAAC,IAAD,IACA,cAAC,IAAD,UCkGDqB,GApMM,SAAC,GAAgB,IAAfzZ,EAAc,EAAdA,EAAG2C,EAAW,EAAXA,OAChBzC,EAAUC,cAChB,EAAkCyC,oBAAS,WAEvC,OADcG,KAAKC,MAAMd,eAAee,QAAQ,gBAChCC,KAFpB,mBAAOE,EAAP,KAKA,GALA,KAK8CR,mBAAS,KAAvD,mBAAO8W,EAAP,KAAwBC,EAAxB,KACA,EAA8B/W,mBAAS,IAAvC,mBAAOiR,EAAP,KAAgBC,EAAhB,KACA,EAA4DlR,wBAASM,GAArE,mBAAO0W,EAAP,KAA+BC,EAA/B,KACA,EAA4CjX,wBAASM,GAArD,mBAAO4W,EAAP,KAAuBtG,EAAvB,KACA,EAAgC5Q,wBAASM,GAAzC,mBAAOoV,EAAP,KAAiByB,EAAjB,KACA,EAA4BnX,mBAAS,IAArC,mBAAO2F,EAAP,KAAegC,EAAf,KACMC,EAAMC,mBACZ,EAAgC7H,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAMAqD,qBAAU,WACN,IAAIC,EAAa,IAAIC,gBAerB,OAbA,sBAAC,4BAAAC,EAAA,+EAEqC0T,IAFrC,QAEaN,EAFb,QAGuBtF,SAAQ,SAAA6F,GACpBA,EAAKlR,KAAO/I,EAAEia,EAAKlR,SAEvB4Q,EAAmBD,GACnBtT,EAAa,KAPpB,gDASOK,QAAQC,IAAR,MACA5D,GAAY,GAVnB,wDAAD,GAaO,kCAAKsD,SAAL,aAAK,EAAYO,WAE1B,IAGFR,qBAAU,WACN,IAAIC,EAAa,IAAIC,gBAErB,QAA4BnD,IAAzB0W,EAWC,OAVA,sBAAC,4BAAAtT,EAAA,+EAE6B+N,IAF7B,OAEaR,EAFb,OAGOC,EAAWD,GACXzN,EAAa,KAJpB,gDAMOK,QAAQC,IAAR,MACA5D,GAAY,GAPnB,wDAAD,GAUO,kCAAKsD,SAAL,aAAK,EAAYO,WAG7B,CAACiT,IAEJ,IAAMI,EAAoB,uCAAG,8BAAA1T,EAAA,sEACPO,MAAM,GAAD,OAAItE,EAAJ,oBAA8B,CACjDuE,QAAS,CAAC,+BAA4B1D,MAFjB,cAIP,OAHZ2D,EADmB,QAIlBC,QACHlE,GAAY,GALS,SAQNiE,EAAIE,OARE,cAQnBjC,EARmB,yBAUlBA,GAVkB,2CAAH,qDAapBqP,EAAY,uCAAG,8BAAA/N,EAAA,sEACCO,MAAM,GAAD,OAAItE,EAAJ,sCAAyCqX,EAAuBrY,IAAK,CACxFuF,QAAS,CAAC,+BAA4B1D,MAFzB,cAIC,OAHZ2D,EADW,QAIVC,QACHlE,GAAY,GALC,SAOEiE,EAAIE,OAPN,cAOXjC,EAPW,yBASVA,GATU,2CAAH,qDAoClB,SAASoD,EAAaiB,GAClBA,EAAEoD,iBACF,IAAMlE,EAfa,WACnB,IAAMuE,EAAY,GASlB,YAR8B5J,IAA3B0W,IACC9M,EAAUoN,eAAiBla,EAAE,6BAGXkD,IAAnB4W,IACChN,EAAU2C,OAASzP,EAAE,gBAGlB8M,EAKQJ,GAEZC,OAAOC,KAAKrE,GAAQuD,OAAS,EAC5BvB,EAAUhC,GAEV1B,MAAM,GAAD,OAAItE,EAAJ,oBAAuBuX,EAAevY,GAAtC,sCAAsEqY,EAAuBrY,IAAK,CACnGuF,QAAS,CAAC,+BAA4B1D,MAErCqE,MAAK,SAACV,GAAD,OAAOA,EAAIE,UAChBQ,MAAK,SAAC0S,GACHJ,EAAYI,MAEftS,OAAM,SAACC,GAAD,OAAOrB,QAAQC,IAAIoB,MAGtC,OAAgB,IAAbjF,GACCF,EAAOzC,GAEH,8BAIA,sBAAKY,UAAU,YAAf,UACI,qBAAKA,UAAU,aAAf,SACI,6BAAKd,EAAE,sBAEX,eAACwI,EAAA,EAAD,CAAM1H,UAAU,qBAAhB,UACI,cAAC2H,EAAA,EAAD,CAAK3H,UAAU,0BAAf,SACI,cAAC4H,EAAA,EAAD,UACI,eAACF,EAAA,EAAKG,MAAN,WACI,eAACH,EAAA,EAAKI,MAAN,WAAa5I,EAAE,wBAAf,OACA,eAACwI,EAAA,EAAK8M,OAAN,CAAa/T,GAAG,yBAAyB2H,YAAaX,EAAO2R,eAA7D,UACI,wBAAQlY,QA1DxC,WACI6X,OAA0B3W,GAC1B4Q,EAAW,IACXiG,OAAY7W,IAuDgB,SAAuClD,EAAE,0BACxC0Z,EAAgBpM,KAAI,SAAC2M,GAAD,OACjB,wBAAQ1Q,MAAO0Q,EAAMjY,QAAS,SAACqH,GAC3BmK,OAAkBtQ,GAjItDsH,EAAIqC,QAAQtD,MAAQvJ,EAAE,gBAmIc+Z,OAAY7W,GACZ2W,EAA0BI,GAEpB1R,EAAM,gBACRgC,EAAU,2BACHhC,GADE,kBAEJ,iBAAmB,SAThC,SAWI0R,EAAKlR,aAGjB,cAACP,EAAA,EAAKK,QAAQW,SAAd,CAAuBV,KAAK,UAA5B,SAAuCP,EAAO2R,wBAI1D,cAACzR,EAAA,EAAD,CAAK3H,UAAU,0BAAf,SACI,cAAC4H,EAAA,EAAD,UACI,eAACF,EAAA,EAAKG,MAAN,WACI,eAACH,EAAA,EAAKI,MAAN,WAAa5I,EAAE,gBAAf,OACA,eAACwI,EAAA,EAAK8M,OAAN,CAAa/T,GAAG,iBAAiB2H,YAAaX,EAAOkH,OAAQjF,IAAKA,EAAlE,UACI,wBAAQxI,QA7ExC,WACIwR,OAAkBtQ,GAClB6W,OAAY7W,IA2EgB,SAA+BlD,EAAE,kBAChC6T,EAAQvG,KAAI,SAACoI,GAAD,OACT,wBAAQnM,MAAOmM,EAAK1T,QAAS,SAACqH,GAC1BmK,EAAkBkC,GAClBqE,OAAY7W,GACNqF,EAAM,QACRgC,EAAU,2BACHhC,GADE,kBAEJ,SAAW,SANxB,SAQImN,EAAIlS,UAAY,IAAMkS,EAAI9R,iBAGtC,cAAC4E,EAAA,EAAKK,QAAQW,SAAd,CAAuBV,KAAK,UAA5B,SAAuCP,EAAOkH,gBAI1D,qBAAKhG,MAAO,CAACE,QAAS,OAAQC,eAAgB,UAA9C,SACI,cAACC,EAAA,EAAD,CAAQnJ,QAAQ,UAAUsB,QAAS,SAAAqH,GAAC,OAAIjB,EAAaiB,IAArD,SAA0DrJ,EAAE,4BAGrDkD,IAAboV,QAA6CpV,IAAnB4W,QAA2D5W,IAA3B0W,GAC5D,cAAC,GAAD,CAAUtB,SAAUA,QCpGrB8B,GA9FC,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,QAASra,EAAM,EAANA,EAEvB,EAA4B4C,oBAAS,WAEjC,OADoBG,KAAKC,MAAMd,eAAee,QAAQ,aAChCC,KAF1B,mBAAOC,EAAP,KAKA,GALA,KAKkCP,oBAAS,WAEvC,OADcG,KAAKC,MAAMd,eAAee,QAAQ,gBAChCC,MAFpB,mBAAOE,EAAP,KAKA,GALA,KAK0BR,oBAAS,IAAnC,mBAAOyM,EAAP,KAAciL,EAAd,KACA,EAA6B1X,mBAASyX,GAAtC,mBAAOE,EAAP,KAAgBC,EAAhB,KAgCA,OA9BArU,qBAAU,gBACSjD,IAAZmX,GACCG,EAAUH,KAEf,CAACA,IA2BA,sBAAKvZ,UAAU,wBAAwBkB,QAAS,SAACqH,GAAD,OAzBpD,SAAqBA,GACjBA,EAAEoD,iBACF6N,GAAUjL,GAuB4CC,CAAYjG,IAAlE,UACI,sBAAKvI,UAAU,MAAf,UACI,mBAAGA,UAAU,8BAAb,SAA4Cd,EAAEua,EAAQtK,sBACtD,sBAAKnP,UAAU,OAAf,UACI,4BAAId,EAAE,UACN,4BAAI,IAAIyC,KAAK8X,EAAQE,iBAAiBvL,cAAcC,MAAM,EAAE,MAC5D,4BAAI,IAAI1M,KAAK8X,EAAQE,iBAAiBvL,cAAcC,MAAM,GAAG,YAGrE,gCACI,cAAC,IAAD,CAAW9O,KAAM,KAChBL,EAAE,eAAiB,IAAMua,EAAQG,gBAAkB,IAAMH,EAAQI,kBAGrEtL,EACG,gCACI,uBACA,sBAAKvO,UAAU,cAAf,UACI,cAAC,IAAD,CAAcT,KAAM,KACpB,mBAAGS,UAAU,SAAb,SAAuBd,EAAE,2BAE7B,qBAAKc,UAAU,cAAf,SACI,4BAAIyZ,EAAQK,uBAEhB,uBAEA,sBAAK9Z,UAAU,cAAf,UACI,cAAC,IAAD,CAAST,KAAM,KACf,mBAAGS,UAAU,SAAb,SAAuBd,EAAE,eAE7B,8BACI,4BAAIua,EAAQlP,OAASkP,EAAQlP,OAASrL,EAAE,0BAGvB,OAAnBua,EAAQlP,QAAmBkP,EAAQ1P,MACrC,qCACI,uBACA,sBAAK/J,UAAU,cAAf,UACI,cAAC,IAAD,CAAQT,KAAM,KACd,mBAAGS,UAAU,SAAb,SAAuBd,EAAE,uBACzB,cAAC6J,EAAA,EAAD,CAAQ/I,UAAU,WAAW0M,KAAI,UAAKjL,EAAL,qBAAyBY,EAAzB,oBAAmDnB,QAAS,SAACqH,IA5DtH,SAA4BA,EAAGgR,GAC3BhR,EAAEoD,iBAEF5F,MAAM,GAAD,OAAItE,EAAJ,uDAA0D8X,EAAQQ,cAAlE,sBAA6FR,EAAQS,WAAY,CAClHhU,QAAS,CAAC,+BAA4B1D,MAErCqE,MAAK,SAAAV,GAAG,OAAIA,EAAIE,UAChBQ,MAAK,SAAAV,GACF,IAAIT,EAAIoB,OAAO+F,SAASC,cAAc,KAClCC,EAAU,IAAI1B,WAAWlF,EAAI8D,MACjCvE,EAAEkH,KAAO9F,OAAOkG,IAAIC,gBAAgB,IAAIC,KAAK,CAACH,GAAU,CAAC7E,KAAO,qBAChE,IAAIsD,EAAO,IAAI3J,KAAKsE,EAAI0T,iBAAiBvL,cAAcC,MAAM,EAAE,IAC/D7I,EAAEyH,SAAW/N,EAAE,mBAAqB+a,OAAO3O,GAC3CqB,SAASlG,KAAKyG,YAAY1H,GAC1BA,EAAE2H,QACFR,SAASlG,KAAK2G,YAAY5H,MA8CV6H,CAAmB9E,EAAGgR,IAD1B,SAEIra,EAAE,uBAGR,SC/CXgb,GA9CuB,SAAC,GAAsB,IAArB1M,EAAoB,EAApBA,YAAatO,EAAO,EAAPA,EAC7CE,EAAUC,cAKR4V,EAAc,SAAA1M,GAChBA,EAAEoD,iBAEF,IAAMwO,EAAS5R,EAAEC,OAAO/H,GAPR,gBAQZ0Z,EACA/a,EAAQmC,KAAK,CACT/B,SAAS,iBAAD,OAAmBgO,EAAY/M,GAA/B,2BACR8N,MAAOf,IAVG,kBAaT2M,EACL/a,EAAQmC,KAAK,CACT/B,SAAS,iBAAD,OAAmBgO,EAAY/M,GAA/B,sBACR8N,MAAQf,IAfD,eAkBN2M,EACL/a,EAAQmC,KAAK,CACT/B,SAAS,iBAAD,OAAmBgO,EAAY/M,GAA/B,YACR8N,MAAOf,IAIXpO,EAAQmC,KAAK,CACT/B,SAAS,iBAAD,OAAmBgO,EAAY/M,GAA/B,kBACR8N,MAAOf,KAKnB,OACI,sBAAKxN,UAAU,YAAY2I,MAAO,CAACE,QAAS,OAAQC,eAAgB,gBAAiBwD,MAAM,OAA3F,WACM1F,OAAOmL,SAASrF,KAAK0N,QAAQ,mBAAqB,GAAKxT,OAAOmL,SAASrF,KAAK0N,QAAQ,cAAgB,GAAKxT,OAAOmL,SAASrF,KAAK0N,QAAQ,kBAAoB,IAAO,wBAAQ3Z,GAAG,aAAaT,UAAU,eAAekB,QAAS+T,EAA1D,SAAwE/V,EAAE,yBAC5O0H,OAAOmL,SAASrF,KAAK0N,QAAQ,kBAAoB,GAAK,wBAAQ3Z,GAAG,cAAcT,UAAU,eAAekB,QAAS+T,EAA3D,SAAyE/V,EAAE,yBACjI0H,OAAOmL,SAASrF,KAAK0N,QAAQ,aAAe,GAAK,wBAAQ3Z,GAAG,gBAAgBT,UAAU,eAAekB,QAAS+T,EAA7D,SAA2E/V,EAAE,oBAC9H0H,OAAOmL,SAASrF,KAAK0N,QAAQ,iBAAmB,GAAK,wBAAQ3Z,GAAG,cAAcT,UAAU,eAAekB,QAAS+T,EAA3D,SAAyE/V,EAAE,4BCiI9Hmb,GArKK,SAAC,GAAgB,IAAfnb,EAAc,EAAdA,EAAG2C,EAAW,EAAXA,OACrB,EAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA4BF,oBAAS,WAEjC,OADcG,KAAKC,MAAMd,eAAee,QAAQ,aAChCC,KAFpB,mBAAOC,EAAP,KAIA,GAJA,KAIkCP,oBAAS,WAEvC,OADcG,KAAKC,MAAMd,eAAee,QAAQ,gBAChCC,MAFpB,mBAAOE,EAAP,KAKMlD,GALN,KAKgBC,eACVqO,EAAMtO,EAAQ2S,SAASxD,MAC7B,EAAsCzM,mBAAS4L,QAAYtL,GAA3D,mBAAOoL,EAAP,KAEMqC,GAFN,KACiBpQ,cACC,CAAC,EAAG,EAAG,KACzB,EAAgCqC,mBAAS,IAAzC,mBAAOwY,EAAP,KAAiBC,EAAjB,KAEA,EAAwBzY,mBAAS,GAAjC,mBAAOgO,EAAP,KAAaC,EAAb,KACA,EAA0BjO,mBAAS,GAAnC,mBAAOkO,EAAP,KAAcC,EAAd,KACA,EAAgCnO,mBAAS+N,EAAU,IAAnD,mBAAOK,EAAP,KAAiBC,EAAjB,KAEMC,EAAmB,SAACN,EAAMI,GAC5B,IAAIG,EAAS,GAQb,OANGP,IACCO,EAAM,KAAWP,EAAO,GAEzBI,IACCG,EAAM,KAAWH,GAEdG,GAGXhL,qBAAU,WACN,IAAMmV,EAAW,uCAAG,4BAAAhV,EAAA,sEACOiV,IADP,OACVC,EADU,OAEhBH,EAAYG,EAASxL,iBACrBe,EAASyK,EAAS9J,YAHF,2CAAH,qDAKjB4J,MACF,CAAC1K,EAAMI,IAGT,IAAMuK,EAAa,uCAAG,gCAAAjV,EAAA,yDACZ6K,EAASD,EAAiBN,EAAMI,QAEnB9N,IAAhBoL,EAHe,oBAIK,OAAhB6C,EAAOP,MAAiC,OAAhBO,EAAO9Q,KAJpB,gCAKEwG,MAAM,GAAD,OAAItE,EAAJ,qBAAwBY,EAAxB,iCAAuDgO,EAAOP,KAA9D,iBAA2EO,EAAO9Q,MAAO,CACtGyG,QAAS,CAAC,+BAA4B1D,MANhC,OAQQ,OAHlB2D,EALU,QAQHC,QACHlE,GAAY,GATN,0BAYW,OAAhBqO,EAAOP,MAAiC,OAAhBO,EAAO9Q,KAZ1B,kCAaEwG,MAAM,GAAD,OAAItE,EAAJ,qBAAwBY,EAAxB,iCAAuDgO,EAAOP,MAAO,CAClF9J,QAAS,CAAC,+BAA4B1D,MAdhC,QAgBQ,OAHlB2D,EAbU,QAgBHC,QACHlE,GAAY,GAjBN,2BAoBW,OAAhBqO,EAAOP,MAAiC,OAAhBO,EAAO9Q,KApB1B,kCAqBEwG,MAAM,GAAD,OAAItE,EAAJ,qBAAwBY,EAAxB,iCAAuDgO,EAAO9Q,MAAO,CAClFyG,QAAS,CAAC,+BAA4B1D,MAtBhC,QAwBQ,OAHlB2D,EArBU,QAwBHC,QACHlE,GAAY,GAzBN,yCA6BE+D,MAAM,GAAD,OAAItE,EAAJ,qBAAwBY,EAAxB,oBAAiD,CAC9D2D,QAAS,CAAC,+BAA4B1D,MA9BhC,QAgCQ,OAHlB2D,EA7BU,QAgCHC,QACHlE,GAAY,GAjCN,mCAqCK,OAAhBqO,EAAOP,MAAiC,OAAhBO,EAAO9Q,KArCpB,kCAsCEwG,MAAM,GAAD,OAAItE,EAAJ,qBAAwB+L,EAAY9H,QAAQjF,GAA5C,iCAAuE4P,EAAOP,KAA9E,iBAA2FO,EAAO9Q,MAAO,CACtHyG,QAAS,CAAC,+BAA4B1D,MAvChC,QAyCQ,OAHlB2D,EAtCU,QAyCHC,QACHlE,GAAY,GA1CN,2BA6CW,OAAhBqO,EAAOP,MAAiC,OAAhBO,EAAO9Q,KA7C1B,kCA8CEwG,MAAM,GAAD,OAAItE,EAAJ,qBAAwB+L,EAAY9H,QAAQjF,GAA5C,iCAAuE4P,EAAOP,MAAO,CAClG9J,QAAS,CAAC,+BAA4B1D,MA/ChC,QAiDQ,OAHlB2D,EA9CU,QAiDHC,QACHlE,GAAY,GAlDN,2BAqDW,OAAhBqO,EAAOP,MAAiC,OAAhBO,EAAO9Q,KArD1B,kCAsDEwG,MAAM,GAAD,OAAItE,EAAJ,qBAAwB+L,EAAY9H,QAAQjF,GAA5C,iCAAuE4P,EAAO9Q,MAAO,CAClGyG,QAAS,CAAC,+BAA4B1D,MAvDhC,QAyDQ,OAHlB2D,EAtDU,QAyDHC,QACHlE,GAAY,GA1DN,yCA8DE+D,MAAM,GAAD,OAAItE,EAAJ,qBAAwB+L,EAAY9H,QAAQjF,GAA5C,oBAAiE,CAC9EuF,QAAS,CAAC,+BAA4B1D,MA/DhC,QAiEQ,OAHlB2D,EA9DU,QAiEHC,QACHlE,GAAY,GAlEN,yBAwECiE,EAAIE,OAxEL,eAwEZjC,EAxEY,yBA0EXA,GA1EW,4CAAH,qDAsFnB,OAAgB,IAAbnC,GACCF,EAAOzC,GAEH,8BAIA,sBAAKY,UAAU,YAAf,UACI,qBAAKA,UAAU,aAAf,SACI,6BAAmBd,EAAdsO,EAAgB,kBAAuB,oBAEhD,4BACkBpL,IAAhBoL,GACF,cAAC,GAAD,CAA+BA,YAAaA,EAAatO,EAAGA,IAE5D,sBAAKc,UAAU,cAAf,UACI,8BAAId,EAAE,kBAAN,UACA,wBAAQoJ,SAtBK,SAACkJ,GAC1BrB,EAAYqB,EAAMhJ,OAAOC,OACzBsH,EAAQ,IAoB4CtH,MAAOyH,EAA/C,SACKL,EAAUrD,KAAI,SAACjN,GAAD,OACX,wBAAmBkJ,MAAOlJ,EAA1B,SACKA,GADQA,WAMxB+a,EAAS9N,KAAI,SAAC+M,GAAD,OACV,cAAC,GAAD,CAA0BA,QAASA,EAASra,EAAGA,EAAG2C,OAAQA,GAA5C0X,EAAQ9Y,OAE1B,cAACgR,EAAA,EAAD,CAAYzR,UAAU,OAAOgQ,MAAOA,EAAOF,KAAMA,EAAM4B,aAAc,EAAGC,cAAe,EAC3ElP,MAAM,UAAU6F,SAtCf,SAACkJ,EAAO/I,GAC7BsH,EAAQtH,UCnGDkS,GA7BkB,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,aAAc1b,EAAM,EAANA,EAE7C,OACI,+BACI,6BAAK0b,EAAaC,eAClB,6BACMD,EAAaE,YACX,6BACCF,EAAaE,YAAYtO,KAAI,SAACuO,GAAD,OAC1B,6BAAuBA,EAAS9S,MAAvB8S,EAASta,SAEd,KAEhB,6BACMma,EAAaE,YACX,6BACCF,EAAaE,YAAYtO,KAAI,SAACuO,GAAD,OAC1B,6BAAuBA,EAASC,kBAAvBD,EAASta,SAEd,KAEhB,6BAAKvB,EAAE,YACP,6BAAK0b,EAAaK,aAClB,6BAAKL,EAAahB,gBAAkB,IAAMgB,EAAaf,iBACvD,6BAAKe,EAAaM,cArBbN,EAAana,KCsBf0a,GAxBe,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,iBAAkBlc,EAAM,EAANA,EAE9C,OACI,wBAAOc,UAAU,8BAA8B2I,MAAO,CAAC4D,gBAAgB,QAASD,MAAQ,OAAxF,UACI,gCACI,+BACI,6BAAKpN,EAAE,eACP,6BAAKA,EAAE,iBACP,6BAAKA,EAAE,sBACP,6BAAKA,EAAE,YACP,6BAAKA,EAAE,kBACP,6BAAKA,EAAE,YACP,2CAGR,gCACCkc,EAAiB5O,KAAI,SAACoO,GAAD,OAClB,cAAC,GAAD,CAA0B1b,EAAGA,EAAG0b,aAAcA,GAAmBA,EAAana,aCgD/E4a,GA/DU,SAAC,GAAgB,IAAfnc,EAAc,EAAdA,EAAG2C,EAAW,EAAXA,OACpBzC,EAAUC,cAChB,EAAgCyC,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA6BF,oBAAS,WAElC,OADcG,KAAKC,MAAMd,eAAee,QAAQ,aAChCC,KAFpB,mBAAOC,EAAP,KAIA,GAJA,KAIkCP,oBAAS,WAEvC,OADcG,KAAKC,MAAMd,eAAee,QAAQ,gBAChCC,MAFpB,mBAAOE,EAAP,KAKA,GALA,KAK0CR,mBAAS,KAAnD,mBAAOsN,EAAP,KAAsBkM,EAAtB,KAEAjW,qBAAU,WACN,IAAIC,EAAa,IAAIC,gBAYrB,OAVA,sBAAC,4BAAAC,EAAA,+EAEmC+V,IAFnC,OAEanM,EAFb,OAGOkM,EAAiBlM,GACjB9J,EAAa,KAJpB,gDAMOK,QAAQC,IAAR,MACA5D,GAAY,GAPnB,wDAAD,GAUO,kCAAMsD,SAAN,aAAM,EAAYO,WAC3B,IAGF,IAAM0V,EAAkB,uCAAG,8BAAA/V,EAAA,sEACLO,MAAM,GAAD,OAAItE,EAAJ,qBAAwBY,EAAxB,kBAA+C,CAClE2D,QAAS,CAAC,+BAA4B1D,MAFnB,cAIL,OAHZ2D,EADiB,QAIhBC,QACHlE,GAAY,GALO,SAOJiE,EAAIE,OAPA,cAOjBjC,EAPiB,yBAShBA,GATgB,2CAAH,qDAYxB,OAAgB,IAAbnC,GACCF,EAAOzC,GAEH,8BAIA,sBAAKY,UAAU,YAAf,UACI,qBAAKA,UAAU,aAAf,SACI,6BAAKd,EAAE,yBAEX,qBAAKc,UAAU,kBAAf,SACI,cAAC,GAAD,CAAuBob,iBAAkBhM,EAAelQ,EAAGA,UC5ChEsc,GAdS,SAAC,GAAyB,IAAxBvc,EAAuB,EAAvBA,eAAgBC,EAAO,EAAPA,EACtC,OACI,gCACI,qBAAKyJ,MAAO,CAAC8S,UAAW,SAAUC,aAAc,QAAhD,SACI,+BAAKxc,EAAE,kBAAP,SAEJ,sBAAKyJ,MAAO,CAAEE,QAAS,OAAQC,eAAgB,SAAU4S,aAAc,QAAvE,UACI,sBAAM/S,MAAO,CAAEE,QAAS,eAAgB8S,YAAa,OAAQC,OAAQ,WAAY5b,UAAU,yBAAyBkB,QAAS,kBAAMjC,EAAe,SAClJ,sBAAM0J,MAAO,CAAEE,QAAS,eAAgBgT,WAAY,OAAQD,OAAQ,WAAY5b,UAAU,yBAAyBkB,QAAS,kBAAMjC,EAAe,gB,UC2GlJ6c,GA5GG,SAAC,GAA6C,IAA5C5c,EAA2C,EAA3CA,EAAGD,EAAwC,EAAxCA,eAAgBE,EAAwB,EAAxBA,UAAW4c,EAAa,EAAbA,QAGxC3c,EAAUC,cAEhB,EAA0CyC,wBAASM,GAAnD,mBAAO4Z,EAAP,KAAsBC,EAAtB,KA4CM1Z,EAASC,MAAaC,MAAM,CAC9Be,MAAOhB,MAAagB,MAAMtE,EAAE,eAAe2D,SAAS3D,EAAE,aACtDuE,SAAUjB,MAAaK,SAAS3D,EAAE,aAAayD,IAAI,EAAGzD,EAAE,+BAA+B0D,IAAI,GAAI1D,EAAE,iCAGrG,OACI,sBAAKc,UAAU,YAAY2I,MAAO,CAACuT,UAAU,MAAOR,aAAa,OAAjE,UACI,cAAC,GAAD,CAAiBzc,eAAgBA,EAAgBC,EAAGA,IACpD,cAAC,IAAD,CACIkH,iBAAkB7D,EAClB+D,SApDK,SAAAiB,GAEbxB,MAAM,GAAD,OAAItE,EAAJ,UAAoB,CACrB+E,OAAS,OACTR,QAAU,CAAC,8BAA8B,GAA9B,OAAkCvE,GACzC,eAAgB,mDAEpBgF,KAAO,IAAI0V,gBAAgB,CACvB,UAAc5U,EAAO/D,MACrB,SAAa+D,EAAO9D,aAGvBkD,MAAK,SAAAV,GACF,GAAkB,MAAfA,EAAIC,OAEH,MADA+V,EAAiB/c,EAAE,mBACb,IAAI4H,MAAM5H,EAAE,mBAEtB,OAAO+G,KAEVU,MAAK,SAAAV,GAAG,OAAEA,EAAIE,UACdQ,MAAK,SAACV,GACH7E,eAAeE,QAAQ,SAAU,QACjCF,eAAeE,QAAQ,QAASW,KAAKyE,UAAUT,EAAImW,eACnDhb,eAAeE,QAAQ,KAAMW,KAAKyE,UAAUT,EAAIoW,UAChDjb,eAAeE,QAAQ,SAAU,QACjCnC,GAAU,GACV,IAAImd,EAAUC,aAAUtW,EAAImW,cAC5Bhb,eAAeE,QAAQ,MAAOW,KAAKyE,UAAU4V,EAAQE,MACrDT,EAAQO,EAAQG,MAChBrb,eAAeE,QAAQ,OAAQW,KAAKyE,UAAU4V,EAAQG,OAnClD,YAqCDH,EAAQG,KACPrd,EAAQmC,KAAK,CACT/B,SAAW,kBAtChB,WAuCM8c,EAAQG,MACbrd,EAAQmC,KAAK,CACT/B,SAAW,qBAGtBuH,OAAM,SAAAC,GAAG,OAAErB,QAAQC,IAAIoB,OAcpBE,cAAe,GACfC,kBAAkB,EAClBC,iBAAiB,EACjBC,cAAe,CACX7D,MAAO,GACPC,SAAU,IARlB,SAUK,gBACK6D,EADL,EACKA,aACAoV,EAFL,EAEKA,aACAnV,EAHL,EAGKA,OACAC,EAJL,EAIKA,QACAa,EALL,EAKKA,QACAZ,EANL,EAMKA,OANL,OAQG,eAACC,EAAA,EAAD,CAAMpB,SAAUgB,EAAhB,UACI,eAACK,EAAA,EAAD,CAAK3H,UAAU,OAAf,UACI,eAAC0H,EAAA,EAAKG,MAAN,CAAYuE,GAAIxE,IAAK+U,GAAI,GAAIC,GAAI,EAAGzQ,UAAU,QAA9C,UACI,cAACzE,EAAA,EAAKI,MAAN,sBACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,QAAQC,KAAK,QAAQC,YAAahJ,EAAE,cAAeiJ,aAAcZ,EAAO/D,MAAO4E,YAAaX,EAAOjE,MAAO6E,QAASb,EAAQhE,QAAUiE,EAAOjE,MAAO8E,SAAUoU,IAChL,cAAChV,EAAA,EAAKK,QAAQW,SAAd,CAAuBV,KAAK,UAA5B,SAAuCP,EAAOjE,WAElD,eAACkE,EAAA,EAAKG,MAAN,CAAYuE,GAAIxE,IAAK+U,GAAI,GAAIC,GAAI,EAAGzQ,UAAU,WAA9C,UACI,eAACzE,EAAA,EAAKI,MAAN,WAAa5I,EAAE,YAAf,OACA,cAACwI,EAAA,EAAKK,QAAN,CAAcC,KAAK,WAAWC,KAAK,WAAWC,YAAahJ,EAAE,iBAAkBiJ,aAAcZ,EAAO9D,SAAU2E,YAAaX,EAAOhE,SAAU4E,QAASb,EAAQ/D,WAAagE,EAAOhE,SAAU6E,SAAUoU,IACrM,cAAChV,EAAA,EAAKK,QAAQW,SAAd,CAAuBV,KAAK,UAA5B,SAAuCP,EAAOhE,iBAGtD,qBAAKkF,MAAO,CAACC,MAAO,UAAW8S,aAAc,QAA7C,SAAuDM,IACvD,gCACK9c,EAAE,WADP,QAEI,cAAC6J,EAAA,EAAD,CAAQnJ,QAAQ,UAAUL,KAAK,KAAK2B,QAAS,WACzC9B,EAAQmC,KAAK,CACT/B,SAAW,eAFnB,SAIIN,EAAE,sBAEV,uBACA,qBAAKyJ,MAAO,CAACE,QAAS,OAAOC,eAAgB,UAA7C,SACI,cAACC,EAAA,EAAD,CAAQJ,MAAO,CAACkU,SAAS,QAASjd,QAAQ,UAAUoI,KAAK,SAASyL,UAAWpL,EAA7E,SAAuFnJ,EAAE,uBCoCtG4d,GAtIM,SAAC,GAAyB,IAAxB7d,EAAuB,EAAvBA,eAAgBC,EAAO,EAAPA,EAE7BqD,EAASC,MAAaC,MAAM,CAC9Be,MAAOhB,MAAagB,MAAMtE,EAAE,eAAe2D,SAAS3D,EAAE,aACtD6D,MAAOP,MAAaG,IAAI,GAAIzD,EAAE,wBAAwB0D,IAAI,GAAI1D,EAAE,wBAC3D8D,KAAK,gBAAiB9D,EAAE,sBACrB,SAAuB6D,GAEnB,IAAuB,IADb,cACHC,KAAKD,GACR,OAAO,EAGP,IAAIE,GAAU,GAAGF,GAAOG,MAAM,IAC9B,GAAKC,SAASJ,EAAMK,UAAW,EAAG,IAAM,IAAMD,SAASJ,EAAMK,UAAW,EAAG,IAAM,GAC7E,OAAO,EAEX,IAAIC,GAAY,EAAEF,SAASF,EAAO,IAAM,EAAEE,SAASF,EAAO,IAAM,EAAEE,SAASF,EAAO,IAAM,EAAEE,SAASF,EAAO,IAAM,EAAEE,SAASF,EAAO,IAAM,EAAEE,SAASF,EAAO,IAAM,EAAEE,SAASF,EAAO,IAAM,EAAEE,SAASF,EAAO,IAAM,EAAEE,SAASF,EAAO,IAAM,EAAEE,SAASF,EAAO,KAAK,GAK/P,OAJgB,IAAbI,IACCA,EAAW,IACfA,EAAW,GAAKA,EAERF,SAASF,EAAO,OAASI,KAG5CR,SAAS3D,EAAE,aAChBuE,SAAUjB,MAAaG,IAAI,EAAGzD,EAAE,+BAA+B0D,IAAI,GAAI1D,EAAE,+BAA+B2D,SAAS3D,EAAE,aACnHwE,gBAAiBlB,MAAamB,MAAM,CAACnB,IAAQ,YAAa,IAAKtD,EAAE,kBAAkB2D,SAAS3D,EAAE,eAG5FE,EAAUC,cA8BhB,OACI,sBAAKW,UAAU,YAAY2I,MAAO,CAACuT,UAAU,MAAOR,aAAa,OAAjE,UACI,cAAC,GAAD,CAAiBzc,eAAgBA,EAAgBC,EAAGA,IACpD,cAAC,IAAD,CACIkH,iBAAkB7D,EAClB8D,oBAAoB,EACpBC,SAlCK,SAAAiB,GACb,IAAMwV,EAAY,CACdha,MAAQwE,EAAOxE,MACfS,MAAQ+D,EAAO/D,MACfC,SAAW8D,EAAO9D,UAGtBsC,MAAM,GAAD,OAAItE,EAAJ,iBAA2B,CAC5B+E,OAAS,OACTR,QAAU,CAAC,8BAA8B,GAA9B,OAAkCvE,GACzC,eAAgB,kCACpBgF,KAAOxE,KAAKyE,UAAUqW,KAErBpW,MAAK,SAAAV,GACF,GAAkB,MAAfA,EAAIC,OAEH,MADAU,OAAOC,MAAM3H,EAAE,0BACT,IAAI4H,MAAM5H,EAAE,0BAElB0H,OAAOC,MAAM3H,EAAE,uBACfE,EAAQmC,KAAK,CACT/B,SAAS,cAGpBuH,OAAM,SAAAC,GACHrB,QAAQC,IAAIoB,EAAIgW,aAWhB9V,cAAe,GACfE,iBAAiB,EACjBC,cAAe,CACX7D,MAAQ,GACRT,MAAQ,GACRU,SAAU,GACVC,gBAAiB,IAVzB,SAYK,gBACKgZ,EADL,EACKA,aACApV,EAFL,EAEKA,aACAC,EAHL,EAGKA,OACAC,EAJL,EAIKA,QACAa,EALL,EAKKA,QACAZ,EANL,EAMKA,OANL,OAQG,eAACC,EAAA,EAAD,CAAOpB,SAAUgB,EAAjB,UACI,eAACK,EAAA,EAAD,CAAK3H,UAAU,0BAAf,UACI,cAAC4H,EAAA,EAAD,UACI,eAACF,EAAA,EAAKG,MAAN,WACI,cAACH,EAAA,EAAKI,MAAN,qBACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,OAAOC,KAAK,QAAQC,YAAY,QAAQC,aAAcZ,EAAO/D,MAAO4E,YAAaX,EAAO1E,MAAOsF,QAASb,EAAQzE,QAAU0E,EAAO1E,MAAOuF,SAAUoU,IACrK,cAAChV,EAAA,EAAKK,QAAQW,SAAd,CAAuBV,KAAK,UAA5B,SAAuCP,EAAO1E,aAGtD,cAAC6E,EAAA,EAAD,UACI,eAACF,EAAA,EAAKG,MAAN,WACI,cAACH,EAAA,EAAKI,MAAN,qBACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,QAAQC,KAAK,QAAQC,YAAY,QAAQC,aAAcZ,EAAO/D,MAAO4E,YAAaX,EAAOjE,MAAO6E,QAASb,EAAQhE,QAAUiE,EAAOjE,MAAO8E,SAAUoU,IACtK,cAAChV,EAAA,EAAKK,QAAQW,SAAd,CAAuBV,KAAK,UAA5B,SAAuCP,EAAOjE,gBAI1D,eAACmE,EAAA,EAAD,CAAK3H,UAAU,0BAAf,UACI,cAAC4H,EAAA,EAAD,UACI,eAACF,EAAA,EAAKG,MAAN,WACI,eAACH,EAAA,EAAKI,MAAN,WAAa5I,EAAE,YAAf,OACA,cAACwI,EAAA,EAAKK,QAAN,CAAcC,KAAK,WAAWC,KAAK,WAAWC,YAAahJ,EAAE,YAAaiJ,aAAcZ,EAAO9D,SAAU2E,YAAaX,EAAOhE,SAAU4E,QAASb,EAAQ/D,WAAagE,EAAOhE,SAAU6E,SAAUoU,IAChM,cAAChV,EAAA,EAAKK,QAAQW,SAAd,CAAuBV,KAAK,UAA5B,SAAuCP,EAAOhE,gBAGtD,cAACmE,EAAA,EAAD,UACI,eAACF,EAAA,EAAKG,MAAN,WACI,eAACH,EAAA,EAAKI,MAAN,WAAa5I,EAAE,mBAAf,OACA,cAACwI,EAAA,EAAKK,QAAN,CAAcC,KAAK,WAAWC,KAAK,kBAAkBC,YAAahJ,EAAE,mBAAoBiJ,aAAcZ,EAAO7D,gBAAiB0E,YAAaX,EAAO/D,gBAAiB2E,QAASb,EAAQ9D,kBAAoB+D,EAAO/D,gBAAiB4E,SAAUoU,IAC1O,cAAChV,EAAA,EAAKK,QAAQW,SAAd,CAAuBV,KAAK,UAA5B,SAAuCP,EAAO/D,0BAIzD,gCACKxE,EAAE,wBADP,QAEI,cAAC6J,EAAA,EAAD,CAAQnJ,QAAQ,UAAUL,KAAK,KAAK2B,QAAS,WACzC9B,EAAQmC,KAAK,CACT/B,SAAW,YAFnB,sBAMJ,uBACD,qBAAKmJ,MAAO,CAACE,QAAQ,OAAQC,eAAgB,UAA7C,SACI,cAACC,EAAA,EAAD,CAAQnJ,QAAQ,UAAUL,KAAK,KAAKyI,KAAK,SAASyL,UAAWpL,EAA7D,SAAuEnJ,EAAE,0BCvItF,OAA0B,gCCU1B+d,GAPE,SAAC,GAAD,IAAE/d,EAAF,EAAEA,EAAF,OACb,sBAAKc,UAAU,YAAY2I,MAAO,CAACuT,UAAU,MAAOR,aAAa,OAAjE,UACI,qBAAK/S,MAAO,CAAC2D,MAAO,QAASjM,IAAK6c,GAAY9c,IAAK,kBACnD,oBAAIuI,MAAO,CAACE,QAAS,OAAQC,eAAgB,UAA7C,SAAyD5J,EAAE,kB,oBCkDpDie,GAlDW,SAAC,GAAc,IAAbzP,EAAY,EAAZA,IAAKxO,EAAO,EAAPA,EACvBE,EAAUC,cAChB,EAAsCyC,mBAAS4L,GAA/C,mBAAOF,EAAP,KAAoBG,EAApB,KACMK,EAAO,OAETC,EAAuC,KAAlC,IAAItM,MAAQuM,oBACjB1I,EAAI4X,KAAOzb,KAAK0b,OAChBvM,EAAIsM,KAAO5P,EAAY9H,QAAQpC,WAEnC+B,qBAAU,gBACKjD,IAARsL,GACCC,EAAeD,KAErB,CAACA,IAWH,OACI,sBAAK1N,UAAWwN,EAAYe,QAAUP,EAAO,iCAAmC,oCAAhF,UACI,sBAAKhO,UAAU,MAAf,UACI,mBAAGA,UAAU,8BAAb,SAA4Cd,EAAEsO,EAAY8P,sBAC1D,sBAAKtd,UAAU,OAAf,UACKwN,EAAYe,QAAUP,GAAQ,4BAAG,cAAC,IAAD,CAAazO,KAAM,GAAIoJ,MAAO,CAACC,MAAO,eACxE,8BAAI1J,EAAE,QAAN,OAAqBsO,EAAYlC,KAAO,IAAI3J,KAAK,IAAIA,KAAK6L,EAAYlC,MAAM2C,GAAGG,cAAcC,MAAM,GAAG,IAAM,YAGpH,gCACI,8BAAG,cAAC,IAAD,CAAW9O,KAAM,KAAOiO,EAAY9H,QAAW8H,EAAY9H,QAAQhD,UAAY,IAAM8K,EAAY9H,QAAQ5C,SAAY,MACxH,8BAAI5D,EAAE,OAAN,OAAoBsG,EAAE+X,KAAKzM,EAAG,WA/BxB,cAgCLtD,EAAYxF,KAAqB9I,EAAE,eAAiB,IAAMsO,EAAY9H,QAAQnC,YAAc,MAEhGiK,EAAYe,QAAUP,GACnB,qCACI,uBACA,qBAAKrF,MAAO,CAACE,QAAS,OAAQC,eAAgB,YAA9C,SACI,wBAAQ9I,UAAU,eAAekB,QAAS,SAAAqH,GAAC,OA3B3C,SAAAA,GAChBA,EAAEoD,iBAEFvM,EAAQmC,KAAK,CACT/B,SAAS,iBAAD,OAAmBgO,EAAY/M,GAA/B,YACR8N,MAAOf,IAsBoDyH,CAAY1M,IAA3D,SAAgErJ,EAAE,yBCqF3Ese,GA/Hc,SAAC,GAAiB,IAAhBte,EAAe,EAAfA,EAAG2C,EAAY,EAAZA,OACxBzC,EAAUC,cAChB,EAAgCyC,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA4BF,oBAAS,WAEjC,OADcG,KAAKC,MAAMd,eAAee,QAAQ,aAChCC,KAFpB,mBAAOC,EAAP,KAIA,GAJA,KAIkCP,oBAAS,WAEvC,OADcG,KAAKC,MAAMd,eAAee,QAAQ,gBAChCC,MAFpB,mBAAOE,EAAP,KAKMuN,GALN,KAKkB,CAAC,EAAG,EAAG,KACzB,EAAwC/N,mBAAS,IAAjD,mBAAOwN,EAAP,KAAqBC,EAArB,KACA,EAAwBzN,mBAAS,GAAjC,mBAAOgO,EAAP,KAAaC,EAAb,KACA,EAA0BjO,mBAAS,GAAnC,mBAAOkO,EAAP,KAAcC,EAAd,KACA,EAAgCnO,mBAAS+N,EAAU,IAAnD,mBAAOK,EAAP,KAAiBC,EAAjB,KAEMC,EAAmB,SAACN,EAAMI,GAC5B,IAAIG,EAAS,GAQb,OANGP,IACCO,EAAM,KAAWP,EAAO,GAEzBI,IACCG,EAAM,KAAWH,GAEdG,GAGXhL,qBAAU,WACN,IAAIC,EAAa,IAAIC,gBAYrB,OAXA,sBAAC,4BAAAC,EAAA,+EAEkCmL,IAFlC,OAEarB,EAFb,OAGOC,EAAgBD,EAAaA,cAC7BW,EAASX,EAAasB,YACtBtL,EAAa,KALpB,gDAOOK,QAAQC,IAAR,MACA5D,GAAY,GARnB,wDAAD,GAWO,kCAAKsD,SAAL,aAAK,EAAYO,WAEzB,CAACiK,EAAMI,IAEV,IAAMS,EAAiB,uCAAG,gCAAAnL,EAAA,yDAGH,QAFb6K,EAASD,EAAiBN,EAAMI,IAE5BJ,MAAiC,OAAhBO,EAAO9Q,KAHZ,gCAINwG,MAAM,GAAD,OAAItE,EAAJ,oBAAuBY,EAAvB,8BAAmDgO,EAAOP,KAA1D,iBAAuEO,EAAO9Q,MAAO,CAClGyG,QAAS,CAAC,+BAA4B1D,MALxB,OAOA,OAHlB2D,EAJkB,QAOXC,QACHlE,GAAY,GARE,0BAUG,OAAhBqO,EAAOP,MAAiC,OAAhBO,EAAO9Q,KAVlB,kCAWNwG,MAAM,GAAD,OAAItE,EAAJ,oBAAuBY,EAAvB,8BAAmDgO,EAAOP,MAAO,CAC9E9J,QAAS,CAAC,+BAA4B1D,MAZxB,QAcA,OAHlB2D,EAXkB,QAcXC,QACHlE,GAAY,GAfE,2BAiBG,OAAhBqO,EAAOP,MAAiC,OAAhBO,EAAO9Q,KAjBlB,kCAkBNwG,MAAM,GAAD,OAAItE,EAAJ,oBAAuBY,EAAvB,8BAAmDgO,EAAO9Q,MAAO,CAC9EyG,QAAS,CAAC,+BAA4B1D,MAnBxB,QAqBA,OAHlB2D,EAlBkB,QAqBXC,QACHlE,GAAY,GAtBE,yCAyBN+D,MAAM,GAAD,OAAItE,EAAJ,oBAAuBY,EAAvB,iBAA6C,CAC1D2D,QAAS,CAAC,+BAA4B1D,MA1BxB,QA4BA,OAHlB2D,EAzBkB,QA4BXC,QACHlE,GAAY,GA7BE,yBAiCHiE,EAAIE,OAjCD,eAiChBjC,EAjCgB,yBAmCfA,GAnCe,4CAAH,qDA+CvB,OAAgB,IAAbnC,GACCF,EAAOzC,GAEH,8BAIA,sBAAKY,UAAU,YAAf,UACI,qBAAKA,UAAU,aAAf,SACI,6BAAKd,EAAE,yBAEX,sBAAKc,UAAU,cAAf,UACI,8BAAId,EAAE,kBAAN,UACA,wBAAQoJ,SAlBK,SAACkJ,GAC1BrB,EAAYqB,EAAMhJ,OAAOC,OACzBsH,EAAQ,IAgB4CtH,MAAOyH,EAA/C,SACKL,EAAUrD,KAAI,SAACjN,GAAD,OACX,wBAAmBkJ,MAAOlJ,EAA1B,SACKA,GADQA,WAMzB,qBAAKS,UAAU,kBAAf,SACKsP,EAAa9C,KAAI,SAAAgB,GAAW,OACzB,cAAC,GAAD,CAAwCE,IAAKF,EAAatO,EAAGA,GAArCsO,EAAY/M,SAG5C,cAACgR,EAAA,EAAD,CAAYzR,UAAU,OAAOgQ,MAAOA,EAAOF,KAAMA,EAAM4B,aAAc,EAAGC,cAAe,EAC3ElP,MAAM,UAAU6F,SApCf,SAACkJ,EAAO/I,GAC7BsH,EAAQtH,UC5CDgV,GAxCU,SAAC,GAAmC,IAAlCxe,EAAiC,EAAjCA,eAAgBC,EAAiB,EAAjBA,EAAGC,EAAc,EAAdA,UACpCC,EAAUC,cACVC,EAAgB,cAAC,IAAD,CAAUC,KAAM,KAC/BC,EAAYC,cAAZD,SASP,OACI,cAACE,EAAA,EAAD,CAAQC,GAAG,QAAQC,QAAQ,QAAQC,OAAO,KAAKC,iBAAiB,OAAOC,OAAO,MAAMC,UAAU,eAA9F,SACI,eAACC,EAAA,EAAD,CAAWC,OAAK,EAAhB,UACI,cAACR,EAAA,EAAOS,MAAR,CAAcH,UAAU,eAAxB,SAAuC,qBAAKK,IAAKC,EAAMF,IAAK,WAC5D,cAACV,EAAA,EAAOa,OAAR,CAAe,gBAAc,qBAC7B,eAACb,EAAA,EAAOc,SAAR,CAAiBC,GAAG,8BAA8BT,UAAU,cAA5D,UACI,eAACU,EAAA,EAAD,CAAKV,UAAU,SAAf,UACI,cAAC,gBAAD,CAAeW,GAAG,gBAAgBC,WAAW,SAA7C,SACI,cAACF,EAAA,EAAIG,KAAL,CAAUC,OAAK,EAACd,UAAU,cAA1B,SAAyCd,EAAE,yBAE/C,cAAC,gBAAD,CAAeyB,GAAG,aAAaC,WAAW,SAA1C,SACI,cAACF,EAAA,EAAIG,KAAL,CAAUC,OAAK,EAACd,UAAU,cAA1B,SAAyCd,EAAE,kBALtBM,GAQ7B,eAACuB,EAAA,EAAD,CAAaf,UAAU,mBAAmBgB,MAAO1B,EAAcmB,GAAG,qBAAlE,UACI,eAACM,EAAA,EAAD,CAAaC,MAAO9B,EAAE,YAAauB,GAAG,qBAAtC,UACI,cAACM,EAAA,EAAYE,KAAb,CAAkBC,QAAS,WAAOjC,EAAe,OAAjD,qBACA,cAAC8B,EAAA,EAAYE,KAAb,CAAkBC,QAAS,WAAOjC,EAAe,OAAjD,uBAEJ,cAAC8B,EAAA,EAAYI,QAAb,IACA,cAACJ,EAAA,EAAYE,KAAb,CAAkBC,QA3BjB,WACjBE,eAAeC,QACfD,eAAeE,QAAQ,SAAU,SACjCnC,GAAU,GACVC,EAAQmC,KAAK,WAuBG,SAA0CrC,EAAE,wB,qBCifrDwe,GAjhBgB,SAAC,GAA8B,IAA7BlQ,EAA4B,EAA5BA,YAAatO,EAAe,EAAfA,EAAG2C,EAAY,EAAZA,OAC7C,EAAgCC,oBAAS,GAAzC,mBAAiBE,GAAjB,WACA,EAAkCF,oBAAS,WAEvC,OADcG,KAAKC,MAAMd,eAAee,QAAQ,gBAChCC,KAFpB,mBAAOE,EAAP,KAKMlD,GALN,KAKgBC,eACVqK,EAAMC,mBACNwE,EAAY,SAAA7C,GAAI,OAAIA,EAAK8C,cAAcC,MAAM,EAAE,KACrD,EAA4BvM,mBAAS,IAArC,mBAAO2F,EAAP,KAAegC,EAAf,KAEA,EAAgC3H,mBAAS,IAAzC,mBAAO+Q,EAAP,KAAiBC,EAAjB,KACA,EAAgChR,mBAAS,IAAzC,mBAAO4Y,EAAP,KAAiBiD,EAAjB,KACA,EAAsC7b,mBAAS,IAA/C,mBAAOgZ,EAAP,KAAoB8C,EAApB,KAEA,EAAsB9b,mBAAS0L,GAA/B,mBAAOE,EAAP,KACA,GADA,KACsC5L,oBAAS,WAE3C,OADcV,eAAee,QAAQ,qBACrBC,MAFpB,mBAAO6J,EAAP,KAAoB4R,EAApB,KAKA,EAA8C/b,oBAAS,WAEnD,OADcV,eAAee,QAAQ,yBACrBC,KAFpB,mBAAO6M,EAAP,KAAwB6O,EAAxB,KAKA,EAA8Bhc,wBAASM,GAAvC,oBAAOqM,GAAP,MAAgB4D,GAAhB,MACA,GAAoDvQ,mBAASqM,EAAU,IAAIxM,MAAK,IAAIA,MAAO2M,SAAQ,IAAI3M,MAAO8J,UAAU,OAAxH,qBAAOsS,GAAP,MAA2BC,GAA3B,MACA,GAAgDlc,wBAASM,GAAzD,qBAAO6b,GAAP,MAAyBC,GAAzB,MACA,GAAkCpc,oBAAS,WACvC,IAAMqc,EAAQ/c,eAAee,QAAQ,aAErC,OADuBF,KAAKC,MAAMic,IACT,MAH7B,qBAAOxL,GAAP,MAAkBC,GAAlB,MAMA,GAAoC9Q,wBAASM,GAA7C,qBAAOgc,GAAP,MAAmBC,GAAnB,MACA,GAAgDvc,wBAASM,GAAzD,qBAAOkc,GAAP,MAAyBC,GAAzB,MACA,GAAoDzc,mBAAS,GAA7D,qBAAO0c,GAAP,MAA2BC,GAA3B,MACA,GAAoD3c,wBAASM,GAA7D,qBAAOsc,GAAP,MAA2BC,GAA3B,MACA,GAAgD7c,oBAAS,WACrD,IAAMqc,EAAQ/c,eAAee,QAAQ,eAErC,OADyBF,KAAKC,MAAMic,IACT,MAH/B,qBAAOS,GAAP,MAAyBC,GAAzB,MAMA,GAA8C/c,wBAASM,GAAvD,qBAAO0c,GAAP,MAAwBC,GAAxB,MACA,GAAoDjd,wBAASM,GAA7D,qBAAO4c,GAAP,MAA2BC,GAA3B,MACA,GAA0Cnd,wBAASM,GAAnD,qBAAO8c,GAAP,MAAsBC,GAAtB,MACA,GAAkDrd,wBAASM,GAA3D,qBAAOgd,GAAP,MAA0BC,GAA1B,MACA,GAA8Cvd,wBAASM,GAAvD,qBAAOkd,GAAP,MAAwBC,GAAxB,MACA,GAA0Czd,oBAAS,WAC/C,IAAMqc,EAAQ/c,eAAee,QAAQ,YAErC,OADsBF,KAAKC,MAAMic,IACT,MAH5B,qBAAOqB,GAAP,MAAsBC,GAAtB,MAUApa,qBAAU,WACN,IAAIC,EAAa,IAAIC,gBAerB,OAbA,sBAAC,4BAAAC,EAAA,+EAE8B6N,KAF9B,QAEaR,EAFb,QAGgBS,SAAQ,SAAA7E,GACbA,EAAQxG,KAAO/I,EAAEuP,EAAQxG,SAE7B6K,EAAYD,GACZvN,EAAa,KAPpB,gDASOK,QAAQC,IAAR,MACA5D,GAAY,GAVnB,wDAAD,GAaO,kCAAKsD,SAAL,aAAK,EAAYO,WAEzB,IAEH,IAAMwN,GAAa,uCAAG,4BAAA7N,EAAA,sEACAO,MAAM,GAAD,OAAItE,EAAJ,oBAA8B,CACjDuE,QAAS,CAAC,+BAA4B1D,MAFxB,cAIA,OAHZ2D,EADY,QAIXC,QACHlE,GAAY,GALE,SAOLiE,EAAIE,OAPC,mFAAH,qDAUnBd,qBAAU,WACN,IAAIC,EAAa,IAAIC,gBAerB,OAbA,sBAAC,4BAAAC,EAAA,+EAE8Bka,KAF9B,QAEahF,EAFb,QAGgBpH,SAAQ,SAAAmG,GACbA,EAAQxR,KAAO/I,EAAEua,EAAQxR,SAE7B0V,EAAYjD,GACZpV,EAAa,KAPpB,gDASOK,QAAQC,IAAR,MACA5D,GAAY,GAVnB,wDAAD,GAaO,kCAAKsD,SAAL,aAAK,EAAYO,WAEzB,IAEH,IAAM6Z,GAAa,uCAAG,4BAAAla,EAAA,sEACAO,MAAM,GAAD,OAAItE,EAAJ,aAAuB,CAC1CuE,QAAS,CAAC,+BAA4B1D,MAFxB,cAIA,OAHZ2D,EADY,QAIXC,QACHlE,GAAY,GALE,SAOLiE,EAAIE,OAPC,mFAAH,qDAUnBd,qBAAU,WACN,IAAIC,EAAa,IAAIC,gBAYrB,OAVA,sBAAC,4BAAAC,EAAA,+EAEiCma,KAFjC,OAEa7E,EAFb,OAGO8C,EAAe9C,GACfxV,EAAa,KAJpB,gDAMOK,QAAQC,IAAR,MACA5D,GAAY,GAPnB,wDAAD,GAUO,kCAAKsD,SAAL,aAAK,EAAYO,WAEzB,IAEH,IAAM8Z,GAAgB,uCAAG,4BAAAna,EAAA,sEACHO,MAAM,GAAD,OAAItE,EAAJ,gBAA0B,CAC7CuE,QAAS,CAAC,+BAA4B1D,MAFrB,cAIH,OAHZ2D,EADe,QAIdC,QACHlE,GAAY,GALK,SAORiE,EAAIE,OAPI,mFAAH,qDA8EhByZ,GAAwB,SAACrX,GAC3BA,EAAEoD,iBACF,IAAIkU,EAAe,QAEIzd,IAApB0c,KACCe,EAAY,UAAgBf,GAAgBre,GAC5Cof,EAAY,KAAWf,GAAgB7W,UAEb7F,IAAvB4c,KACCa,EAAY,YAAkBb,SAEb5c,IAAlB8c,IAAiD,KAAlBA,KAC9BW,EAAY,OAAaX,SAEJ9c,IAAtBgd,KACCS,EAAY,KAAWT,IAG3BI,GAAcje,KAAKse,GACnBze,eAAeE,QAAQ,WAAYW,KAAKyE,UAAU8Y,KAClDT,QAAmB3c,GACLuK,SAAS+G,eAAe,iBAC9BjL,MAAQvJ,EAAE,iBAClB+f,GAAsB,IACtBE,GAAiB,IACjBE,QAAqBjd,GAvLzBsH,EAAIqC,QAAQtD,MAAQ,KAyMlBqB,GAAkB,SAACC,GACrB,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACzB,IAAMC,EAAa,IAAIC,WACvBD,EAAWE,cAAcN,GACzBI,EAAWG,OAAS,WAChBL,EAAQE,EAAWI,SAEvBJ,EAAWK,QAAU,SAACC,GAClBP,EAAOO,QAKbC,GAAgB,uCAAG,WAAOnC,GAAP,6BAAA/C,EAAA,6DACfuE,EAAOxB,EAAEC,OAAOS,MAAM,GADP,SAEAa,GAAgBC,GAFhB,OAOrB,IALMY,EAFe,OAGjBzG,EAAOyG,EAAOzH,MAAM,WAAW,GAC/B0H,EAAaC,KAAK3G,GAElB4G,EAAc,IAAIC,MAAMH,EAAWI,QAC/BC,EAAI,EAAGA,EAAIL,EAAWI,OAAQC,IAClCH,EAAYG,GAAKL,EAAWM,WAAWD,GAEvCjI,EAAO,IAAImI,WAAWL,GACtBM,EAAQL,MAAMM,KAAKrI,GACvBqc,GAAqBjU,GAZA,4CAAH,sDAiFhBQ,GAAiB,WACnB,IAAMI,EAAY,GAKlB,YAHmB5J,IAAhB6J,GAA6C,KAAhBA,IAC5BD,EAAUC,YAAc/M,EAAE,mCAEvB8M,GAGX,OACI,eAACtE,EAAA,EAAD,CAAM1H,UAAU,qBAAhB,UACI,eAAC0H,EAAA,EAAKG,MAAN,CAAY7H,UAAU,OAAOmM,UAAU,+BAAvC,UACI,cAACzE,EAAA,EAAKI,MAAN,UAAa5I,EAAE,4BACf,cAACwI,EAAA,EAAKK,QAAN,CAAcqE,GAAG,WAAW0T,KAAM,EAAGrX,MAAOwD,EAAa7D,YAAaX,EAAOwE,YAAa3D,SAAU,SAACC,GACjGsV,EAAetV,EAAEC,OAAOC,OACxBrH,eAAeE,QAAQ,cAAeiH,EAAEC,OAAOC,OAC1ChB,EAAM,aACPgC,EAAU,2BACHhC,GADE,kBAEJ,cAAe,WAG5B,cAACC,EAAA,EAAKK,QAAQW,SAAd,CAAuBV,KAAK,UAA5B,SAAuCP,EAAOwE,iBAElD,eAACvE,EAAA,EAAKG,MAAN,CAAY7H,UAAU,OAAOmM,UAAU,8BAAvC,UACI,eAACzE,EAAA,EAAKI,MAAN,WAAa5I,EAAE,mBAAf,OACA,cAACwI,EAAA,EAAKK,QAAN,CAAcqE,GAAG,WAAW0T,KAAM,EAAGrX,MAAOwG,EAAiB3G,SAAU,SAACC,GACpEuV,EAAmBvV,EAAEC,OAAOC,OAC5BrH,eAAeE,QAAQ,kBAAmBiH,EAAEC,OAAOC,aAG3D,eAACd,EAAA,EAAD,CAAK3H,UAAU,OAAf,UACI,eAAC0H,EAAA,EAAKI,MAAN,WAAa5I,EAAE,aAAf,OACA,eAAC0I,EAAA,EAAD,CAAKgV,IAAE,EAAP,UACI,eAAClV,EAAA,EAAKG,MAAN,WACI,eAACH,EAAA,EAAKI,MAAN,CAAYiY,OAAO,KAAnB,UAAyB7gB,EAAE,iBAA3B,OACA,eAACwI,EAAA,EAAK8M,OAAN,CAAa/T,GAAG,gBAAhB,UACI,wBAAQS,QAAS,kBAAMmR,QAAWjQ,IAAlC,SAA+ClD,EAAE,mBAChD2T,EAASrG,KAAI,SAACmI,GAAD,OACV,wBAAQlM,MAAOkM,EAAKzT,QAAS,WACzBmR,GAAWsC,IADf,SAEIA,EAAI1M,gBAIpB,eAACP,EAAA,EAAKG,MAAN,WACI,cAACH,EAAA,EAAKI,MAAN,CAAYiY,OAAO,KAAnB,SAAyB7gB,EAAE,0BAC3B,cAACwI,EAAA,EAAKK,QAAN,CAAcC,KAAK,OAAOS,MAAOsV,GAAoBzV,SAAU,SAACC,GAAD,OAAOyV,GAAsBzV,EAAEC,OAAOC,gBAG7G,eAACb,EAAA,EAAD,CAAKgV,IAAE,EAAP,UACI,cAAClV,EAAA,EAAKI,MAAN,CAAYiY,OAAO,KAAnB,SAAyB7gB,EAAE,mBAC3B,qBAAKyJ,MAAO,CAACqX,SAAU,SAAUzO,OAAQ,SAAzC,SACKoB,GAAUnG,KAAI,SAACsF,GACZ,OAAO,qBAAK9R,UAAU,gCAAkDkB,QAAS,WAC7Egd,GAAoBpM,IADjB,SAEHA,EAASwL,mBAAqB,IAAMpe,EAAE,MAAQ,KAAM4S,EAASoC,YAFNpC,EAASrR,eAQpF,sBAAKkI,MAAO,CAACE,QAAS,OAAQC,eAAgB,iBAA9C,UACI,wBAAQ9I,UAAU,YAAYkB,QAAS,SAAAqH,GAAC,OA5QrB,SAACA,GAC5BA,EAAEoD,iBACF,IAAImG,EAAW,QAEC1P,IAAZqM,KACAqD,EAAQ,iBAAuBrD,GAAQhO,GACvCqR,EAAQ,mBAAyBrD,GAAQxG,KACzC6J,EAAQ,WAAiBiM,GAEzBpL,GAAUpR,KAAKuQ,GACf1Q,eAAeE,QAAQ,YAAaW,KAAKyE,UAAUiM,KACnDN,QAAWjQ,GACGuK,SAAS+G,eAAe,iBAC9BjL,MAAQvJ,EAAE,iBAClB8e,GAAsB7P,EAAU,IAAIxM,MAAK,IAAIA,MAAO2M,SAAQ,IAAI3M,MAAO8J,UAAU,QA8PnCwU,CAAuB1X,IAAjE,SAAsErJ,EAAE,iBACxE,wBAAQc,UAAU,eAAekB,QAAS,SAAAqH,GAAC,OA3PxB,SAACA,GAE5B,GADAA,EAAEoD,sBACsBvJ,IAArB6b,GAA+B,CAC/B,IAAMiC,EAAWvN,GAAUyH,QAAQ6D,IAChCiC,GAAY,IACXvN,GAAUwN,OAAOD,EAAU,GAC3BtN,GAAaD,IACbvR,eAAeE,QAAQ,YAAaW,KAAKyE,UAAUiM,KACnDuL,QAAoB9b,KAmP0Bge,CAAuB7X,IAApE,SAAyErJ,EAAE,uBAE/E,uBAEA,eAACyI,EAAA,EAAD,CAAK3H,UAAU,iBAAf,UACI,eAAC4H,EAAA,EAAD,CAAKgV,IAAE,EAAP,UACI,cAAClV,EAAA,EAAKI,MAAN,UAAa5I,EAAE,iBACf,eAACwI,EAAA,EAAKG,MAAN,WACI,eAACH,EAAA,EAAKI,MAAN,CAAYiY,OAAO,KAAnB,UAAyB7gB,EAAE,oBAA3B,OACA,eAACwI,EAAA,EAAK8M,OAAN,CAAa/T,GAAG,mBAAhB,UACI,wBAAQS,QAAS,kBAAMmd,QAAcjc,IAArC,SAAkDlD,EAAE,sBACnD4b,EAAYtO,KAAI,SAAC4R,GAAD,OACb,wBAAQ3V,MAAO2V,EACPld,QAAS,kBAAImd,GAAcD,IADnC,SACiDA,EAAWnW,MAD5BmW,EAAW3d,aAKvD,eAACiH,EAAA,EAAKG,MAAN,CAAY7H,UAAU,OAAtB,UACI,eAAC0H,EAAA,EAAKI,MAAN,CAAYiY,OAAO,KAAnB,UAAyB7gB,EAAE,UAA3B,OACA,cAACwI,EAAA,EAAKK,QAAN,CAAcC,KAAK,OAAOE,YAAahJ,EAAE,UAAWuJ,MAAO6V,GAAkBhW,SAAU,SAACC,GAAD,OAAKgW,GAAoBhW,EAAEC,OAAOC,aAE7H,eAACf,EAAA,EAAKG,MAAN,WACI,cAACH,EAAA,EAAKI,MAAN,CAAYiY,OAAO,KAAnB,SAAyB7gB,EAAE,0BAC3B,cAAC,KAAD,CACIuJ,MAAO+V,GACPlW,SAAU,SAACC,GAAD,OAAOkW,GAAsBtb,SAASoF,EAAEC,OAAOC,iBAIrE,eAACb,EAAA,EAAD,CAAKgV,IAAE,EAAP,UACI,cAAClV,EAAA,EAAKI,MAAN,CAAYiY,OAAO,KAAnB,SAAyB7gB,EAAE,qBAC3B,qBAAKyJ,MAAO,CAACqX,SAAU,SAAUzO,OAAQ,SAAzC,SACKqN,GAAiBpS,KAAI,SAAC4R,GACnB,OAAO,qBAAKpe,UAAU,gCAAoDkB,QAAS,WAC/Eyd,GAAsBP,IADnB,SAEHA,EAAWnW,KAAO,KAAKmW,EAAWpD,iBAAmB,IAAM9b,EAAE,WAAa,MAFnBkf,EAAW3d,eAOtF,sBAAKkI,MAAO,CAACE,QAAS,OAAQC,eAAgB,iBAA9C,UACI,wBAAQ9I,UAAU,YAAYkB,QAAS,SAACqH,GAAD,OAvRlB,SAACA,GAC9BA,EAAEoD,iBACF,IAAIoP,EAAW,QAEG3Y,IAAfgc,SAAiDhc,IAArBkc,KACgD,IAAxEM,GAAiB3N,QAAO,SAAA1I,GAAC,OAAEA,EAAE8X,eAAiBjC,GAAW3d,MAAIuK,QAC5D+P,EAAQ,iBAAuByD,GAC/BzD,EAAQ,OAAauD,GACrBvD,EAAQ,aAAmBqD,GAAW3d,GACtCsa,EAAQ,KAAWqD,GAAWnW,KAE9B2W,GAAiBrd,KAAKwZ,GACtB3Z,eAAeE,QAAQ,cAAeW,KAAKyE,UAAUkY,KACrDP,QAAcjc,GACAuK,SAAS+G,eAAe,oBAC9BjL,MAAQvJ,EAAE,oBAClBqf,GAAoB,IACpBE,GAAsB,IAEtB7X,OAAOC,MAAM3H,EAAE,gCAoQ6BohB,CAAyB/X,IAArE,SAA0ErJ,EAAE,mBAC5E,wBAAQc,UAAU,eAAekB,QAAS,SAACqH,GAAD,OAhQrB,SAACA,GAE9B,GADAA,EAAEoD,sBACwBvJ,IAAvBsc,GAAiC,CAChC,IAAM6B,EAAW3B,GAAiBxE,QAAQsE,IACvC6B,GAAY,IACX3B,GAAiBuB,OAAOI,EAAU,GAClC1B,GAAoBD,IACpBxd,eAAeE,QAAQ,cAAeW,KAAKyE,UAAUkY,KACrDD,QAAsBvc,KAwPyBoe,CAAyBjY,IAAxE,SAA6ErJ,EAAE,yBAEnF,uBACA,cAACyI,EAAA,EAAD,IAGA,sBAAK3H,UAAU,YAAf,UACI,eAAC0H,EAAA,EAAKI,MAAN,WAAa5I,EAAE,YAAf,OACA,oBAAIyJ,MAAO,CAACC,MAAO,WAAnB,SAAgC1J,EAAE,kBAClC,eAACyI,EAAA,EAAD,CAAK3H,UAAU,OAAf,UACI,cAAC4H,EAAA,EAAD,CAAKgV,IAAE,EAAP,SACI,eAAClV,EAAA,EAAKG,MAAN,WACI,eAACH,EAAA,EAAKI,MAAN,CAAYiY,OAAO,KAAnB,UAAyB7gB,EAAE,iBAA3B,OACA,eAACwI,EAAA,EAAK8M,OAAN,CAAa/T,GAAG,gBAAhB,UACI,wBAAQS,QAAS,kBAAM6d,QAAmB3c,IAA1C,SAAuDlD,EAAE,mBACxDwb,EAASlO,KAAI,SAACiN,GAAD,OACX,wBAAQhR,MAAOgR,EACdvY,QAAS,kBAAI6d,GAAmBtF,IADjC,SAC4CA,EAAQxR,MADvBwR,EAAQhZ,eAMpD,cAACmH,EAAA,EAAD,CAAKgV,IAAE,OAEX,eAACjV,EAAA,EAAD,CAAK3H,UAAU,OAAf,UACI,cAAC4H,EAAA,EAAD,CAAKgV,IAAE,EAAP,SACI,eAAClV,EAAA,EAAKG,MAAN,CAAY7H,UAAU,OAAtB,UACI,eAAC0H,EAAA,EAAKI,MAAN,CAAYiY,OAAO,KAAnB,UAAyB7gB,EAAE,eAA3B,OACA,cAACwI,EAAA,EAAKK,QAAN,CAAcqE,GAAG,WAAW0T,KAAM,EAAGrX,MAAOuW,GAAoB1W,SAAU,SAACC,GAAD,OAAK0W,GAAsB1W,EAAEC,OAAOC,eAGtH,cAACb,EAAA,EAAD,CAAKgV,IAAE,EAAP,SACI,eAAClV,EAAA,EAAKG,MAAN,CAAY7H,UAAU,OAAtB,UACI,eAAC0H,EAAA,EAAKI,MAAN,CAAYiY,OAAO,KAAnB,UAAyB7gB,EAAE,UAA3B,OACA,cAACwI,EAAA,EAAKK,QAAN,CAAcqE,GAAG,WAAW0T,KAAM,EAAGrX,MAAOyW,GAAe5W,SAAU,SAACC,GAAD,OAAK4W,GAAiB5W,EAAEC,OAAOC,kBAIhH,eAACd,EAAA,EAAD,CAAK3H,UAAU,OAAf,UACI,cAAC4H,EAAA,EAAD,CAAKgV,IAAE,EAAP,SACI,eAAClV,EAAA,EAAKG,MAAN,CAAYsE,UAAU,WAAWnM,UAAU,OAA3C,UACI,eAAC0H,EAAA,EAAKI,MAAN,CAAYiY,OAAO,KAAnB,UAAyB7gB,EAAE,WAA3B,OACA,cAACwI,EAAA,EAAKK,QAAN,CAAcqE,GAAG,QAAQpE,KAAK,OAAO0B,IAAKA,EAAKnK,KAAK,KAAK+I,SAAU,SAACC,GAAD,OAAKmC,GAAiBnC,WAGjG,eAACX,EAAA,EAAD,CAAKgV,IAAE,EAAP,UACI,eAAClV,EAAA,EAAKI,MAAN,CAAYiY,OAAO,KAAnB,UAAyB7gB,EAAE,gBAA3B,OACA,qBAAKyJ,MAAO,CAACqX,SAAU,SAAUzO,OAAQ,SAAzC,SACKiO,GAAchT,KAAI,SAAC+M,GAChB,OAAO,qBAAKvZ,UAAU,gCAAiDkB,QAAS,WAC5Eqe,GAAmBhG,IADhB,SAEHA,EAAQtR,MAF+CsR,EAAQ9Y,eAOnF,sBAAKkI,MAAO,CAACE,QAAS,OAAQC,eAAgB,iBAA9C,UACI,wBAAQ9I,UAAU,YAAYkB,QAAS,SAACqH,GAAD,OAAKqX,GAAsBrX,IAAlE,SAAuErJ,EAAE,gBACzE,wBAAQc,UAAU,eAAekB,QAAS,SAACqH,GAAD,OA/Q5B,SAACA,GAE3B,GADAA,EAAEoD,sBACqBvJ,IAApBkd,GAA8B,CAC7B,IAAMmB,EAAejB,GAAcpF,QAAQkF,IACxCmB,GAAgB,IACfjB,GAAcW,OAAOM,EAAc,GACnChB,GAAiBD,IACjBpe,eAAeE,QAAQ,WAAYW,KAAKyE,UAAU8Y,KAClDD,QAAmBnd,KAuQgCse,CAAsBnY,IAArE,SAA0ErJ,EAAE,sBAEhF,0BAEJ,sBAAKyJ,MAAO,CAACE,QAAQ,OAAQC,eAAgB,UAA7C,UACI,cAACC,EAAA,EAAD,CAAQJ,MAAO,CAACkT,WAAa,KAAMF,YAAY,MAAO/b,QAAQ,SAASsB,QAAS,SAACqH,GAAD,OArLvE,SAACA,GAClBA,EAAEoD,iBACFvK,eAAeuf,WAAW,eAC1Bvf,eAAeuf,WAAW,mBAC1Bvf,eAAeuf,WAAW,aAC1Bvf,eAAeuf,WAAW,eAC1Bvf,eAAeuf,WAAW,YAC1BvhB,EAAQmC,KAAK,CACT/B,SAAW,kBA6K8EohB,CAAarY,IAAlG,SAAuGrJ,EAAE,YACzG,cAAC6J,EAAA,EAAD,CAAQJ,MAAO,CAACkT,WAAa,KAAMF,YAAY,MAAO/b,QAAQ,UAAUsB,QAAS,SAACqH,GAAD,OA5OxE,SAACA,GAClBA,EAAEoD,iBACF,IAAMlE,EAASmE,KAEf,GAAGC,OAAOC,KAAKrE,GAAQuD,OAAS,EAC5BvB,EAAUhC,OACT,CACD,IAAI2H,EAAgB,GACpB,GAAGwP,GAAiB5T,OAAS,EAAE,CAC3B,IAAI4P,EAAe,GACf1G,EAAa/F,EAAU,IAAIxM,MAAK,IAAIA,MAAO2M,SAAQ,IAAI3M,MAAO8J,UAAU,MACxEwP,GAAc4F,KAAKC,MAAsB,IAAhBD,KAAKE,UAAoB,KAAOjL,WAAW1S,UAAU,GAC9E0X,EAAc8D,GAElBhE,EAAY,WAAiB1G,EAC7B0G,EAAY,WAAiBK,EAC7BL,EAAY,YAAkBE,EAC9B1L,EAAgB,CAACwL,GAGrB,IAAIoG,EAAY,GAChBA,EAAS,YAAkB/U,EAC3B+U,EAAS,gBAAsB/R,EAC/B+R,EAAS,UAAgBrO,GACzBqO,EAAS,cAAoB5R,EAC7B4R,EAAS,SAAexB,GAExBzZ,MAAM,GAAD,OAAItE,EAAJ,yBAA4BiM,EAAIjN,GAAhC,SAA0C,CAC3C+F,OAAS,QACTR,QAAS,CACL,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkCvE,GAClC,+BAA4Ba,IAEhCmE,KAAOxE,KAAKyE,UAAUsa,KACvBra,MAAK,SAACV,GACa,MAAfA,EAAIC,OACHrE,EAAOzC,IAEPwH,OAAOC,MAAM3H,EAAE,8BACfE,EAAQmC,KAAK,CACT/B,SAAW,sBAGpBuH,OAAM,SAACC,GAAD,OAAOrB,QAAQC,IAAIoB,MAE5B5F,eAAeuf,WAAW,eAC1Bvf,eAAeuf,WAAW,mBAC1Bvf,eAAeuf,WAAW,aAC1Bvf,eAAeuf,WAAW,eAC1Bvf,eAAeuf,WAAW,aA0LgErZ,CAAaiB,IAAnG,SAAwGrJ,EAAE,wBC7f3G+hB,GAjBY,SAAC,GAAiB,IAAhB/hB,EAAe,EAAfA,EAAG2C,EAAY,EAAZA,OAEtB6L,EADQrO,cACM0S,SAASxD,MAC7B,EAAsCzM,mBAAS4L,QAAYtL,GAA3D,mBAAOoL,EAAP,UAEA,OACI,sBAAKxN,UAAU,YAAf,UACI,qBAAKA,UAAU,aAAf,SACI,6BAAKd,EAAE,0BAEX,uBACA,cAAC,GAAD,CAA+BsO,YAAaA,EAAatO,EAAGA,IAC5D,cAAC,GAAD,CAAwBsO,YAAaA,EAAatO,EAAGA,EAAG2C,OAAQA,QC2C7Dqf,GAvDO,SAAC,GAAsB,IAArB1T,EAAoB,EAApBA,YAAatO,EAAO,EAAPA,EACjC,EAAwB4C,oBAAS,GAAjC,mBAAO8L,EAAP,KAAaC,EAAb,KACII,EAAuC,KAAlC,IAAItM,MAAQuM,oBAOrB,OACI,sBAAKlO,UAAU,oCAAoCkB,QAAS,SAAAqH,GAAC,OAN7C,SAACA,GACjBA,EAAEoD,iBACFkC,GAASD,GAIwDY,CAAYjG,IAA7E,UACI,sBAAKvI,UAAU,MAAf,UACI,mBAAGA,UAAU,8BAAb,SAA4Cd,EAAEsO,EAAYkB,eAC1D,sBAAK1O,UAAU,OAAf,UACI,4BAAId,EAAE,UACN,4BAAIsO,EAAYlC,KAAO,IAAI3J,KAAK,IAAIA,KAAK6L,EAAYlC,MAAM2C,GAAGG,cAAcC,MAAM,EAAE,IAAM,KAC1F,4BAAIb,EAAYlC,KAAO,IAAI3J,KAAK,IAAIA,KAAK6L,EAAYlC,MAAM2C,GAAGG,cAAcC,MAAM,GAAG,IAAM,WAGnG,qBAAK1F,MAAO,CAACE,QAAS,OAAQC,eAAe,iBAA7C,SACI,gCACI,cAAC,IAAD,CAAWvJ,KAAM,KAChBL,EAAE,eAFP,OAE8BsO,EAAYmB,OAASnB,EAAYmB,OAAOjM,UAAY,IAAM8K,EAAYmB,OAAO7L,SAAY,QAG1H0K,EAAYyB,gBAAmB,mCAC3BrB,EACG,gCACI,uBACA,sBAAK5N,UAAU,cAAf,UACI,cAAC,IAAD,CAAST,KAAM,KACf,mBAAGS,UAAU,SAAb,SAAuBd,EAAE,wBAE7B,6BACI,6BAAKsO,EAAYyB,oBAErB,uBAEA,sBAAKjP,UAAU,cAAf,UACI,cAAC,IAAD,CAAQT,KAAM,KACd,mBAAGS,UAAU,SAAb,SAAuBd,EAAE,yBAE7B,4BAAIsO,EAAYkB,cAChB,uBACA,sBAAK1O,UAAU,cAAf,UACI,cAAC,IAAD,CAAaT,KAAM,KACnB,mBAAGS,UAAU,SAAb,SAAuBd,EAAE,uBAE7B,4BAAIsO,EAAY4B,cAAgBlQ,EAAE,wBAA0BA,EAAE,wBAC5D,OACR,SCsFHiiB,GAtIW,SAAC,GAAiB,IAAhBjiB,EAAe,EAAfA,EAAG2C,EAAY,EAAZA,OAC3B,EAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAkCF,oBAAS,WAEvC,OADcG,KAAKC,MAAMd,eAAee,QAAQ,gBAChCC,KAFpB,mBAAOE,EAAP,KAKIlD,GALJ,KAKcC,eACRmO,EAAcpO,EAAQ2S,SAASxD,MACrC,EAAwDzM,mBAAS,IAAjE,mBAAOsf,EAAP,KAA6BC,EAA7B,KAEMxR,EAAY,CAAC,EAAG,EAAG,IACzB,EAAwB/N,mBAAS,GAAjC,mBAAOgO,EAAP,KAAaC,EAAb,KACA,EAA0BjO,mBAAS,GAAnC,mBAAOkO,EAAP,KACA,GADA,KACgClO,mBAAS+N,EAAU,KAAnD,mBAAOK,EAAP,KAAiBC,EAAjB,KAEMC,EAAmB,SAACN,EAAMI,GAC5B,IAAIG,EAAS,GAQb,OANGP,IACCO,EAAM,KAAWP,EAAO,GAEzBI,IACCG,EAAM,KAAWH,GAEdG,GAGXhL,qBAAU,WACN,IAAIC,EAAa,IAAIC,gBAYrB,OAVA,sBAAC,4BAAAC,EAAA,+EAEkCmL,IAFlC,OAEarB,EAFb,OAGO+R,EAAwB/R,EAAaA,cACrChK,EAAa,KAJpB,gDAMOK,QAAQC,IAAR,MACA5D,GAAY,GAPnB,wDAAD,GAUO,kCAAKsD,SAAL,aAAK,EAAYO,WAEzB,CAACiK,EAAMI,IAEV,IAAMS,EAAiB,uCAAG,gCAAAnL,EAAA,yDAIH,QAHb6K,EAASD,EAAiBN,EAAMI,IAG5BJ,MAAiC,OAAhBO,EAAO9Q,KAJZ,gCAKNwG,MAAM,GAAD,OAAItE,EAAJ,qBAAwB+L,EAAY9H,QAAQjF,GAA5C,kCAAwE4P,EAAOP,KAA/E,iBAA4FO,EAAO9Q,MAAO,CACvHyG,QAAS,CAAC,+BAA4B1D,MANxB,OAQA,OAHlB2D,EALkB,QAQXC,QACHlE,GAAY,GATE,0BAYG,OAAhBqO,EAAOP,MAAiC,OAAhBO,EAAO9Q,KAZlB,kCAaNwG,MAAM,GAAD,OAAItE,EAAJ,qBAAwB+L,EAAY9H,QAAQjF,GAA5C,kCAAwE4P,EAAOP,MAAO,CACnG9J,QAAS,CAAC,+BAA4B1D,MAdxB,QAgBA,OAHlB2D,EAbkB,QAgBXC,QACHlE,GAAY,GAjBE,2BAmBG,OAAhBqO,EAAOP,MAAiC,OAAhBO,EAAO9Q,KAnBlB,kCAoBNwG,MAAM,GAAD,OAAItE,EAAJ,qBAAwB+L,EAAY9H,QAAQjF,GAA5C,kCAAwE4P,EAAO9Q,MAAO,CACnGyG,QAAS,CAAC,+BAA4B1D,MArBxB,QAuBA,OAHlB2D,EApBkB,QAuBXC,QACHlE,GAAY,GAxBE,yCA2BN+D,MAAM,GAAD,OAAItE,EAAJ,qBAAwB+L,EAAY9H,QAAQjF,GAA5C,qBAAkE,CAC/EuF,QAAS,CAAC,+BAA4B1D,MA5BxB,QA8BA,OAHlB2D,EA3BkB,QA8BXC,QACHlE,GAAY,GA/BE,yBAmCHiE,EAAIE,OAnCD,eAmChBjC,EAnCgB,yBAqCfA,GArCe,4CAAH,qDAkDvB,OAAgB,IAAbnC,GACCF,EAAOzC,GAEH,8BAIA,sBAAKY,UAAU,YAAf,UACI,qBAAKA,UAAU,aAAf,SACI,6BAAKd,EAAE,2BAEX,cAAC,GAAD,CAA+BsO,YAAaA,EAAatO,EAAGA,IAC5D,sBAAKc,UAAU,cAAf,UACI,8BAAId,EAAE,kBAAN,UACA,wBAAQoJ,SApBK,SAACkJ,GAC1BrB,EAAYqB,EAAMhJ,OAAOC,OACzBsH,EAAQ,IAkB4CtH,MAAOyH,EAA/C,SACKL,EAAUrD,KAAI,SAACjN,GAAD,OACX,wBAAmBkJ,MAAOlJ,EAA1B,SACKA,GADQA,WAMxB6hB,EAAqBpW,OAAS,EAC3B,qBAAKhL,UAAU,kBAAf,SACKohB,EAAqB5U,KAAI,SAAA8U,GAAkB,OAAI,cAAC,GAAD,CACe9T,YAAa8T,EACbpiB,EAAGA,GAFEoiB,EAAmB7gB,SAGlF,sBAAMkI,MAAO,CAACuT,UAAW,MAAzB,SAAiChd,EAAE,0BAE/CkiB,EAAqBpW,OAAS,GAC/B,cAACyG,EAAA,EAAD,CAAYzR,UAAU,OAAOgQ,MAAOA,EAAOF,KAAMA,EAAM4B,aAAc,EAAGC,cAAe,EAC3ElP,MAAM,UAAU6F,SAzCf,SAACkJ,EAAO/I,GAC7BsH,EAAQtH,UCeD8Y,GArGI,SAAC,GAAiB,IAAhBriB,EAAe,EAAfA,EAAG2C,EAAY,EAAZA,OAEpB,EAAkCC,oBAAS,WAEvC,OADcV,eAAee,QAAQ,eACrBC,KAFpB,mBAAOE,EAAP,KAKA,GALA,KAK0BR,mBAAS,KAAnC,mBAAOmH,EAAP,KAAcC,EAAd,KACI9J,EAAUC,cACRqO,EAAMtO,EAAQ2S,SAASxD,MAC7B,EAAsCzM,mBAAS4L,QAAYtL,GAA3D,mBAAOoL,EAAP,KACA,GADA,KACgC1L,oBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAEAqD,qBAAU,WACN,IAAIC,EAAa,IAAIC,gBAYrB,OAVA,sBAAC,4BAAAC,EAAA,+EAE2Bgc,IAF3B,OAEavY,EAFb,OAGOC,EAASD,GACT3D,EAAa,KAJpB,gDAMOK,QAAQC,IAAR,MACA5D,GAAY,GAPnB,wDAAD,GAUO,kCAAKsD,SAAL,aAAK,EAAYO,WAEzB,IAEH,IAAM2b,EAAU,uCAAG,8BAAAhc,EAAA,sEACGO,MAAM,GAAD,OAAItE,EAAJ,qBAAwB+L,EAAY9H,QAAQjF,GAA5C,UAAuD,CAC1EuF,QAAS,CAAC,+BAA4B1D,MAF3B,cAIG,OAHZ2D,EADS,QAIRC,QACJlE,GAAY,GALA,SAOIiE,EAAIE,OAPR,cAOTjC,EAPS,yBASRA,GATQ,2CAAH,qDA6BhB,OAAgB,IAAbnC,GACCF,EAAOzC,GAEH,8BAIA,sBAAKY,UAAU,YAAf,UACI,qBAAKA,UAAU,aAAf,SACI,6BAAKd,EAAE,oBAEX,cAAC,GAAD,CAA+BsO,YAAaA,EAAatO,EAAGA,IAC3D+J,EAAM+B,OAAS,EACZ,eAACqB,EAAA,EAAD,CAAOrM,UAAU,uDAAuD2I,MAAO,CAAC2D,MAAO,OAAvF,UACI,uBAAO3D,MAAO,CAAC4D,gBAAiB,WAAhC,SACA,+BACI,+BAAKrN,EAAE,QAAP,OACA,+BAAKA,EAAE,eAAP,OACA,6BAAKA,EAAE,gBACP,6BAAKA,EAAE,iBAGX,gCACC+J,EAAMuD,KAAI,SAACzC,GAAD,OACP,+BACI,6BAAKA,EAAK9B,OACV,6BAAK8B,EAAKkC,cACV,6BAAKlC,EAAK0C,aACV,6BACI,cAAC1D,EAAA,EAAD,CAAQnJ,QAAQ,UACRsB,QAAS,SAAAqH,GAAC,OA/CvB,SAACA,EAAGwB,GAC3BxB,EAAEoD,iBACF5F,MAAM,GAAD,OAAItE,EAAJ,qBAAwB+L,EAAY9H,QAAQjF,GAA5C,kBAAwDsJ,EAAKtJ,IAAK,CACnEuF,QAAS,CAAC,+BAA4B1D,MAErCqE,MAAK,SAAAV,GAAG,OAAIA,EAAIE,UAChBQ,MAAK,SAAAV,GACF,IAAIT,EAAIoB,OAAO+F,SAASC,cAAc,KAClCC,EAAU,IAAI1B,WAAWlF,EAAI8D,MACjCvE,EAAEkH,KAAO9F,OAAOkG,IAAIC,gBAAgB,IAAIC,KAAK,CAACH,GAAU,CAAC7E,KAAM+B,EAAK/B,QACpExC,EAAEyH,SAAWhH,EAAIgC,KACjB0E,SAASlG,KAAKyG,YAAY1H,GAC1BA,EAAE2H,QACFR,SAASlG,KAAK2G,YAAY5H,MAkCgB6H,CAAmB9E,EAAGwB,IAD5C,SACoD7K,EAAE,kBANrD6K,EAAKtJ,YAWX,sBAAMT,UAAU,YAAhB,SAA6Bd,EAAE,iBCyE/CuiB,GAxKO,SAAC,GAAsC,IAArClI,EAAoC,EAApCA,QAASwF,EAA2B,EAA3BA,mBAAoB7f,EAAO,EAAPA,EAEjD,EAAkC4C,oBAAS,WAEvC,OADcG,KAAKC,MAAMd,eAAee,QAAQ,gBAChCC,KAFpB,mBAAOE,EAAP,KAKA,GALA,KAK0BR,oBAAS,IAAnC,mBAAOyM,EAAP,KAAciL,EAAd,KACA,EAA8B1X,oBAAS,GAAvC,mBAAgB4f,GAAhB,WACA,EAA8B5f,mBAASyX,GAAvC,mBAAOE,EAAP,KAAgBkI,EAAhB,KACA,EAA4B7f,wBAASM,GAArC,mBAAOmI,EAAP,KAAeqX,EAAf,KACA,EAAwB9f,wBAASM,GAAjC,mBAAO2H,EAAP,KAAa8X,EAAb,KACA,EAAoD/f,wBAASM,GAA7D,mBAAO0X,EAAP,KAA2BgI,EAA3B,KACA,EAA4BhgB,mBAAS,IAArC,mBAAO2F,EAAP,KAAegC,EAAf,KACMC,EAAMC,mBACRnE,EAAI4X,KAAOzb,KAAK0b,OAChBvM,EAAIsM,KAAO3D,EAAQ/T,QAAQpC,WAE/B,SAASye,EAASxZ,GACdA,EAAEoD,iBACF6N,GAAUjL,GAGdlJ,qBAAU,gBACSjD,IAAZmX,GACCoI,EAAWpI,KAEjB,CAACA,IAEH,IAcMzP,EAAkB,SAACC,GACrB,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACzB,IAAMC,EAAa,IAAIC,WACvBD,EAAWE,cAAcN,GACzBI,EAAWG,OAAS,WAChBL,EAAQE,EAAWI,SAEvBJ,EAAWK,QAAU,SAACC,GAClBP,EAAOO,QAKbC,EAAgB,uCAAG,WAAOnC,GAAP,6BAAA/C,EAAA,6DACfuE,EAAOxB,EAAEC,OAAOS,MAAM,GADP,SAEAa,EAAgBC,GAFhB,OAOrB,IALMY,EAFe,OAGjBzG,EAAOyG,EAAOzH,MAAM,WAAW,GAC/B0H,EAAaC,KAAK3G,GAElB4G,EAAc,IAAIC,MAAMH,EAAWI,QAC/BC,EAAI,EAAGA,EAAIL,EAAWI,OAAQC,IAClCH,EAAYG,GAAKL,EAAWM,WAAWD,GAEvCjI,EAAO,IAAImI,WAAWL,GACtBM,EAAQL,MAAMM,KAAKrI,GACvB6e,EAAQzW,GAZa,4CAAH,sDAehB4W,EAAoB,SAACzZ,GACvBA,EAAEoD,iBACF,IAAMlE,EA5Ca,WACnB,IAAMuE,EAAY,GAUlB,YARc5J,IAAXmI,GAAmC,KAAXA,IACvByB,EAAUzB,OAASrL,EAAE,+BAGZkD,IAAT2H,IACAiC,EAAUjC,KAAO7K,EAAE,8BAGhB8M,EAiCQJ,GAEf,GAAIC,OAAOC,KAAKrE,GAAQuD,OAAS,EAC7BvB,EAAUhC,OACP,CACH,IAAIuZ,EAAY,GAChBA,EAAS,OAAazW,EACtByW,EAAS,mBAAyBlH,EAClCkH,EAAS,KAAWjX,EAEpBhE,MAAM,GAAD,OAAItE,EAAJ,yBAA4BgY,EAAQM,cAApC,uBAAgEN,EAAQO,WAAa,CACtFxT,OAAQ,QACRR,QAAS,CACL,eAAgB,mBAChB,+BAA4B1D,IAEhCmE,KAAMxE,KAAKyE,UAAUsa,KAExBra,MAAK,SAACV,GACe,MAAfA,EAAIC,QACHU,OAAOC,MAAM,aAEjBZ,EAAIE,UAEHQ,MAAK,kBAAI,IAAIqD,SAAQ,SAAAC,GAAO,OAAIgY,WAAWhY,EAAS,WACxDtD,KAAKC,OAAOC,MAAM3H,EAAE,qBACpB6H,OAAM,SAACC,GAAD,OAASrB,QAAQC,IAAIoB,MAC5B+X,EAAmBtF,GACnBiI,GAAW,KAInB,OACI,sBAAK1hB,UAAU,wBAAf,UACI,sBAAKA,UAAU,MAAf,UACI,mBAAGA,UAAU,8BAAb,SAA4Cd,EAAEua,EAAQtK,sBACtD,sBAAKnP,UAAU,OAAf,UACI,4BAAId,EAAE,UACN,4BAAI,IAAIyC,KAAK8X,EAAQE,iBAAiBvL,cAAcC,MAAM,EAAE,MAC5D,4BAAI,IAAI1M,KAAK8X,EAAQE,iBAAiBvL,cAAcC,MAAM,GAAG,YAGrE,gCACI,8BAAG,cAAC,IAAD,CAAW9O,KAAM,KAAOka,EAAQ/T,QAAW+T,EAAQ/T,QAAQhD,UAAY,IAAM+W,EAAQ/T,QAAQ5C,SAAY,MAC5G,8BAAI5D,EAAE,OAAN,OAAoBsG,EAAE+X,KAAKzM,EAAG,eAEhCvC,GACF,qBAAK5F,MAAO,CAACE,QAAS,OAAQC,eAAgB,YAA9C,SACI,wBAAQ9I,UAAU,eAAekB,QAAS6gB,EAA1C,SAAqD7iB,EAAE,sBAG1DqP,EACG,eAAC7G,EAAA,EAAD,WACI,eAACA,EAAA,EAAKG,MAAN,CAAY7H,UAAU,OAAOmM,UAAU,oBAAvC,UACI,eAACzE,EAAA,EAAKI,MAAN,WAAa5I,EAAE,eAAf,OACA,cAACwI,EAAA,EAAKK,QAAN,CAAcqE,GAAG,WAAW0T,KAAM,EAAGrX,MAAOqR,EAAoBxR,SAAU,SAAAC,GACtEuZ,EAAsBvZ,EAAEC,OAAOC,aAGvC,eAACf,EAAA,EAAKG,MAAN,CAAY7H,UAAU,OAAOmM,UAAU,SAAvC,UACI,eAACzE,EAAA,EAAKI,MAAN,WAAa5I,EAAE,UAAf,OACA,cAACwI,EAAA,EAAKK,QAAN,CAAcqE,GAAG,WAAW0T,KAAM,EAAG1X,YAAaX,EAAO8C,OAAQ9B,MAAO8B,EAAQjC,SAAU,SAAAC,GACtFqZ,EAAUrZ,EAAEC,OAAOC,OACdhB,EAAM,QACPgC,EAAU,2BACHhC,GADE,kBAEJ,SAAU,WAGvB,cAACC,EAAA,EAAKK,QAAQW,SAAd,CAAuBV,KAAK,UAA5B,SAAuCP,EAAO8C,YAElD,eAAC7C,EAAA,EAAKG,MAAN,CAAYsE,UAAU,OAAOnM,UAAU,OAAvC,UACI,cAAC0H,EAAA,EAAKI,MAAN,UAAa5I,EAAE,UACf,cAACwI,EAAA,EAAKK,QAAN,CAAcqE,GAAG,QAAQ1C,IAAKA,EAAK1B,KAAK,OAAOI,YAAaX,EAAOsC,KAAMzB,SAAU,SAAAC,GAC/EmC,EAAiBnC,GACZd,EAAM,MACPgC,EAAU,2BACHhC,GADE,kBAEJ,OAAQ,WAIrB,cAACC,EAAA,EAAKK,QAAQW,SAAd,CAAuBV,KAAK,UAA5B,SAAuCP,EAAOsC,UAEjDwE,GACD,sBAAKvO,UAAU,YAAY2I,MAAO,CAACE,QAAS,OAAQC,eAAgB,iBAApE,UACI,wBAAQ9I,UAAU,eAAekB,QAAS,SAACqH,GAAD,OAAKwZ,EAASxZ,IAAxD,SAA6DrJ,EAAE,UAAUgjB,gBACzE,wBAAQliB,UAAU,YAAYkB,QAAS,SAAAqH,GAAC,OAAIyZ,EAAkBzZ,IAA9D,SAAmErJ,EAAE,UAAUgjB,sBAG5E,SCtBZC,GA7IW,SAAC,GAAiB,IAAhBjjB,EAAe,EAAfA,EAAG2C,EAAY,EAAZA,OACrBzC,EAAUC,cAChB,EAAgCyC,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA4BF,oBAAS,WAEjC,OADcG,KAAKC,MAAMd,eAAee,QAAQ,aAChCC,KAFpB,mBAAOC,EAAP,KAIA,GAJA,KAIkCP,oBAAS,WAEvC,OADcG,KAAKC,MAAMd,eAAee,QAAQ,gBAChCC,MAFpB,mBAAOE,EAAP,KAKMuN,GALN,KAKkB,CAAC,EAAG,EAAG,KACzB,EAAgC/N,mBAAS,IAAzC,mBAAO4Y,EAAP,KAAiBiD,EAAjB,KACA,EAA8C7b,wBAASM,GAAvD,mBAAO0c,EAAP,KAAwBC,EAAxB,KAEA,EAAwBjd,mBAAS,GAAjC,mBAAOgO,EAAP,KAAaC,EAAb,KACA,EAA0BjO,mBAAS,GAAnC,mBAAOkO,EAAP,KAAcC,EAAd,KACA,EAAgCnO,mBAAS+N,EAAU,IAAnD,mBAAOK,EAAP,KAAiBC,EAAjB,KAEMC,EAAmB,SAACN,EAAMI,GAC5B,IAAIG,EAAS,GAQb,OANIP,IACAO,EAAM,KAAWP,EAAO,GAExBI,IACAG,EAAM,KAAWH,GAEdG,GAGXhL,qBAAU,WACN,IAAIC,EAAa,IAAIC,gBAarB,OAXA,sBAAC,4BAAAC,EAAA,+EAE8Bka,IAF9B,OAEahF,EAFb,OAGOiD,EAAYjD,EAASA,UACrBzK,EAASyK,EAAS9J,YAClBtL,EAAa,KALpB,gDAOOK,QAAQC,IAAR,MACA5D,GAAY,GARnB,wDAAD,GAWO,kCAAKsD,SAAL,aAAK,EAAYO,WAEzB,CAACiK,EAAMI,EAAU4O,IAEpBzZ,qBAAU,gBACiBjD,IAApB0c,GACCnB,EAAYjD,EAASzJ,OAAOmR,MAEjC,CAACtD,IAGJ,IAAMY,EAAa,uCAAG,gCAAAla,EAAA,yDAGE,QAFd6K,EAASD,EAAiBN,EAAMI,IAE3BJ,MAAiC,OAAhBO,EAAO9Q,KAHjB,gCAIFwG,MAAM,GAAD,OAAItE,EAAJ,oBAAuBY,EAAvB,qCAA0DgO,EAAOP,KAAjE,iBAA8EO,EAAO9Q,MAAO,CACzGyG,QAAS,CAAC,+BAA4B1D,MAL5B,OAOI,OAHlB2D,EAJc,QAOPC,QACHlE,GAAY,GARF,0BAUS,OAAhBqO,EAAOP,MAAiC,OAAhBO,EAAO9Q,KAVxB,kCAWFwG,MAAM,GAAD,OAAItE,EAAJ,oBAAuBY,EAAvB,qCAA0DgO,EAAOP,MAAO,CACrF9J,QAAS,CAAC,+BAA4B1D,MAZ5B,QAcI,OAHlB2D,EAXc,QAcPC,QACHlE,GAAY,GAfF,2BAiBS,OAAhBqO,EAAOP,MAAiC,OAAhBO,EAAO9Q,KAjBxB,kCAkBFwG,MAAM,GAAD,OAAItE,EAAJ,oBAAuBY,EAAvB,qCAA0DgO,EAAO9Q,MAAO,CACrFyG,QAAS,CAAC,+BAA4B1D,MAnB5B,QAqBI,OAHlB2D,EAlBc,QAqBPC,QACHlE,GAAY,GAtBF,yCAyBF+D,MAAM,GAAD,OAAItE,EAAJ,oBAAuBY,EAAvB,wBAAoD,CACjE2D,QAAS,CAAC,+BAA4B1D,MA1B5B,QA4BI,OAHlB2D,EAzBc,QA4BPC,QACHlE,GAAY,GA7BF,yBAiCCiE,EAAIE,OAjCL,eAiCZjC,EAjCY,yBAmCXA,GAnCW,4CAAH,qDAsCbke,EAAiB,SAAC7I,GACpB,GAAGA,EAAQQ,gBAAkB+E,EAAgB/E,eAAiBR,EAAQS,YAAc8E,EAAgB9E,UAChG,OAAOT,GAaf,OAAgB,IAAbxX,GACCF,EAAOzC,GAEH,8BAIA,sBAAKY,UAAU,YAAf,UACI,qBAAKA,UAAU,aAAf,SACI,6BAAKd,EAAE,yBAEX,sBAAKc,UAAU,cAAf,UACI,8BAAId,EAAE,kBAAN,UACA,wBAAQoJ,SAlBK,SAACkJ,GAC1BrB,EAAYqB,EAAMhJ,OAAOC,OACzBsH,EAAQ,IAgB4CtH,MAAOyH,EAA/C,SACKL,EAAUrD,KAAI,SAACjN,GAAD,OACX,wBAAmBkJ,MAAOlJ,EAA1B,SACKA,GADQA,WAMxBmb,EAASlO,KAAI,SAAAiN,GAAO,OACjB,cAAC,GAAD,CAAeF,QAASE,EAASsF,mBAAoBA,EAAoB7f,EAAGA,OAEhF,cAACuS,EAAA,EAAD,CAAYzR,UAAU,OAAOgQ,MAAOA,EAAOF,KAAMA,EAAM4B,aAAc,EAAGC,cAAe,EAC3ElP,MAAM,UAAU6F,SAlCf,SAACkJ,EAAO/I,GAC7BsH,EAAQtH,UC5GD,OAA0B,uC,mBCmH1B4Z,GAtFH,WAER,IAAM3c,EAAU,UACViJ,EAAS,SAEf,EAA4B7M,oBAAS,WAEjC,OADmBG,KAAKC,MAAMd,eAAee,QAAQ,aAChC,KAFzB,mBAAOmgB,EAAP,KAAenjB,EAAf,KAKA,EAAwB2C,oBAAS,WAE7B,OADkBG,KAAKC,MAAMd,eAAee,QAAQ,eAChCC,KAFxB,mBAAOqa,EAAP,KAAaV,EAAb,KAKA,EAAkBwG,eAAXrjB,EAAP,EAAOA,EAAGsjB,EAAV,EAAUA,KAEJvjB,EAAiB,SAACkT,GACpBqQ,EAAKvjB,eAAekT,IAGlBsQ,EAAS,SAACrjB,GAEH,IADG6C,KAAKC,MAAMd,eAAee,QAAQ,QAC9BR,KAAK0b,QACjBje,EAAQmC,KAAK,CACT/B,SAAW,WAEfoH,OAAOC,MAAM3H,EAAE,uBACfkC,eAAeC,QACfD,eAAeE,QAAQ,SAAU,SACjCnC,GAAU,GACV4c,OAAQ3Z,KAIlB,OACI,cAAC,cAAD,UACQ,iCACe,IAATkgB,GAAiB7F,IAAS/W,GAC1B,cAAC,EAAD,CAAYzG,eAAgBA,EAAgBC,EAAGA,EAAGC,UAAWA,KACpD,IAATmjB,GAAiB7F,IAAS9N,GAC1B,cAAC,GAAD,CAAkB1P,eAAgBA,EAAgBC,EAAGA,EAAGC,UAAWA,IAErE,qBAAKa,UAAU,YAAf,SACI,sBAAKA,UAAU,UAAU2I,OAAkB,IAAX2Z,EAAkB,CAAChW,MAAO,OAAQoW,gBAAe,cAAUC,GAAV,MAA0B,CAACrW,MAAO,MAAOoW,gBAAiB,MAA3I,WACgB,IAAXJ,GACG,eAAC,IAAD,WACI,cAAC,IAAD,CAAOxhB,OAAK,EAAC8hB,KAAK,SAASC,UAAW,kBAAM,cAAC,GAAD,CAAW3jB,EAAGA,EAAGD,eAAgBA,EAAgBE,UAAWA,EAAW4c,QAASA,OAC5H,cAAC,IAAD,CAAOjb,OAAK,EAAC8hB,KAAK,YAAYC,UAAW,kBAAM,cAAC,GAAD,CAAc3jB,EAAGA,EAAGD,eAAgBA,OACnF,cAAC,IAAD,CAAO6B,OAAK,EAAC8hB,KAAK,IAAlB,SACI,cAAC,IAAD,CAAUjiB,GAAG,gBAIvB8b,IAAS/W,IAAsB,IAAX4c,GAClB,eAAC,IAAD,WACI,cAAC,IAAD,CAAOxhB,OAAK,EAAC8hB,KAAK,cAAcC,UAAW,kBAAM,cAAC,EAAD,CAAa3jB,EAAGA,EAAG2C,OAAQ4gB,EAAQtjB,UAAWA,OAC/F,cAAC,IAAD,CAAO2B,OAAK,EAAC8hB,KAAK,YAAaC,UAAW,kBAAM,cAAC,EAAD,CAAe3jB,EAAGA,EAAG2C,OAAQ4gB,OAC7E,cAAC,IAAD,CAAO3hB,OAAK,EAAC8hB,KAAK,gBAAgBC,UAAW,kBAAM,cAAC,EAAD,CAAiB3jB,EAAGA,EAAG2C,OAAQ4gB,OAClF,cAAC,IAAD,CAAO3hB,OAAK,EAAC8hB,KAAK,mBAAmBC,UAAW,kBAAM,cAAC,EAAD,CAAgB3jB,EAAGA,EAAG2C,OAAQ4gB,OACpF,cAAC,IAAD,CAAO3hB,OAAK,EAAC8hB,KAAK,aAAaC,UAAW,kBAAM,cAAC,EAAD,CAAc3jB,EAAGA,EAAG2C,OAAQ4gB,OAC5E,cAAC,IAAD,CAAO3hB,OAAK,EAAC8hB,KAAK,YAAYC,UAAW,kBAAM,cAAC,GAAD,CAAc3jB,EAAGA,EAAG2C,OAAQ4gB,OAC3E,cAAC,IAAD,CAAO3hB,OAAK,EAAC8hB,KAAK,aAAaC,UAAW,kBAAM,cAAC,GAAD,CAAa3jB,EAAGA,EAAG2C,OAAQ4gB,OAC3E,cAAC,IAAD,CAAO3hB,OAAK,EAAC8hB,KAAK,iBAAiBC,UAAW,kBAAM,cAAC,GAAD,CAAkB3jB,EAAGA,EAAG2C,OAAQ4gB,OACpF,cAAC,IAAD,CAAOG,KAAK,IAAIC,UAAW,kBAAI,cAAC,GAAD,CAAU3jB,EAAGA,UAGlDud,IAAS9N,IAAqB,IAAX2T,GACjB,eAAC,IAAD,WACI,cAAC,IAAD,CAAOxhB,OAAK,EAAC8hB,KAAK,gBAAgBC,UAAW,kBAAM,cAAC,GAAD,CAAsB3jB,EAAGA,EAAG2C,OAAQ4gB,OACvF,cAAC,IAAD,CAAO3hB,OAAK,EAAC8hB,KAAK,4BAA4BC,UAAW,kBAAM,cAAC,GAAD,CAAoB3jB,EAAGA,EAAG2C,OAAQ4gB,OACjG,cAAC,IAAD,CAAO3hB,OAAK,EAAC8hB,KAAK,2CAA2CC,UAAW,kBAAM,cAAC,GAAD,CAAmB3jB,EAAGA,EAAG2C,OAAQ4gB,OAC/G,cAAC,IAAD,CAAO3hB,OAAK,EAAC8hB,KAAK,sCAAsCC,UAAW,kBAAM,cAAC,GAAD,CAAa3jB,EAAGA,EAAG2C,OAAQ4gB,OACpG,cAAC,IAAD,CAAO3hB,OAAK,EAAC8hB,KAAK,kCAAkCC,UAAW,kBAAM,cAAC,GAAD,CAAY3jB,EAAGA,EAAG2C,OAAQ4gB,OAC/F,cAAC,IAAD,CAAO3hB,OAAK,EAAC8hB,KAAK,aAAaC,UAAW,kBAAM,cAAC,GAAD,CAAmB3jB,EAAGA,EAAG2C,OAAQ4gB,OACjF,cAAC,IAAD,CAAOG,KAAK,IAAIC,UAAW,kBAAI,cAAC,GAAD,CAAU3jB,EAAGA,eAK5D,cAAC,EAAD,CAAQA,EAAGA,U,+DCxG7BsjB,KAAKM,IAAIC,MAASD,IAAIE,MAAkBF,IAAIG,MAAkBC,KAAK,CAC/DC,YAAa,KACbC,OAAO,EACPC,UAAW,CACPC,MAAO,CAAC,cAAe,UACvBC,MAAO,CAAC,WAEZC,cAAe,CACXC,aAAa,KAINjB,GAAf,ECRAkB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,WAAD,CAAUC,SAAU,6CAApB,SACI,cAAC,GAAD,QAGNlX,SAAS+G,eAAe,W","file":"static/js/main.211932b8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.cdf2223c.png\";","import React from \"react\";\r\nimport logo from '../../img/logo.png';\r\nimport {Navbar, Nav, NavDropdown, Container, ListGroup} from \"react-bootstrap\";\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\nimport {BsPerson} from 'react-icons/bs'\r\nimport {useLocation} from \"react-router-dom\";\r\nimport {useHistory} from 'react-router';\r\n\r\nconst Navigation = ({changeLanguage, t, setLogged}) =>{\r\n    const history = useHistory();\r\n    const profileTitle = (<BsPerson size={46}/>);\r\n    const {pathname} = useLocation()\r\n\r\n    const handleLogout = () =>{\r\n        sessionStorage.clear();\r\n        sessionStorage.setItem('logged', 'false');\r\n        setLogged(false);\r\n        history.push('/login');\r\n    }\r\n\r\n    return(\r\n            <Navbar bg=\"light\" variant=\"light\" expand=\"lg\" collapseOnSelect=\"true\" sticky=\"top\" className=\"navContainer\">\r\n                <Container fluid>\r\n                    <Navbar.Brand className=\"navbar-brand\"><img alt=\"Portal pacjenta\" src={logo}/></Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\r\n                    <Navbar.Collapse id=\"navbarToggleExternalContent\" className=\"navCollapse\">\r\n                        <Nav className=\"navNav\" key={pathname}>\r\n                                <LinkContainer to=\"/appointments\" activeHref=\"active\">\r\n                                    <Nav.Link exact className=\"navItemLink\" >{t(\"appointments\")}</Nav.Link>\r\n                                </LinkContainer>\r\n                                <LinkContainer to=\"/referrals\" activeHref=\"active\">\r\n                                    <Nav.Link exact className=\"navItemLink\" >{t(\"referrals\")}</Nav.Link>\r\n                                </LinkContainer>\r\n                                <LinkContainer to=\"/schedule\" activeHref=\"active\">\r\n                                    <Nav.Link exact className=\"navItemLink\" >{t(\"schedules\")}</Nav.Link>\r\n                                </LinkContainer>\r\n                                <LinkContainer to=\"/check-ups\" activeHref=\"active\">\r\n                                    <Nav.Link exact className=\"navItemLink\" >{t(\"checkups\")}</Nav.Link>\r\n                                </LinkContainer>\r\n                                <LinkContainer to=\"/prescriptions\" activeHref=\"active\">\r\n                                    <Nav.Link exact className=\"navItemLink\" >{t(\"prescriptions\")}</Nav.Link>\r\n                                </LinkContainer>\r\n                        </Nav>\r\n                        <NavDropdown className=\"navItemLanguages\" title={profileTitle} id=\"basic-nav-dropdown\">\r\n                            <LinkContainer to=\"/my-account\" activeHref=\"active\">\r\n                                <Nav.Link exact className=\"navItemLink2 nav-link\">{t(\"myAccount\")}</Nav.Link>\r\n                            </LinkContainer>\r\n                            <LinkContainer to=\"/my-files\" activeHref=\"active\">\r\n                                <Nav.Link exact className=\"navItemLink2\">{t(\"myFiles\")}</Nav.Link>\r\n                            </LinkContainer>\r\n\r\n                            <NavDropdown title={t(\"language\")} id=\"basic-nav-dropdown\">\r\n                                <NavDropdown.Item onClick={() => {changeLanguage('en')}}>English</NavDropdown.Item>\r\n                                <NavDropdown.Item onClick={() => {changeLanguage('pl')}}>Polski</NavDropdown.Item>\r\n                            </NavDropdown>\r\n                            <NavDropdown.Divider />\r\n                            <NavDropdown.Item onClick={handleLogout}>{t(\"logout\")}</NavDropdown.Item>\r\n                        </NavDropdown>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n    )\r\n}\r\n\r\nexport default Navigation;","import React from \"react\";\r\n\r\nconst Footer = ({t}) =>{\r\n    return(\r\n        <footer>\r\n            {t(\"footer\")}\r\n        </footer>\r\n    )\r\n}\r\nexport default Footer;","export const baseUrl = process.env.NODE_ENV === 'development' ? 'http://localhost:8080' : 'https://medical-center.herokuapp.com'","import React, {useState, useEffect} from \"react\";\r\nimport {useHistory} from 'react-router';\r\nimport {Col, Row} from \"react-bootstrap\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport {Formik} from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport {baseUrl} from \"../../config/config\";\r\n\r\nconst  today = new Date();\r\n\r\nconst PatientData = ({t, logout, setLogged}) => {\r\n    const history = useHistory();\r\n    const [redirect, setRedirect] = useState(false);\r\n    const [userId, setUserId] = useState(()=>{\r\n        const saved = JSON.parse(sessionStorage.getItem('id'));\r\n        return saved || undefined;\r\n    });\r\n    const [userToken, setUserToken] = useState(()=>{\r\n        const saved = JSON.parse(sessionStorage.getItem('token'));\r\n        return saved || undefined;\r\n    });\r\n\r\n    const schema = yup.object().shape({\r\n        firstName: yup.string().min(2, t(\"firstNameMinCharacter\")).max(50, t(\"firstNameMaxCharacter\")).required(t(\"required\")),\r\n        lastName: yup.string().min(2, t(\"lastNameMinCharacter\")).max(50, t(\"lastNameMaxCharacter\")).required(t(\"required\")),\r\n        pesel: yup.string().min(11, t(\"peselCharacterError\")).max(11, t(\"peselCharacterError\"))\r\n            .test('test-name', t(\"invalidPeselError\"),\r\n                function validatePesel(pesel) {\r\n                    let reg = /^[0-9]{11}$/;\r\n                    if (reg.test(pesel) === false)\r\n                        return false;\r\n                    else {\r\n                        let digits = (\"\" + pesel).split(\"\");\r\n                        if ((parseInt(pesel.substring(4, 6)) > 31) || (parseInt(pesel.substring(2, 4)) > 12))\r\n                            return false;\r\n\r\n                        let checksum = (1 * parseInt(digits[0]) + 3 * parseInt(digits[1]) + 7 * parseInt(digits[2]) + 9 * parseInt(digits[3]) + 1 * parseInt(digits[4]) + 3 * parseInt(digits[5]) + 7 * parseInt(digits[6]) + 9 * parseInt(digits[7]) + 1 * parseInt(digits[8]) + 3 * parseInt(digits[9])) % 10;\r\n                        if (checksum === 0)\r\n                            checksum = 10;\r\n                        checksum = 10 - checksum;\r\n\r\n                        return (parseInt(digits[10]) === checksum);\r\n                    }\r\n                }).required(t(\"required\")),\r\n        birthDate: yup.date().max(today, t(\"dateFromFutureError\")).required(t(\"required\")),\r\n        phoneNumber: yup.string().min(9, t(\"phoneNumberError\")).required(t(\"required\")),\r\n        email: yup.string().email(t(\"emailError\")).required(t(\"required\")),\r\n        password: yup.string().min(6, t(\"passwordMinCharactersError\")).max(50, t(\"passwordMaxCharactersError\")).required(t(\"required\")),\r\n        confirmPassword: yup.string().oneOf([yup.ref('password'), ''], t(\"passwordMatch\")).required(t(\"required\")),\r\n        street: yup.string().min(2).required(t(\"required\")),\r\n        streetNumber: yup.string().required(t(\"required\")),\r\n        city: yup.string().required(t(\"required\")),\r\n        postCode: yup.string().required(t(\"required\")).matches(/[0-9]{2}-[0-9]{3}/, t(\"postCodeError\")),\r\n        country: yup.string().required(t(\"required\"))\r\n    });\r\n\r\n    const [data, setPatient] = useState([]);\r\n    const [firstName, setFirstName] = useState(undefined);\r\n    const [lastName, setLastName] = useState(undefined);\r\n    const [pesel, setPesel] = useState(undefined);\r\n    const [birthDate, setBirthDate] = useState(undefined);\r\n    const [phoneNumber, setPhone] = useState(undefined);\r\n    const [email, setEmail] = useState(undefined);\r\n    const [emailChange, setEmailChange] = useState(false);\r\n    const [password, setPassword] = useState(undefined);\r\n    const [confirmPassword, setConfirmPassword] = useState(undefined);\r\n    const [patientsFiles, setPatientFiles] = useState(undefined);\r\n\r\n    const [street, setStreet] = useState(undefined);\r\n    const [streetNumber, setStreetNumber] = useState(undefined);\r\n    const [city, setCity] = useState(undefined);\r\n    const [postCode, setPostCode] = useState(undefined);\r\n    const [country, setCountry] = useState(undefined);\r\n\r\n    useEffect(() => {\r\n        let controller = new AbortController();\r\n\r\n        (async () =>{\r\n            try{\r\n                const patient = await fetchPatient()\r\n                setPatient(patient);\r\n                controller = null;\r\n            }catch (e){\r\n                console.log(e)\r\n                setRedirect(true);\r\n            }\r\n        })();\r\n        return () => controller?.abort();\r\n\r\n    }, [])\r\n\r\n    useEffect(()=>{\r\n        if(data !== undefined){\r\n            setFirstName(data.firstName);\r\n            setLastName(data.lastName);\r\n            setPesel(data.pesel);\r\n            setBirthDate(data.birthDate);\r\n            setPhone(data.phoneNumber);\r\n            setEmail(data.email);\r\n            setPatientFiles(data.patientsFiles);\r\n            data.address ? setStreet(data.address.street) : setStreet(undefined);\r\n            data.address ? setStreetNumber(data.address.streetNumber) : setStreetNumber(undefined);\r\n            data.address ? setCity(data.address.city) : setCity(undefined);\r\n            data.address ? setPostCode(data.address.postCode) : setPostCode(undefined);\r\n            data.address ? setCountry(data.address.country) : setCountry(undefined);\r\n        }\r\n    },[data])\r\n\r\n    const fetchPatient = async () => {\r\n        const res = await fetch(`${baseUrl}/patients/${userId}`,{\r\n            headers: {'Authorization' : `Bearer ${userToken}`}\r\n        })\r\n        if(res.status === 403){\r\n            setRedirect(true);\r\n        }\r\n        const data = await res.json()\r\n\r\n        return data\r\n    }\r\n\r\n    function handleSubmit(){\r\n        const newObj = {\r\n            \"id\": userId,\r\n            address: {\r\n                street,\r\n                streetNumber,\r\n                postCode,\r\n                city,\r\n                country\r\n            },\r\n            phoneNumber,\r\n            firstName,\r\n            lastName,\r\n            birthDate,\r\n            pesel,\r\n            patientsFiles\r\n        };\r\n\r\n        fetch(`${baseUrl}/patients`,{\r\n            method: 'PUT',\r\n            headers: {\r\n                'Authorization' : `Bearer ${userToken}`,\r\n                'Access-Control-Allow-Origin': `${baseUrl}`,\r\n                'Content-Type': 'application/json;charset=UTF-8',\r\n                },\r\n            body: JSON.stringify(newObj)\r\n        }).then((res)=>{\r\n            if(res.status === 403){\r\n                window.alert(t(\"peselIsUsed\"));\r\n                logout(history);\r\n                throw new Error(t(\"peselIsUsed\"))\r\n            }\r\n            res.json()\r\n        }).catch((err)=>console.log(err));\r\n\r\n\r\n        if(emailChange === true && (password === undefined || password === '')){\r\n            window.alert(t(\"emailAndPasswordRequired\"))\r\n        }\r\n        if(password !== undefined && password !== ''){\r\n            let newAuthObj = {}\r\n            newAuthObj['password'] = password;\r\n            if(emailChange === true){\r\n                newAuthObj['email'] = email;\r\n            }\r\n\r\n            fetch(`${baseUrl}/users/${userId}/changeCredentials`,{\r\n                method: 'PATCH',\r\n                headers : {\r\n                    'Authorization' : `Bearer ${userToken}`,\r\n                    'Access-Control-Allow-Origin': `${baseUrl}`,\r\n                    'Content-Type': 'application/json;charset=UTF-8',\r\n                },\r\n                body : JSON.stringify(newAuthObj)\r\n            }).then((res)=>{\r\n                if(res.status === 403){\r\n                    window.alert(t(\"emailIsUsed\"));\r\n                    logout(history);\r\n                    throw new Error(t(\"emailIsUsed\"))\r\n                }\r\n            }).then(()=>{\r\n              if(emailChange === true){\r\n                  window.alert(t(\"emailChangeLogout\"));\r\n                  history.push('/login');\r\n                  sessionStorage.clear();\r\n                  sessionStorage.setItem('logged', 'false');\r\n                  setLogged(false);\r\n              }\r\n            }).catch(err=>console.log(err))\r\n        }\r\n    }\r\n\r\n    if(redirect === true) {\r\n        logout(history);\r\n        return (\r\n            <></>\r\n        )\r\n    }else{\r\n        return(\r\n            <div className=\"itemsList\">\r\n                <div className=\"listHeader\">\r\n                    <h2>{t('myData')}</h2>\r\n                </div>\r\n                <Formik validationSchema={schema}\r\n                        enableReinitialize={true}\r\n                        onSubmit={handleSubmit}\r\n                        initialErrors={{}}\r\n                        validateOnChange={true}\r\n                        validateOnMount={true}\r\n                        initialValues={{\r\n                            firstName : firstName,\r\n                            lastName : lastName,\r\n                            pesel : pesel,\r\n                            birthDate : birthDate,\r\n                            phoneNumber : phoneNumber,\r\n                            email : email,\r\n                            password : password,\r\n                            confirmPassword : confirmPassword,\r\n                            street : street,\r\n                            streetNumber : streetNumber,\r\n                            city: city,\r\n                            postCode : postCode,\r\n                            country : country\r\n                        }} >\r\n                    {({\r\n                          handleSubmit,\r\n                          values,\r\n                          touched,\r\n                          errors\r\n                      })=>(\r\n                        <Form className=\"newAppointmentForm\" onSubmit={handleSubmit}>\r\n                            <Row className=\"align-items-center mb-3\">\r\n                                <Col>\r\n                                    <Form.Group>\r\n                                        <Form.Label>{t(\"firstName\")}</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"firstName\" placeholder={t(\"firstName\")} size=\"lg\" defaultValue={values.firstName} isInvalid={!!errors.firstName} isValid={touched.firstName && !errors.firstName} onChange={(e)=>setFirstName(e.target.value)}/>\r\n                                        <Form.Control.Feedback type=\"invalid\">{errors.firstName}</Form.Control.Feedback>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Form.Group>\r\n                                        <Form.Label>{t(\"lastName\")}</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"lastName\" placeholder={t(\"lastName\")} size=\"lg\"  defaultValue={values.lastName} isInvalid={!!errors.lastName} isValid={touched.lastName && !errors.lastName} onChange={(e)=>setLastName(e.target.value)}/>\r\n                                        <Form.Control.Feedback type=\"invalid\">{errors.lastName}</Form.Control.Feedback>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"align-items-center mb-3\">\r\n                                <Col>\r\n                                    <Form.Group>\r\n                                        <Form.Label>PESEL:</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"pesel\" placeholder=\"PESEL\" size=\"lg\" defaultValue={values.pesel} isInvalid={!!errors.pesel} isValid={touched.pesel && !errors.pesel} onChange={(e)=>setPesel(e.target.value)}/>\r\n                                        <Form.Control.Feedback type=\"invalid\">{errors.pesel}</Form.Control.Feedback>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Form.Group>\r\n                                        <Form.Label>{t(\"birthDate\")}</Form.Label>\r\n                                        <Form.Control type=\"date\" name=\"birthDate\" placeholder={t(\"birthDate\")} size=\"lg\" defaultValue={values.birthDate} isInvalid={!!errors.birthDate} isValid={touched.birthDate && !errors.birthDate} onChange={(e)=>setBirthDate(e.target.value)}/>\r\n                                        <Form.Control.Feedback type=\"invalid\">{errors.birthDate}</Form.Control.Feedback>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"align-items-center mb-3\">\r\n                                <Col>\r\n                                    <Form.Group>\r\n                                        <Form.Label>{t(\"phoneNumber\")}</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"phoneNumber\" placeholder={t(\"phoneNumber\")} size=\"lg\" defaultValue={values.phoneNumber} isInvalid={!!errors.phoneNumber} isValid={touched.phoneNumber && !errors.phoneNumber} onChange={(e)=>setPhone(e.target.value)}/>\r\n                                        <Form.Control.Feedback type=\"invalid\">{errors.phoneNumber}</Form.Control.Feedback>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Form.Group>\r\n                                        <Form.Label>Email:</Form.Label>\r\n                                        <Form.Control type=\"email\" name=\"email\" placeholder=\"Email\" size=\"lg\" defaultValue={values.email} isInvalid={!!errors.email} isValid={touched.email && !errors.email} onChange={(e)=>{\r\n                                            setEmail(e.target.value)\r\n                                            setEmailChange(true);\r\n                                        }}/>\r\n                                        <Form.Control.Feedback type=\"invalid\">{errors.email}</Form.Control.Feedback>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"align-items-center mb-3\">\r\n                                <Col>\r\n                                    <Form.Group>\r\n                                        <Form.Label>{t(\"password\")}:</Form.Label>\r\n                                        <Form.Control type=\"password\" name=\"password\" placeholder={t(\"password\")} size=\"lg\" defaultValue={values.password} isInvalid={!!errors.password} isValid={touched.password && !errors.password} onChange={(e)=>setPassword(e.target.value)}/>\r\n                                        <Form.Control.Feedback type=\"invalid\">{errors.password}</Form.Control.Feedback>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Form.Group>\r\n                                        <Form.Label>{t(\"confirmPassword\")}:</Form.Label>\r\n                                        <Form.Control type=\"password\" name=\"confirmPassword\" placeholder={t(\"confirmPassword\")} size=\"lg\" defaultValue={values.confirmPassword} isInvalid={!!errors.confirmPassword} isValid={touched.confirmPassword && !errors.confirmPassword} onChange={(e)=>setConfirmPassword(e.target.value)}/>\r\n                                        <Form.Control.Feedback type=\"invalid\">{errors.confirmPassword}</Form.Control.Feedback>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                            </Row>\r\n                            <h6 style={{color: '#e60000'}}>{t(\"changeEmail\")}</h6>\r\n                            <br/>\r\n                            <Row className=\"align-items-center mb-3\">\r\n                                <Col>\r\n                                    <Form.Group>\r\n                                        <Form.Label>{t(\"street\")}</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"street\" placeholder={t(\"street\")} size=\"lg\" defaultValue={values.street} isInvalid={!!errors.street} isValid={touched.street && !errors.street} onChange={(e)=>setStreet(e.target.value)}/>\r\n                                        <Form.Control.Feedback type=\"invalid\">{errors.street}</Form.Control.Feedback>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Form.Group>\r\n                                        <Form.Label>{t(\"streetNumber\")}</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"streetNumber\" placeholder={t(\"streetNumber\")} size=\"lg\" defaultValue={values.streetNumber} isInvalid={!!errors.streetNumber} isValid={touched.streetNumber && !errors.streetNumber} onChange={(e)=>setStreetNumber(e.target.value)}/>\r\n                                        <Form.Control.Feedback type=\"invalid\">{errors.streetNumber}</Form.Control.Feedback>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"align-items-center mb-3\">\r\n                                <Col>\r\n                                    <Form.Group>\r\n                                        <Form.Label>{t(\"city\")}</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"city\" placeholder={t(\"city\")} size=\"lg\" defaultValue={values.city} isInvalid={!!errors.city} isValid={touched.city && !errors.city} onChange={(e)=>setCity(e.target.value)}/>\r\n                                        <Form.Control.Feedback type=\"invalid\">{errors.city}</Form.Control.Feedback>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Form.Group>\r\n                                        <Form.Label>{t(\"postCode\")}</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"postCode\" placeholder={t(\"postCode\")} size=\"lg\" defaultValue={values.postCode} isInvalid={!!errors.postCode} isValid={touched.postCode && !errors.postCode} onChange={(e)=>setPostCode(e.target.value)}/>\r\n                                        <Form.Control.Feedback type=\"invalid\">{errors.postCode}</Form.Control.Feedback>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"align-items-center mb-3\">\r\n                                <Col>\r\n                                    <Form.Group>\r\n                                        <Form.Label>{t(\"country\")}</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"country\" placeholder={t(\"country\")} size=\"lg\" defaultValue={values.country} isInvalid={!!errors.country} isValid={touched.country && !errors.country} onChange={(e)=>setCountry(e.target.value)}/>\r\n                                        <Form.Control.Feedback type=\"invalid\">{errors.country}</Form.Control.Feedback>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Form.Group/>\r\n                                </Col>\r\n                            </Row>\r\n                            <div style={{display:\"flex\", justifyContent: 'center'}}>\r\n                                <Button variant=\"primary\" size=\"lg\" type=\"submit\">{t(\"edit\")}</Button>\r\n                            </div>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PatientData;","import React, {useState, useEffect, useRef} from \"react\";\r\nimport {useHistory} from 'react-router';\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport {baseUrl} from \"../../config/config\";\r\n\r\nconst UploadNewFile = ({t, logout}) =>{\r\n    const history = useHistory();\r\n\r\n    const [userId, setUserId] = useState(()=>{\r\n        const saved = JSON.parse(sessionStorage.getItem('id'));\r\n        return saved || undefined;\r\n    });\r\n    const [userToken, setUserToken] = useState(()=>{\r\n        const saved = JSON.parse(sessionStorage.getItem('token'));\r\n        return saved || undefined;\r\n    });\r\n\r\n    const [files, setFiles] = useState([]);\r\n    const [selectedFile, setSelectedFile] = useState(undefined);\r\n    const [deletedFile, setDeletedFile] = useState(undefined);\r\n    const [fileDescription, setFileDescription] = useState(undefined);\r\n    const [errors, setErrors] = useState({});\r\n    const ref = useRef();\r\n    const [redirect, setRedirect] = useState(false);\r\n\r\n    const reset = () =>{\r\n        ref.current.value = \"\";\r\n    };\r\n\r\n    useEffect(()=>{\r\n        let controller = new AbortController();\r\n\r\n        (async ()=>{\r\n            try{\r\n                if(selectedFile === undefined){\r\n                    const patientFiles = await fetchPatientFiles()\r\n                    setFiles(patientFiles);\r\n                    controller = null;\r\n                }\r\n            }catch (e){\r\n                console.log(e)\r\n                setRedirect(true);\r\n            }\r\n        })();\r\n        return () =>controller?.abort();\r\n\r\n    },[selectedFile])\r\n\r\n    useEffect(()=>{\r\n        let controller = new AbortController();\r\n\r\n        (async () =>{\r\n            if(deletedFile !== undefined){\r\n                try{\r\n                    const patientFiles = await fetchPatientFiles()\r\n                    setFiles(patientFiles);\r\n                    setDeletedFile(undefined);\r\n                    controller = null;\r\n                }catch (e){\r\n                    console.log(e)\r\n                    setRedirect(true);\r\n                }\r\n            }\r\n        })();\r\n        return () =>controller?.abort();\r\n\r\n    },[deletedFile])\r\n\r\n    const fetchPatientFiles = async ()=>{\r\n        const res = await fetch(`${baseUrl}/patients/${userId}/files`,{\r\n            headers: {'Authorization' : `Bearer ${userToken}`}\r\n        })\r\n        if(res.status === 403){\r\n            setRedirect(true);\r\n        }\r\n        const data = await res.json()\r\n\r\n        return data;\r\n    }\r\n\r\n    const convertToBase64 = (file) => {\r\n        return new Promise((resolve, reject) => {\r\n            const fileReader = new FileReader();\r\n            fileReader.readAsDataURL(file);\r\n            fileReader.onload = () => {\r\n                resolve(fileReader.result);\r\n            };\r\n            fileReader.onerror = (error) => {\r\n                reject(error);\r\n            };\r\n        });\r\n    };\r\n\r\n    const handleFileUpload = async (e) =>{\r\n        const file = e.target.files[0];\r\n        const base64 = await convertToBase64(file);\r\n        let data = base64.split('base64,')[1];\r\n        let binaryData = atob(data);\r\n\r\n        let byteNumbers = new Array(binaryData.length);\r\n        for(let i = 0; i < binaryData.length; i++){\r\n            byteNumbers[i] = binaryData.charCodeAt(i);\r\n        }\r\n        let test = new Uint8Array(byteNumbers);\r\n        let array = Array.from(test);\r\n\r\n        let today = new Date();\r\n        let date = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();\r\n\r\n        let fileToUpload = {\r\n            \"upload_date\" : date,\r\n            \"file\" : array,\r\n            \"type\" : e.target.files[0].type,\r\n            \"name\" : e.target.files[0].name,\r\n        }\r\n        setSelectedFile(fileToUpload);\r\n    }\r\n\r\n     const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n\r\n        const errors = findFormErrors();\r\n\r\n        if(Object.keys(errors).length > 0){\r\n            setErrors(errors);\r\n        }else{\r\n            if(selectedFile !== undefined && fileDescription !== undefined){\r\n                selectedFile[\"description\"] = fileDescription;\r\n\r\n                fetch(`${baseUrl}/patients/${userId}/files`,{\r\n                    method : 'POST',\r\n                    headers :{\r\n                        'Authorization' : `Bearer ${userToken}`,\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${baseUrl}`\r\n                    },\r\n                    body: JSON.stringify(selectedFile)\r\n                }).then((res)=>{\r\n                    setSelectedFile(undefined)\r\n                    setFileDescription('');\r\n                    reset();\r\n                    if(res.status === 403){\r\n                        setRedirect(true);\r\n                    }\r\n                })\r\n                    .catch(err=>console.log(err));\r\n            }\r\n        }\r\n     }\r\n\r\n     const handleFileDownload = (e, file) => {\r\n         e.preventDefault();\r\n         fetch(`${baseUrl}/patients/${userId}/files/${file.id}`,{\r\n             headers: {'Authorization' : `Bearer ${userToken}`}\r\n         })\r\n             .then(res => res.json())\r\n             .then(res => {\r\n                 let a = window.document.createElement('a');\r\n                 let byteArr = new Uint8Array(res.file);\r\n                 a.href = window.URL.createObjectURL(new Blob([byteArr], {type: file.type}))\r\n                 a.download = res.name;\r\n                 document.body.appendChild(a);\r\n                 a.click();\r\n                 document.body.removeChild(a);\r\n             });\r\n     }\r\n\r\n     const handleFileDeletion = (e, file) =>{\r\n        e.preventDefault();\r\n\r\n        fetch(`${baseUrl}/patients/${userId}/files/${file.id}`,{\r\n            headers: {'Authorization' : `Bearer ${userToken}`},\r\n            method: 'DELETE',\r\n        }).then(res => {\r\n            if(res.status === 403){\r\n                setRedirect(true);\r\n            }\r\n        }).catch(err => console.log(err))\r\n     }\r\n\r\n     const findFormErrors = () =>{\r\n        const newErrors = {};\r\n        const fileTypes = [\"image/png\", \"image/jpeg\", \"application/pdf\", \"application/msword\"]\r\n\r\n        if(selectedFile === undefined){\r\n            newErrors.file = t(\"selectFileError\");\r\n        }\r\n\r\n        if(fileDescription === undefined || fileDescription === ''){\r\n            newErrors.description = t(\"fileDescriptionError\");\r\n        }\r\n\r\n        if(selectedFile !== undefined && !fileTypes.includes(selectedFile.type)){\r\n            newErrors.file = t(\"uploadFileFormatsError\");\r\n        }\r\n\r\n        return newErrors;\r\n     }\r\n\r\n    if(redirect === true){\r\n        logout(history);\r\n        return (\r\n            <></>\r\n        )\r\n    }else {\r\n        return (\r\n            <div className=\"itemsList\">\r\n                <div className=\"listHeader\">\r\n                    <h2>{t(\"addNewFile\")}</h2>\r\n                </div>\r\n                <Form className=\"newAppointmentForm\">\r\n                    <Form.Group controlId=\"file\" className=\"mb-2\">\r\n                        <Form.Label>{t(\"file\")}</Form.Label>\r\n                        <Form.Control as=\"input\" ref={ref} type=\"file\" isInvalid={!!errors.file} onChange={(e) => {\r\n                            handleFileUpload(e);\r\n                            if (!!errors['file'])\r\n                                setErrors({\r\n                                    ...errors,\r\n                                    ['file']: null\r\n                                })\r\n                        }}/>\r\n                        <Form.Control.Feedback type='invalid'>{errors.file}</Form.Control.Feedback>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"description\" className=\"mb-2\">\r\n                        <Form.Label>{t(\"fileDescription\")}</Form.Label>\r\n                        <Form.Control as=\"textarea\" value={fileDescription} isInvalid={!!errors.description}\r\n                                      onChange={(e) => {\r\n                                          setFileDescription(e.target.value);\r\n                                          if (!!errors['description'])\r\n                                              setErrors({\r\n                                                  ...errors,\r\n                                                  ['description']: null\r\n                                              })\r\n                                      }}/>\r\n                        <Form.Control.Feedback type='invalid'>{errors.description}</Form.Control.Feedback>\r\n                    </Form.Group>\r\n                    <div style={{display: \"flex\", justifyContent: 'center'}}>\r\n                        <Button variant='primary' onClick={(e) => handleSubmit(e)}>{t(\"addFile\")}</Button>\r\n                    </div>\r\n                </Form>\r\n                {files.length > 0 ?\r\n                    <Table className=\"table table-hover table-bordered fileTable\" style={{width: '80%'}}>\r\n                        <thead style={{backgroundColor: '#e6eeff'}}>\r\n                        <tr>\r\n                            <th>{t(\"fileNameFormat\")}</th>\r\n                            <th>{t(\"fileDescription\")}</th>\r\n                            <th>{t(\"createDate\")}</th>\r\n                            <th>{t(\"action\")}</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {files.map((file) =>\r\n                            <tr key={file.id}>\r\n                                <td>{file.name}</td>\r\n                                <td>{file.description}</td>\r\n                                <td>{file.uploadDate}</td>\r\n                                <td>\r\n                                    <ul className=\"listActions\">\r\n                                        <li>\r\n                                            <Button variant='primary' href={`${baseUrl}/patients/${userId}/files/${file.id}`}\r\n                                                    onClick={e => handleFileDownload(e, file)}>{t(\"download\")}</Button>\r\n                                        </li>\r\n                                        <li>\r\n                                            <Button variant='danger' href={`${baseUrl}/patients/${userId}/files/${file.id}`}\r\n                                                    onClick={e => {\r\n                                                        setDeletedFile(file);\r\n                                                        handleFileDeletion(e, file)\r\n                                                    }}>{t(\"delete\")}</Button>\r\n                                        </li>\r\n                                    </ul>\r\n                                </td>\r\n                            </tr>\r\n                        )}\r\n                        </tbody>\r\n                    </Table> : t(\"noFiles\")\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UploadNewFile;","import React from \"react\";\r\nimport {useState, useEffect} from \"react\";\r\nimport {useHistory} from \"react-router\";\r\nimport {FaRegUser, FaCheck, FaFile} from 'react-icons/fa'\r\nimport {GiMedicines} from 'react-icons/gi'\r\nimport {Button} from \"react-bootstrap\";\r\nimport {baseUrl} from \"../../config/config\";\r\nimport {GiConfirmed} from \"react-icons/all\";\r\n\r\nconst Appointment = ({appointment, setCancelledAppointment, t, logout}) =>{\r\n    const history = useHistory();\r\n    const [redirect, setRedirect] = useState(false);\r\n    const [userToken, setUserToken] = useState(()=>{\r\n        const saved = JSON.parse(sessionStorage.getItem('token'));\r\n        return saved || undefined;\r\n    });\r\n\r\n    const [app, setAppointment] = useState(appointment);\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const available = 'AVAILABLE';\r\n    const reserved = 'RESERVED';\r\n    const confirmed = 'CONFIRMED';\r\n    const done = 'DONE';\r\n\r\n    let x = (new Date()).getTimezoneOffset() * 60000;\r\n\r\n    useEffect(()=>{\r\n        if(appointment!==undefined){\r\n            setAppointment(appointment);\r\n        }\r\n    }, [appointment])\r\n\r\n    const togglePanel = (e) =>{\r\n        e.preventDefault();\r\n        setOpen(!open);\r\n    }\r\n\r\n    const handleConfirmation = (e) =>{\r\n        e.preventDefault();\r\n        let confirmedApp = app;\r\n        confirmedApp.state = confirmed;\r\n        setAppointment(confirmedApp);\r\n\r\n        fetch(`${baseUrl}/appointments/${appointment.id}/confirm`, {\r\n            method: 'PATCH',\r\n            headers:{\r\n                'Content-Type': 'application/json',\r\n                'Authorization' : `Bearer ${userToken}`\r\n            },\r\n        }).then((res)=>{\r\n            res.json()\r\n            if(res.status === 403){\r\n                setRedirect(true);\r\n            }else{\r\n                window.alert(t(\"confirmedAppointmentInfo\"))\r\n            }\r\n        }).catch((err)=>console.log(err));\r\n    }\r\n\r\n    const handleCancellation = (e) =>{\r\n        e.preventDefault();\r\n        let cancelledApp = app;\r\n        cancelledApp.state = available;\r\n        setCancelledAppointment(cancelledApp);\r\n\r\n        fetch(`${baseUrl}/appointments/${appointment.id}/cancel`,{\r\n            method: 'PATCH',\r\n            headers:{\r\n                'Content-Type': 'application/json',\r\n                'Authorization' : `Bearer ${userToken}`\r\n            },\r\n        }).then((res)=>{\r\n            res.json()\r\n            if(res.status === 403){\r\n                setRedirect(true);\r\n            }else{\r\n                window.alert(t(\"canceledAppointmentInfo\"))\r\n            }\r\n        }).catch((err)=>console.log(err));\r\n    }\r\n\r\n    const formatYmd = date => date.toISOString().slice(0, 10);\r\n    if(redirect === true){\r\n        logout(history);\r\n        return (\r\n            <></>\r\n        )\r\n    }else {\r\n        return (\r\n            <div\r\n                className={app.date ? ((new Date(new Date().setDate(new Date().getDate() + 1)) < (new Date(app.date.slice(0, 10)))) && app.state === reserved) ? 'appointmentAndCheckup incomingApp' :\r\n                    (((new Date(new Date().setDate(new Date().getDate() + 1))).getDate() === (new Date(app.date.slice(0, 10))).getDate()) && app.state === reserved) ? 'appointmentAndCheckup appToConfirm' :\r\n                        ((formatYmd(new Date()) === app.date.slice(0, 10)) || (((new Date(new Date().setDate(new Date().getDate() + 1))).getDate() === (new Date(app.date.slice(0, 10))).getDate() && app.state === confirmed)) ? 'appointmentAndCheckup todayApp' :\r\n                            'appointmentAndCheckup archivalApp') : ''} onClick={e => togglePanel(e)}>\r\n                <div className=\"top\">\r\n                    <p className=\"appointmentAndCheckupHeader\">{(app.service ? (t(app.service.name)) : t(app.serviceName))}</p>\r\n                    <div className=\"data\">\r\n                        <p>{t(\"date\")}</p>\r\n                        <p>{appointment.date ? new Date(new Date(appointment.date) - x).toISOString().slice(0, 10) : ''}</p>\r\n                        <p>{appointment.date ? new Date(new Date(appointment.date) - x).toISOString().slice(11, 16) : ''}</p>\r\n                        {(appointment.state === done && (formatYmd(new Date()) === app.date.slice(0, 10))) &&\r\n                        <p><GiConfirmed size={42} style={{color: \"#18a74b\"}}/></p>}\r\n                    </div>\r\n                </div>\r\n                {app.date ?\r\n                    <div style={{display: 'flex', justifyContent: 'space-between'}}>\r\n                        <div>\r\n                            <FaRegUser size={42}/>\r\n                            {t(\"doctorTitle\")}&nbsp;{(app.doctor ? (app.doctor.firstName + ' ' + app.doctor.lastName) : '')}\r\n                        </div>\r\n                        <div style={{display: \"inline-flex\"}}>\r\n                            <div style={{margin: \"6px\"}}>\r\n                                {(((new Date(new Date().setDate(new Date().getDate() + 1))).getDate() === (new Date(app.date.slice(0, 10))).getDate()) && (app.state === reserved)) &&\r\n                                <Button variant='outline-success' size=\"lg\"\r\n                                        onClick={e => handleConfirmation(e)}>{t(\"confirmAppointmentMessage\")}</Button>\r\n                                }\r\n                            </div>\r\n                            <div style={{margin: \"6px\"}}>\r\n                                {(app.state === reserved) &&\r\n                                <Button variant='outline-primary' size='lg'\r\n                                        onClick={e => handleCancellation(e)}>{t(\"cancelAppointmentMessage\")}</Button>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div> : ''}\r\n                {(app.state === done) ?\r\n                    <>\r\n                        {open ? (\r\n                            <div>\r\n                                <hr/>\r\n                                <div className=\"subsections\">\r\n                                    <FaCheck size={42}/>\r\n                                    <p className=\"header\">{t(\"recommendations\")}</p>\r\n                                </div>\r\n                                <ol>\r\n                                    <li>{app.recommendations ? app.recommendations : t(\"noRecommendations\")}</li>\r\n                                </ol>\r\n                                <hr/>\r\n\r\n                                <div className=\"subsections\">\r\n                                    <FaFile size={42}/>\r\n                                    <p className=\"header\">{t(\"madeCheckUps\")}</p>\r\n                                </div>\r\n                                <p>{app.diagnosticTests.length > 0 ? (app.diagnosticTests.map((test) => test.diagnosticTestName)) : t(\"noCheckUps\")}</p>\r\n                                <hr/>\r\n\r\n                                <div className=\"subsections\">\r\n                                    <GiMedicines size={42}/>\r\n                                    <p className=\"header\">{t(\"eReceipt\")}</p>\r\n                                </div>\r\n                                <p>{app.prescriptions.length > 0 ? t(\"eReceiptIssued\") : t(\"noReceipts\")}</p>\r\n                            </div>) : null}\r\n                    </> : null}\r\n            </div>);\r\n    }\r\n}\r\n\r\nexport default Appointment;","import React, {useState, useEffect} from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Appointment from \"./Appointment\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport \"react-datepicker/dist/react-datepicker.css\"\r\nimport {baseUrl} from \"../../config/config\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\n\r\nconst AppointmentList = ({t, logout}) =>{\r\n    let history = useHistory();\r\n    const [redirect, setRedirect] = useState(false);\r\n    const formatYmd = date => date.toISOString().slice(0,10);\r\n    const facility = 'FACILITY';\r\n    const phone = 'TELEPHONE';\r\n    const reserved = 'RESERVED';\r\n    const confirmed = 'CONFIRMED';\r\n    const done = 'DONE';\r\n\r\n    const [userId, setUserId] = useState(()=>{\r\n        const savedUserId = JSON.parse(sessionStorage.getItem('id'));\r\n        return savedUserId || undefined;\r\n    });\r\n    const [userToken, setUserToken] = useState(()=>{\r\n        const savedToken = JSON.parse(sessionStorage.getItem('token'));\r\n        return savedToken || undefined;\r\n    });\r\n\r\n    const [appointments, setAppointments] = useState([]);\r\n    const [appDate, setAppDate] = useState(undefined);\r\n    const [filteredAppointments, setFilteredAppointments] = useState([appointments]);\r\n    const [canceledAppointment, setCancelledAppointment] = useState(undefined);\r\n\r\n    const pageSizes = [3, 5, 10];\r\n    const [page, setPage] = useState(1);\r\n    const [count, setCount] = useState(0);\r\n    const [pageSize, setPageSize] = useState(pageSizes[0]);\r\n\r\n    const getRequestParams = (page, pageSize) =>{\r\n        let params = {};\r\n\r\n        if(page){\r\n            params[\"page\"] = page - 1;\r\n        }\r\n        if(pageSize){\r\n            params[\"size\"] = pageSize;\r\n        }\r\n        return params;\r\n    }\r\n\r\n    useEffect(() =>{\r\n        let controller = new AbortController();\r\n\r\n        (async () =>{\r\n            let todaysVisits = [];\r\n            let visitToConfirm =[];\r\n            let futureVisits = [];\r\n            let pastVisits = [];\r\n            let finalApps=[];\r\n            try{\r\n                await fetchAppointments()\r\n                    .then(res=>{\r\n                        setCount(res.totalPages);\r\n                        res.appointments.map((app) => {\r\n                            if(((new Date(app.date.slice(0,10))) > new Date(new Date().setDate(new Date().getDate()+1)))&&app.state === reserved){\r\n                                futureVisits.push(app)\r\n                            }else if(((new Date(new Date().setDate(new Date().getDate()+1))).getDate() === (new Date(app.date.slice(0,10))).getDate()) && app.state === reserved){\r\n                                visitToConfirm.push(app)\r\n                            }else if(app.state === confirmed){\r\n                                todaysVisits.push(app)\r\n                            }else if(app.state === done){\r\n                                pastVisits.push(app)\r\n                            }\r\n                        })\r\n                    }).then(()=>{\r\n                        todaysVisits = todaysVisits.sort((a,b)=>new Date(a.date) - new Date(b.date))\r\n                        finalApps = [...visitToConfirm, ...todaysVisits, ...futureVisits, ...pastVisits];\r\n                    })\r\n                setAppointments(finalApps);\r\n                setFilteredAppointments(finalApps);\r\n                controller = null;\r\n            }catch (e){\r\n                console.log(e)\r\n                setRedirect(true);\r\n            }\r\n        })();\r\n        return () => controller?.abort();\r\n\r\n    }, [canceledAppointment, page, pageSize])\r\n\r\n\r\n    const checkAppId = (app) =>{\r\n        return app.patientId !=null;\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(canceledAppointment!==undefined){\r\n            const result = appointments.filter(checkAppId);\r\n            setAppointments(result);\r\n        }\r\n    },[canceledAppointment])\r\n\r\n\r\n    const fetchAppointments = async () =>{\r\n        const params = getRequestParams(page, pageSize);\r\n        let res;\r\n        if(params.page !== null && params.size !== null){\r\n            res = await fetch(`${baseUrl}/patients/${userId}/appointments?page=${params.page}&size=${params.size}`,{\r\n                headers: {'Authorization' : `Bearer ${userToken}`}\r\n            })\r\n            if(res.status === 403){\r\n                setRedirect(true);\r\n            }\r\n\r\n        }else if(params.page !== null && params.size === null){\r\n            res = await fetch(`${baseUrl}/patients/${userId}/appointments?page=${params.page}`,{\r\n                headers: {'Authorization' : `Bearer ${userToken}`}\r\n            })\r\n            if(res.status === 403){\r\n                setRedirect(true);\r\n            }\r\n\r\n        }else if(params.page === null && params.size !== null){\r\n            res = await fetch(`${baseUrl}/patients/${userId}/appointments?size=${params.size}`,{\r\n                headers: {'Authorization' : `Bearer ${userToken}`}\r\n            })\r\n            if(res.status === 403){\r\n                setRedirect(true);\r\n            }\r\n\r\n        }else{\r\n            res = await fetch(`${baseUrl}/patients/${userId}/appointments`,{\r\n                headers: {'Authorization' : `Bearer ${userToken}`}\r\n            })\r\n            if(res.status === 403){\r\n                setRedirect(true);\r\n            }\r\n        }\r\n        const data = await res.json();\r\n\r\n        return data;\r\n    }\r\n\r\n    const handlePageChange = (event, value) => {\r\n        setPage(value);\r\n    };\r\n\r\n    const handlePageSizeChange = (event) => {\r\n        setPageSize(event.target.value);\r\n        setPage(1);\r\n    };\r\n\r\n    const handleFacilityFilter = () =>{\r\n        let facilityAppointments = appointments.filter(appointment => (appointment.type === facility));\r\n        setFilteredAppointments(facilityAppointments);\r\n    }\r\n\r\n    const handlePhoneFilter = () =>{\r\n        let phoneAppointments = appointments.filter(appointment => (appointment.type === phone));\r\n        setFilteredAppointments(phoneAppointments);\r\n    }\r\n\r\n    const handleShowAll = () =>{\r\n        setFilteredAppointments(appointments);\r\n    }\r\n\r\n    const handleDateFilter = (e) =>{\r\n        e.preventDefault();\r\n        if(e.target.value){\r\n            let x = (new Date()).getTimezoneOffset() * 60000;\r\n            let appointmentsFilteredByDate = appointments.filter(appointment => (appointment.date.slice(0,10) === e.target.value))\r\n            setFilteredAppointments(appointmentsFilteredByDate);\r\n        }else{\r\n            setAppDate(formatYmd(new Date()));\r\n        }\r\n    }\r\n\r\n    const handleClick = () =>{\r\n        history.push(\"/new-appointment\");\r\n    }\r\n\r\n    if(redirect === true){\r\n        logout(history);\r\n        return (\r\n            <></>\r\n        )\r\n    }else {\r\n        return (\r\n            <div className=\"itemsList\">\r\n                <div className=\"listHeader\">\r\n                    <h2>{t(\"yourAppointments\")}</h2>\r\n                </div>\r\n                <div className=\"appointmentListHeader\">\r\n                    <div className=\"checkBoxesAndButton\">\r\n                        <div className=\"checkboxes\">\r\n                            <div className=\"checkbox\">\r\n                                <input type=\"radio\" id=\"all\" name=\"box\" value=\"all\" onChange={handleShowAll}/>\r\n                                <label htmlFor=\"all\">{t(\"all\")}</label>\r\n                            </div>\r\n                            <div className=\"checkbox\">\r\n                                <input type=\"radio\" id=\"normal\" name=\"box\" value=\"normal\"\r\n                                       onChange={handleFacilityFilter}/>\r\n                                <label htmlFor=\"normal\">{t(\"facilityAppointment\")}</label>\r\n                            </div>\r\n                            <div className=\"checkbox\">\r\n                                <input type=\"radio\" id=\"tele\" name=\"box\" value=\"tele\" onChange={handlePhoneFilter}/>\r\n                                <label htmlFor=\"tele\">{t(\"teleconsultation\")}</label>\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <button className=\"actionButton\" onClick={handleClick}>{t(\"makeAppointment\")}</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"test\">\r\n                    <div className=\"appDate\">\r\n                        <Form>\r\n                            <Form.Group>\r\n                                <Form.Label>{t(\"date\")}</Form.Label>\r\n                                <Form.Control type='date' onChange={(e) => {\r\n                                    setAppDate(e.target.value)\r\n                                    handleDateFilter(e)\r\n                                }} value={appDate}/>\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </div>\r\n                    <div className=\"itemsNumber\" style={{height: '4%'}}>\r\n                        <p>{t(\"elementsNumber\")}&nbsp;</p>\r\n                        <select onChange={handlePageSizeChange} value={pageSize}>\r\n                            {pageSizes.map((size) => (\r\n                                <option key={size} value={size}>\r\n                                    {size}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"appointmentList\">\r\n                    {filteredAppointments.map((appointment) => (\r\n                        <Appointment key={appointment.id} appointment={appointment}\r\n                                     setCancelledAppointment={setCancelledAppointment} t={t} logout={logout}/>\r\n                    ))}\r\n                </div>\r\n                <Pagination className=\"my-3\" count={count} page={page} siblingCount={1} boundaryCount={1}\r\n                            shape=\"rounded\" onChange={handlePageChange}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AppointmentList;","import React from \"react\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {useState, useEffect} from 'react';\r\nimport {useHistory} from 'react-router';\r\nimport {Col, Row} from \"react-bootstrap\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport {baseUrl} from \"../../config/config\";\r\n\r\nconst NewAppointmentForm = ({getAppointments, t, logout}) =>{\r\n    const [redirect, setRedirect] = useState(false);\r\n    const [userId, setUserId] = useState(()=>{\r\n        const saved = JSON.parse(sessionStorage.getItem('id'));\r\n        return saved || undefined;\r\n    });\r\n    const [userToken, setUserToken] = useState(()=>{\r\n        const saved = JSON.parse(sessionStorage.getItem('token'));\r\n        return saved || undefined;\r\n    });\r\n\r\n    let history = useHistory();\r\n    const formatYmd = date => date.toISOString().slice(0,10);\r\n    const referral = history.location.state;\r\n    const languages = [\"polski\", \"english\"];\r\n\r\n    const [appointmentType, setAppointmentType] = useState(undefined);\r\n    const [language, setLanguage] = useState(languages[0]);\r\n    const [service, setService] = useState(undefined);\r\n    const [receivedReferral, setReceivedReferral] = useState(referral ? referral : undefined);\r\n    const [selectedReferral, setSelectedReferral] = useState(receivedReferral ? receivedReferral : undefined);\r\n    const [doctor, setSelectedDoctor] = useState(undefined);\r\n\r\n    const [referrals, setReferrals] = useState([]);\r\n    const [services, setServices] = useState([]);\r\n    const [doctors, setDoctors] = useState([]);\r\n    const [dateFrom, setDateFrom] = useState(formatYmd(new Date()));\r\n    const [dateTo, setDateTo] = useState(formatYmd(new Date(new Date().setDate(new Date().getDate()+14))));\r\n    const [errors, setErrors] = useState({});\r\n\r\n    useEffect(()=>{\r\n        let controller = new AbortController();\r\n\r\n        if(appointmentType !== undefined){\r\n            if(appointmentType === 'facility'){\r\n                (async () =>{\r\n                    try{\r\n                        const services = await fetchServices(true)\r\n                        services.forEach(service => service.name = t(service.name));\r\n                        setServices(services)\r\n                        controller = null;\r\n                    }catch (e){\r\n                        console.log(e)\r\n                        setRedirect(true);\r\n                    }\r\n                })();\r\n               return () =>controller?.abort();\r\n\r\n            }else{\r\n                (async () =>{\r\n                    try{\r\n                        const services = await fetchServices(false)\r\n                        services.forEach(service => service.name = t(service.name));\r\n                        setServices(services)\r\n                        controller = null;\r\n                    }catch (e){\r\n                        console.log(e)\r\n                        setRedirect(true);\r\n                    }\r\n\r\n                })();\r\n                return () =>controller?.abort();\r\n            }\r\n        }\r\n    },[appointmentType])\r\n\r\n    useEffect(()=>{\r\n        let controller = new AbortController();\r\n\r\n        if(service !== undefined){\r\n            (async () =>{\r\n                try{\r\n                    const doctors = await fetchDoctors()\r\n                    setDoctors(doctors)\r\n                    const doctorSelect = document.querySelector('#doctorr');\r\n                    doctorSelect.disabled = false;\r\n                    controller = null;\r\n                }catch (e){\r\n                    console.log(e);\r\n                    setRedirect(true);\r\n                }\r\n\r\n            })();\r\n            return () => controller?.abort();\r\n        }\r\n    },[service])\r\n\r\n    useEffect(()=>{\r\n        if(receivedReferral !== undefined){\r\n            setSelectedReferral(receivedReferral);\r\n            let element = document.getElementById('selectedReferral');\r\n            element.value = receivedReferral;\r\n            if(receivedReferral.medicalService.facilityService === true){\r\n                setAppointmentType('facility');\r\n                const radioBtnFacility = document.querySelector('#facility');\r\n                radioBtnFacility.checked = true;\r\n            }else{\r\n                setAppointmentType('phone');\r\n                const radioBtnPhone = document.querySelector('#phone');\r\n                radioBtnPhone.checked = true;\r\n            }\r\n            receivedReferral.medicalService.name = t(receivedReferral.medicalService.name)\r\n            setService(receivedReferral.medicalService);\r\n            const serviceSelect = document.querySelector('#selectService');\r\n            serviceSelect.disabled = true;\r\n        }\r\n\r\n    },[receivedReferral])\r\n\r\n    useEffect(()=>{\r\n        if(selectedReferral !== undefined){\r\n            let element = document.getElementById('selectedReferral');\r\n            element.value = selectedReferral;\r\n            if(selectedReferral.medicalService.facilityService === true){\r\n                setAppointmentType('facility');\r\n                const radioBtnFacility = document.querySelector('#facility');\r\n                radioBtnFacility.checked = true;\r\n                radioBtnFacility.disabled = true;\r\n                const radioBtnPhone = document.querySelector('#phone');\r\n                radioBtnPhone.disabled = true;\r\n            }else{\r\n                setAppointmentType('phone');\r\n                const radioBtnPhone = document.querySelector('#phone');\r\n                radioBtnPhone.checked = true;\r\n                radioBtnPhone.disabled = true;\r\n                const radioBtnFacility = document.querySelector('#facility');\r\n                radioBtnFacility.disabled = true;\r\n            }\r\n            setService(selectedReferral.medicalService);\r\n            const serviceSelect = document.querySelector('#selectService');\r\n            serviceSelect.disabled = true;\r\n        }\r\n\r\n    }, [selectedReferral])\r\n\r\n    useEffect(()=>{\r\n        let controller = new AbortController();\r\n\r\n        (async () =>{\r\n            const formatYmd = date => date.toISOString().slice(0, 10);\r\n            try{\r\n                const referrals = await fetchReferrals()\r\n                const availableReferrals = referrals.referrals.filter(ref=>(formatYmd(new Date(ref.expiryDate)) >= formatYmd(new Date())));\r\n                availableReferrals.forEach(referral => {\r\n                    referral.medicalService.name = t(referral.medicalService.name)\r\n                })\r\n                setReferrals(availableReferrals);\r\n                controller = null;\r\n            }catch (e){\r\n                console.log(e)\r\n                setRedirect(true);\r\n            }\r\n        })();\r\n        return () => controller?.abort();\r\n    }, [])\r\n\r\n\r\n    const fetchReferrals = async () =>{\r\n        const res = await fetch(`${baseUrl}/patients/${userId}/referrals?size=100`,{\r\n            headers: {'Authorization' : `Bearer ${userToken}`}\r\n        });\r\n\r\n        if(res.status === 403){\r\n            setRedirect(true);\r\n        }\r\n\r\n        const data = await res.json();\r\n\r\n        return data;\r\n    }\r\n\r\n    const fetchDoctors = async () =>{\r\n        let res;\r\n        if(language === 'polski'){\r\n            res = await fetch(`${baseUrl}/doctors/services?language=PL&medicalServiceId=${service.id}`,{\r\n                headers: {'Authorization' : `Bearer ${userToken}`}\r\n            });\r\n            if(res.status === 403){\r\n                setRedirect(true);\r\n            }\r\n        }else{\r\n            res = await fetch(`${baseUrl}/doctors/services?language=EN&medicalServiceId=${service.id}`,{\r\n                headers: {'Authorization' : `Bearer ${userToken}`}\r\n            });\r\n            if(res.status === 403){\r\n                setRedirect(true);\r\n            }\r\n        }\r\n\r\n        const data = await res.json();\r\n\r\n        return data;\r\n    }\r\n\r\n    const fetchServices = async (type) =>{\r\n        let res;\r\n        if(type === true){\r\n            res = await fetch(`${baseUrl}/medicalServices?type=FACILITY`,{\r\n                headers: {'Authorization' : `Bearer ${userToken}`}\r\n            });\r\n            if(res.status === 403){\r\n                setRedirect(true);\r\n            }\r\n        }else{\r\n            res = await fetch(`${baseUrl}/medicalServices?type=TELEPHONE`,{\r\n                headers: {'Authorization' : `Bearer ${userToken}`}\r\n            });\r\n            if(res.status === 403){\r\n                setRedirect(true);\r\n            }\r\n        }\r\n\r\n        const data = await res.json();\r\n\r\n        return data;\r\n    }\r\n\r\n\r\n    const findFormErrors = () =>{\r\n        const newErrors = {};\r\n        if(appointmentType === undefined){\r\n            newErrors.appType = t(\"appointmentTypeError\");\r\n        }\r\n\r\n        if(service === undefined){\r\n            newErrors.serviceMess = t(\"serviceError\");\r\n        }\r\n\r\n        return newErrors;\r\n    }\r\n\r\n    const clearReferralFields = (e) =>{\r\n        e.preventDefault();\r\n        setSelectedReferral(undefined);\r\n        setReceivedReferral(undefined);\r\n        setAppointmentType(undefined);\r\n        const radioBtnFacility = document.querySelector('#facility');\r\n        radioBtnFacility.checked = false;\r\n        radioBtnFacility.disabled = false;\r\n        const radioBtnPhone = document.querySelector('#phone');\r\n        radioBtnPhone.checked = false;\r\n        radioBtnPhone.disabled = false;\r\n        setService(undefined);\r\n        const serviceSelect = document.querySelector('#selectService');\r\n        serviceSelect.disabled = false;\r\n        setServices([]);\r\n        setDoctors([]);\r\n    }\r\n\r\n    const clearService = (e) =>{\r\n        if(selectedReferral === undefined){\r\n            e.preventDefault();\r\n            setService(undefined);\r\n            setDoctors([]);\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n\r\n        const errors = findFormErrors();\r\n\r\n        if(Object.keys(errors).length > 0){\r\n            setErrors(errors)\r\n        }else{\r\n            if(doctor !== undefined){\r\n                if(selectedReferral !== undefined){\r\n                    getAppointments(appointmentType, language, service, doctor, dateFrom, dateTo, selectedReferral);\r\n                }else{\r\n                    getAppointments(appointmentType, language, service, doctor, dateFrom, dateTo, null);\r\n                }\r\n            }else{\r\n                if(selectedReferral !== undefined){\r\n                    getAppointments(appointmentType, language, service, null,  dateFrom, dateTo, selectedReferral);\r\n                }else{\r\n                    getAppointments(appointmentType, language, service, null,  dateFrom, dateTo, null);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if(redirect === true){\r\n        logout(history);\r\n        return (\r\n            <></>\r\n        )\r\n    }else {\r\n        return (\r\n            <Form className=\"newAppointmentForm\">\r\n                <Form.Group className=\"mb-3\">\r\n                    <Form.Label>{t(\"appointmentType\")}</Form.Label>\r\n                    <Form.Check type=\"radio\" name=\"type\" id=\"facility\" label={t(\"facility\")} onClick={(e) => {\r\n                        setAppointmentType('facility');\r\n                        if (!!errors['appType'])\r\n                            setErrors({\r\n                                ...errors,\r\n                                ['appType']: null\r\n                            })\r\n                    }} isInvalid={!!errors.appType}/>\r\n                    <Form.Check type=\"radio\" name=\"type\" id=\"phone\" label={t(\"teleconsultation\")} onClick={(e) => {\r\n                        setAppointmentType('phone');\r\n                        if (!!errors['appType'])\r\n                            setErrors({\r\n                                ...errors,\r\n                                ['appType']: null\r\n                            })\r\n                    }} isInvalid={!!errors.appType}/>\r\n                    <Form.Control.Feedback type='invalid'>{errors.appType}</Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Row className=\"align-items-center mb-3\">\r\n                    <Col>\r\n                        <Form.Group>\r\n                            <Form.Label>{t(\"language\")}:</Form.Label>\r\n                            <Form.Select id='selectedLanguage'>\r\n                                {languages.map((lang) => (\r\n                                    <option value={lang} onClick={(e) => setLanguage(lang)}>{lang}</option>\r\n                                ))}\r\n                            </Form.Select>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group>\r\n                            <Form.Label>{t(\"referral\")}:</Form.Label>\r\n                            <Form.Select id='selectedReferral' defaultValue={receivedReferral}>\r\n\r\n                                {!receivedReferral &&\r\n                                <>\r\n                                    <option onClick={e => {\r\n                                        clearReferralFields(e)\r\n                                    }} value=\"0\">{t(\"useReferral\")}</option>\r\n                                    {referrals.map((ref) => (\r\n                                        <option value={ref} key={ref.id} onClick={(e) => {\r\n                                            setSelectedReferral(ref)\r\n                                            setErrors({\r\n                                                ['serviceMess']: null,\r\n                                                ['appType']: null\r\n                                            })\r\n                                        }}>{ref.medicalService ? (t(\"dueTo\") + \" \" + ref.expiryDate + ' - ' + ref.medicalService.name) : ''}</option>\r\n                                    ))}\r\n                                </>\r\n                                }\r\n\r\n                                {receivedReferral &&\r\n                                <>\r\n                                    <option\r\n                                        value={receivedReferral}>{(t(\"dueTo\") + \" \" + receivedReferral.expiryDate + ' - ' + receivedReferral.medicalService.name)}</option>\r\n                                    <option onClick={e => {\r\n                                        clearReferralFields(e)\r\n                                    }} value=\"0\">{t(\"useReferral\")}</option>\r\n\r\n                                    {referrals.filter(ref => ref.id !== receivedReferral.id).map((ref) => (\r\n                                        <option value={ref} key={ref.id} onClick={(e) => {\r\n                                            setSelectedReferral(ref)\r\n                                            setErrors({\r\n                                                ['serviceMess']: null,\r\n                                                ['appType']: null\r\n                                            })\r\n                                        }}>{ref.medicalService ? (t(\"dueTo\") + \" \" + ref.expiryDate + ' - ' + ref.medicalService.name) : ''}</option>\r\n                                    ))}\r\n                                </>\r\n                                }\r\n                            </Form.Select>\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                <Form.Group className=\"mb-3\">\r\n                    <Form.Label>{t(\"service\")}</Form.Label>\r\n                    <Form.Select id='selectService' isInvalid={!!errors.serviceMess}>\r\n                        <option\r\n                            onClick={e => clearService(e)}>{selectedReferral ? selectedReferral.medicalService.name : t(\"chooseService\")}</option>\r\n                        {services.map((ser) => (\r\n                            <option value={ser.name} onClick={(e) => {\r\n                                setService(ser);\r\n                                if (!!errors['serviceMess'])\r\n                                    setErrors({\r\n                                        ...errors,\r\n                                        ['serviceMess']: null\r\n                                    })\r\n                            }}>{ser.name}</option>\r\n                        ))}\r\n                    </Form.Select>\r\n                    <Form.Control.Feedback type='invalid'>{errors.serviceMess}</Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\">\r\n                    <Form.Label>{t(\"doctor\")}</Form.Label>\r\n                    <Form.Select id='doctorr'>\r\n                        <option value=\"0\">{t(\"chooseDoctor\")}</option>\r\n                        {doctors.map((doc) => (\r\n                            <option value={doc.firstName + ' ' + doc.lastName}\r\n                                    onClick={(e) => setSelectedDoctor(doc)}>{doc.firstName + ' ' + doc.lastName}</option>\r\n                        ))}\r\n                    </Form.Select>\r\n                </Form.Group>\r\n                <Row className=\"align-items-center mb-3\">\r\n                    <Col>\r\n                        <Form.Group>\r\n                            <Form.Label>{t(\"dateFrom\")}</Form.Label>\r\n                            <Form.Control type='date' placeholder={t(\"dateFrom\")} value={dateFrom}\r\n                                          onChange={(e) => setDateFrom(e.target.value)}/>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group>\r\n                            <Form.Label>{t(\"dateTo\")}</Form.Label>\r\n                            <Form.Control type='date' placeholder={t(\"dateTo\")} value={dateTo}\r\n                                          onChange={(e) => setDateTo(e.target.value)}/>\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                <div style={{display: \"flex\", justifyContent: 'center'}}>\r\n                    <Button variant='primary' onClick={e => handleSubmit(e)}>{t(\"searchAppointment\")}</Button>\r\n                </div>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(NewAppointmentForm);\r\n","import React, {useState, useEffect} from \"react\";\r\n\r\nconst AvailableAppointment = ({appointment, setOpenModal, setSelectedAppointment, t}) =>{\r\n    const [app, setApp] = useState(appointment);\r\n    let x = (new Date()).getTimezoneOffset() * 60000;\r\n\r\n    useEffect(()=>{\r\n        if(appointment !== undefined){\r\n            setApp(appointment);\r\n        }\r\n    },[appointment])\r\n\r\n    const handleClick = (e) =>{\r\n        e.preventDefault();\r\n        setSelectedAppointment(app);\r\n        setOpenModal(true);\r\n    }\r\n\r\n    return(\r\n        <div className='availableAppointment' title={t(\"chooseAppointment\")}>\r\n            <div className=\"availableAppointmentDate\">\r\n                <p>{new Date(new Date(app.date)-x).toISOString().slice(0,10)}</p>\r\n                <p>{new Date(new Date(app.date)-x).toISOString().slice(11,16)}</p>\r\n            </div>\r\n            <div className=\"availableAppointmentDoctor\">\r\n                <p>{appointment.doctor ? t(\"doctorTitle\")+ ' ' + appointment.doctor.firstName + ' '+ appointment.doctor.lastName : t(\"medicalStaff\")}</p>\r\n            </div>\r\n            <div className=\"availableAppointmentBtn\">\r\n                <button className=\"actionButton\" onClick={(e)=>handleClick(e)}>{t(\"reserve\")}</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AvailableAppointment;","import React, {useState, useEffect} from 'react';\r\nimport {useHistory} from 'react-router';\r\nimport {baseUrl} from \"../../config/config\";\r\n\r\nconst AppointmentModal = ({selectedAppointment, setOpenModal, selectedReferral, t, logout}) => {\r\n    const [redirect, setRedirect] = useState(false);\r\n    const [userId, setUserId] = useState(()=>{\r\n        const savedUserId = JSON.parse(sessionStorage.getItem('id'));\r\n        return savedUserId || undefined;\r\n    });\r\n\r\n    const [userToken, setUserToken] = useState(()=>{\r\n        const saved = JSON.parse(sessionStorage.getItem('token'));\r\n        return saved || undefined;\r\n    });\r\n\r\n    const history = useHistory();\r\n    const [appointment, setAppointment] = useState(selectedAppointment);\r\n    const [referral, setReferral] = useState(selectedReferral);\r\n    let x = (new Date()).getTimezoneOffset() * 60000;\r\n\r\n    useEffect(()=>{\r\n        if(selectedAppointment !== undefined){\r\n            setAppointment(selectedAppointment);\r\n\r\n        }\r\n    }, [selectedAppointment])\r\n\r\n    useEffect(()=>{\r\n        if(selectedReferral !== undefined){\r\n            setReferral(selectedReferral);\r\n        }\r\n    },[selectedReferral])\r\n\r\n    const bookAnAppointment = (e) =>{\r\n        e.preventDefault();\r\n\r\n        const formatYmd = date => date.toISOString().slice(0, 10);\r\n        let data;\r\n        if(referral !== null){\r\n            data = {\r\n                patientId : userId,\r\n                referralId : referral.id\r\n            }\r\n        }else{\r\n            data = {\r\n                patientId : userId\r\n            }\r\n        }\r\n\r\n        if(formatYmd(new Date()) === new Date(new Date(appointment.date)-x).toISOString().slice(0,10)){\r\n            data = {\r\n                ...data,\r\n                confirmed : true\r\n            };\r\n        }\r\n\r\n        fetch(`${baseUrl}/appointments/${selectedAppointment.id}/reserve`,{\r\n            method: 'PATCH',\r\n            headers:{\r\n                'Content-Type': 'application/json',\r\n                'Authorization' : `Bearer ${userToken}`\r\n            },\r\n            body: JSON.stringify(data),\r\n        }).then((res) => {\r\n            if(res.status === 403){\r\n                setRedirect(true);\r\n            }else{\r\n                window.alert(t(\"appointmentReserved\"))\r\n            }\r\n            res.json()\r\n        }).then(history.push({\r\n                pathname : '/appointments'\r\n            })).catch((err)=> console.log(err));\r\n    }\r\n\r\n    const formatYmd = date => date.toISOString().slice(0, 10);\r\n\r\n    if(redirect === true){\r\n        logout(history);\r\n        return (\r\n            <></>\r\n        )\r\n    }else {\r\n        return (\r\n            <div className=\"modalBackground\">\r\n                <div className=\"modalContainer\">\r\n                    <div className=\"titleCloseBtn\">\r\n                        <button onClick={() => setOpenModal(false)}> X</button>\r\n                    </div>\r\n                    <div className=\"modalTitle\">\r\n                        <h2>{t(\"confirmAppointment\")}</h2>\r\n                        <hr/>\r\n                    </div>\r\n                    <div className=\"modalBody\">\r\n                        <div className=\"modalSection\">\r\n                            <p>{t(\"date\")}</p>\r\n                            <p>{new Date(new Date(appointment.date) - x).toISOString().slice(0, 10)}</p>\r\n                        </div>\r\n                        <div className=\"modalSection\">\r\n                            <p>{t(\"hour\")}</p>\r\n                            <p>{new Date(new Date(appointment.date) - x).toISOString().slice(11, 16)}</p>\r\n                        </div>\r\n                        <div className=\"modalSection\">\r\n                            <p>{t(\"appointmentType\")}</p>\r\n                            <p>{appointment.type === 'FACILITY' ? t(\"facility\") : t(\"teleconsultation\")}</p>\r\n                        </div>\r\n                        <div className=\"modalSection\">\r\n                            <p>{t(\"service\")}</p>\r\n                            <p>{t(appointment.service.name)}</p>\r\n                        </div>\r\n                        {appointment.doctor && <div className=\"modalSection\">\r\n                            <p>{t(\"doctor\")}</p>\r\n                            <p>{appointment.doctor.firstName + ' ' + appointment.doctor.lastName}</p>\r\n                        </div>}\r\n                        {referral !== null && <div className=\"modalSection\">\r\n                            <p>{t(\"usedReferral\")}</p>\r\n                            <p>{referral ? t(\"yes\") : t(\"no\")}</p>\r\n                        </div>}\r\n                        {(new Date(new Date(appointment.date) - x).toISOString().slice(0, 10) === (formatYmd(new Date()))) &&\r\n                        <div className=\"warning\">\r\n                            <p>{t(\"appointmentAutoConfirm\")}</p>\r\n                        </div>}\r\n                        <div className=\"modalFooter\">\r\n                            <button onClick={() => setOpenModal(false)} className=\"cancelButton\">{t(\"cancel\")}</button>\r\n                            <button onClick={(e) => bookAnAppointment(e)}>{t(\"confirm\")}</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default AppointmentModal;\r\n","import React from \"react\";\r\nimport {useState, useEffect} from \"react\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {useHistory} from \"react-router\";\r\nimport \"react-datepicker/dist/react-datepicker.css\"\r\nimport NewAppointmentForm from \"./NewAppointmentForm\";\r\nimport AvailableAppointment from \"./AvailableAppointment\";\r\nimport AppointmentModal from \"./AppointmentModal\";\r\nimport {baseUrl} from \"../../config/config\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\n\r\nconst NewAppointment = ({t, logout}) =>{\r\n    const history = useHistory();\r\n    const [redirect, setRedirect] = useState(false);\r\n    const [userToken, setUserToken] = useState(()=>{\r\n        const saved = JSON.parse(sessionStorage.getItem('token'));\r\n        return saved || undefined;\r\n    });\r\n\r\n    const [appointments, setAppointments] = useState([]);\r\n    const [receivedService, setReceivedService] = useState(undefined);\r\n    const [selectedAppointment, setSelectedAppointment] = useState(undefined);\r\n    const [selectedReferral, setSelectedReferral] = useState(undefined);\r\n    const [openModal, setOpenModal] = useState(false);\r\n    const [dateFrom, setDateFrom] = useState(undefined);\r\n    const [dateTo, setDateTo] = useState(undefined);\r\n    const [doctor, setDoctor] = useState(undefined);\r\n    const [language, setLanguage] = useState(undefined);\r\n\r\n    const pageSizes = [3, 5, 10];\r\n    const [page, setPage] = useState(1);\r\n    const [count, setCount] = useState(0);\r\n    const [pageSize, setPageSize] = useState(pageSizes[0]);\r\n\r\n    const getRequestParams = (page, pageSize) =>{\r\n        let params = {};\r\n\r\n        if(page){\r\n            params[\"page\"] = page - 1;\r\n        }\r\n        if(pageSize){\r\n            params[\"size\"] = pageSize;\r\n        }\r\n        return params;\r\n    }\r\n\r\n    const handleAppointmentSearch = (appointmentType, language, service, doctor, dateFrom, dateTo, selectedReferral) =>{\r\n        setReceivedService(service);\r\n        setSelectedReferral(selectedReferral);\r\n        setDateFrom(dateFrom);\r\n        setDateTo(dateTo);\r\n        setDoctor(doctor);\r\n        if(language==='polski'){\r\n            setLanguage(\"PL\");\r\n        }else{\r\n            setLanguage(\"EN\");\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(receivedService !== undefined){\r\n            const getAvailableAppointments = async () =>{\r\n                const apps = await fetchAppointments();\r\n                setAppointments(apps.appointments)\r\n                setCount(apps.totalPages);\r\n            }\r\n\r\n            getAvailableAppointments()\r\n        }\r\n    },[receivedService, page, pageSize])\r\n\r\n    useEffect(()=>{\r\n        if(selectedAppointment!==undefined){\r\n            setSelectedAppointment(selectedAppointment)\r\n        }\r\n    }, [selectedAppointment])\r\n\r\n    const fetchAppointments = async ()=>{\r\n        const params = getRequestParams(page, pageSize);\r\n        let time = new Date().toString().slice(16,24);\r\n        let res;\r\n        if(doctor!==null){\r\n            if(params.page !== null && params.size !== null){\r\n                res = await fetch(`${baseUrl}/appointments?medicalServiceId=${receivedService.id}&doctorId=${doctor.id}&dateFrom=${dateFrom}T${time}&dateTo=${dateTo}T23:59:00&language=${language}&page=${params.page}&size=${params.size}`,{\r\n                    headers: {'Authorization' : `Bearer ${userToken}`}\r\n                });\r\n                if(res.status === 403){\r\n                    setRedirect(true);\r\n                }\r\n\r\n            }else if(params.page !== null && params.size === null){\r\n                res = await fetch(`${baseUrl}/appointments?medicalServiceId=${receivedService.id}&doctorId=${doctor.id}&dateFrom=${dateFrom}T${time}&dateTo=${dateTo}T23:59:00&language=${language}&page=${params.page}`,{\r\n                    headers: {'Authorization' : `Bearer ${userToken}`}\r\n                });\r\n                if(res.status === 403){\r\n                    setRedirect(true);\r\n                }\r\n            }else if(params.page === null && params.size !== null){\r\n                res = await fetch(`${baseUrl}/appointments?medicalServiceId=${receivedService.id}&doctorId=${doctor.id}&dateFrom=${dateFrom}T${time}&dateTo=${dateTo}T23:59:00&language=${language}&size=${params.size}`,{\r\n                    headers: {'Authorization' : `Bearer ${userToken}`}\r\n                });\r\n                if(res.status === 403){\r\n                    setRedirect(true);\r\n                }\r\n            }else{\r\n                res = await fetch(`${baseUrl}/appointments?medicalServiceId=${receivedService.id}&doctorId=${doctor.id}&dateFrom=${dateFrom}T${time}&dateTo=${dateTo}T23:59:00&language=${language}`,{\r\n                    headers: {'Authorization' : `Bearer ${userToken}`}\r\n                });\r\n                if(res.status === 403){\r\n                    setRedirect(true);\r\n                }\r\n            }\r\n        }else{\r\n            if(params.page !== null && params.size !== null){\r\n                res = await fetch(`${baseUrl}/appointments?medicalServiceId=${receivedService.id}&dateFrom=${dateFrom}T${time}&dateTo=${dateTo}T23:59:00&language=${language}&page=${params.page}&size=${params.size}`,{\r\n                    headers: {'Authorization' : `Bearer ${userToken}`}\r\n                });\r\n                if(res.status === 403){\r\n                    setRedirect(true);\r\n                }\r\n\r\n            }else if(params.page !== null && params.size === null){\r\n                res = await fetch(`${baseUrl}/appointments?medicalServiceId=${receivedService.id}&dateFrom=${dateFrom}T${time}&dateTo=${dateTo}T23:59:00&language=${language}&page=${params.page}`,{\r\n                    headers: {'Authorization' : `Bearer ${userToken}`}\r\n                });\r\n                if(res.status === 403){\r\n                    setRedirect(true);\r\n                }\r\n\r\n            }else if(params.page === null && params.size !== null){\r\n                res = await fetch(`${baseUrl}/appointments?medicalServiceId=${receivedService.id}&dateFrom=${dateFrom}T${time}&dateTo=${dateTo}T23:59:00&language=${language}&size=${params.size}`,{\r\n                    headers: {'Authorization' : `Bearer ${userToken}`}\r\n                });\r\n                if(res.status === 403){\r\n                    setRedirect(true);\r\n                }\r\n\r\n            }else{\r\n                res = await fetch(`${baseUrl}/appointments?medicalServiceId=${receivedService.id}&dateFrom=${dateFrom}T${time}&dateTo=${dateTo}T23:59:00&language=${language}`,{\r\n                    headers: {'Authorization' : `Bearer ${userToken}`}\r\n                });\r\n                if(res.status === 403){\r\n                    setRedirect(true);\r\n                }\r\n            }\r\n        }\r\n        const data = await res.json();\r\n\r\n        return data;\r\n    }\r\n\r\n    const handlePageChange = (event, value) => {\r\n        setPage(value);\r\n    };\r\n\r\n    const handlePageSizeChange = (event) => {\r\n        setPageSize(event.target.value);\r\n        setPage(1);\r\n    };\r\n\r\n\r\n    if(redirect === true){\r\n        logout(history);\r\n        return (\r\n            <></>\r\n        )\r\n    }else {\r\n        return (\r\n            <div className=\"itemsList\">\r\n                <div className=\"listHeader\">\r\n                    <h2>{t(\"newAppointment\")}</h2>\r\n                </div>\r\n                <NewAppointmentForm getAppointments={handleAppointmentSearch} t={t} logout={logout}/>\r\n                <>\r\n                    {appointments.length > 0 &&\r\n                    <>\r\n                        <h3 style={{fontFamily: 'Montserrat, sans-serif'}}>{t(\"availableAppointments\")}</h3>\r\n                        <div className=\"itemsNumber availableAppsPagination\">\r\n                            <p>{t(\"elementsNumber\")}&nbsp;</p>\r\n                            <select onChange={handlePageSizeChange} value={pageSize}>\r\n                                {pageSizes.map((size) => (\r\n                                    <option key={size} value={size}>\r\n                                        {size}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                    </>\r\n\r\n                    }\r\n                    {appointments.length > 0 ?\r\n                        (appointments.map((app) => (\r\n                            <AvailableAppointment key={app.id} appointment={app} setOpenModal={setOpenModal}\r\n                                                  setSelectedAppointment={setSelectedAppointment} t={t}/>\r\n                        ))) : (receivedService !== undefined ? t(\"noAppointments\") : '')}\r\n                    {appointments.length > 0 &&\r\n                    <Pagination className=\"my-3\" count={count} page={page} siblingCount={1} boundaryCount={1}\r\n                                shape=\"rounded\" onChange={handlePageChange}/>\r\n                    }\r\n                    {(openModal && selectedAppointment !== undefined) ?\r\n                        <AppointmentModal selectedAppointment={selectedAppointment} setOpenModal={setOpenModal}\r\n                                          selectedReferral={selectedReferral} t={t} logout={logout}/> : ''}\r\n                </>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(NewAppointment);","import React from \"react\";\r\nimport {useHistory} from 'react-router';\r\nimport {useState, useEffect} from \"react\";\r\n\r\nconst Referral = ({referral, setSelectedReferral, t}) =>{\r\n    const history = useHistory();\r\n    const [ref, setRef] = useState(referral);\r\n    const formatYmd = date => date.toISOString().slice(0, 10);\r\n\r\n    useEffect(()=>{\r\n        if(referral !== undefined){\r\n            setRef(referral);\r\n        }\r\n    },[referral])\r\n\r\n    const handleClick = (e)=>{\r\n        e.preventDefault();\r\n        setSelectedReferral(referral);\r\n\r\n        history.push({\r\n            pathname: '/new-appointment',\r\n            state: ref\r\n        });\r\n    }\r\n\r\n    return(\r\n        <div className=\"referral\">\r\n            <div className=\"referralDiv1\">\r\n                <p className=\"referralHeader\">{t(ref.medicalService.name)}</p>\r\n            </div>\r\n            <div className=\"referralDiv2\">\r\n                <p>{t(\"issueDate\")}&nbsp;{ref.issueDate}</p>\r\n                <p>{t(\"referralValidUntil\")}&nbsp;{ref.expiryDate}</p>\r\n            </div>\r\n            <hr/>\r\n            <div style={{display: 'flex' ,justifyContent: 'flex-end'}}>\r\n                {formatYmd(new Date(ref.expiryDate))>= formatYmd(new Date()) ?\r\n                <button className=\"actionButton\" onClick={(e) => handleClick(e)}>{t(\"makeAppointment\")}</button>\r\n               : <p style={{color : 'red'}}>{t(\"referralInvalid\")}</p> }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Referral","import React, {useState, useEffect} from \"react\";\r\nimport {useHistory} from \"react-router\";\r\nimport Referral from \"./Referral\";\r\nimport {baseUrl} from \"../../config/config\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\n\r\nconst ReferralList = ({t, logout}) =>{\r\n    const history = useHistory();\r\n    const [userId, setUserId] = useState(()=>{\r\n        const saved = JSON.parse(sessionStorage.getItem('id'));\r\n        return saved || undefined;\r\n    });\r\n    const [userToken, setUserToken] = useState(()=>{\r\n        const saved = JSON.parse(sessionStorage.getItem('token'));\r\n        return saved || undefined;\r\n    });\r\n\r\n    const [referrals, setReferrals] = useState([]);\r\n    const [selectedReferral, setSelectedReferral] = useState(undefined);\r\n\r\n    const pageSizes = [3, 5, 10];\r\n    const [page, setPage] = useState(1);\r\n    const [count, setCount] = useState(0);\r\n    const [pageSize, setPageSize] = useState(pageSizes[0]);\r\n\r\n    const [redirect, setRedirect] = useState(false);\r\n\r\n    const getRequestParams = (page, pageSize) =>{\r\n        let params = {};\r\n\r\n        if(page){\r\n            params[\"page\"] = page - 1;\r\n        }\r\n        if(pageSize){\r\n            params[\"size\"] = pageSize;\r\n        }\r\n        return params;\r\n    }\r\n\r\n    useEffect(() =>{\r\n        let controller = new AbortController();\r\n\r\n        (async () =>{\r\n            try{\r\n                const referrals = await fetchReferrals()\r\n                setReferrals(referrals.referrals)\r\n                setCount(referrals.totalPages)\r\n                controller = null;\r\n            }catch (e){\r\n                console.log(e)\r\n                setRedirect(true);\r\n            }\r\n        })();\r\n        return () =>controller?.abort();\r\n\r\n    },[page, pageSize])\r\n\r\n    useEffect(()=>{\r\n        if(selectedReferral!==undefined) {\r\n            setReferrals(referrals.filter(filterReferrals));\r\n\r\n        }\r\n    },[selectedReferral])\r\n\r\n\r\n    const fetchReferrals = async() => {\r\n        const params = getRequestParams(page, pageSize);\r\n        let res;\r\n        if(params.page !== null && params.size !== null){\r\n            res = await fetch(`${baseUrl}/patients/${userId}/referrals?page=${params.page}&size=${params.size}`,{\r\n                headers: {'Authorization' : `Bearer ${userToken}`}\r\n            })\r\n            if(res.status === 403){\r\n                setRedirect(true);\r\n            }\r\n\r\n        }else if(params.page !== null && params.size === null){\r\n            res = await fetch(`${baseUrl}/patients/${userId}/referrals?page=${params.page}`,{\r\n                headers: {'Authorization' : `Bearer ${userToken}`}\r\n            })\r\n            if(res.status === 403){\r\n                setRedirect(true);\r\n        }\r\n        }else if(params.page === null && params.size !== null){\r\n            res = await fetch(`${baseUrl}/patients/${userId}/referrals?size=${params.size}`,{\r\n                headers: {'Authorization' : `Bearer ${userToken}`}\r\n            })\r\n            if(res.status === 403){\r\n                setRedirect(true)\r\n        }\r\n        }else{\r\n            res = await fetch(`${baseUrl}/patients/${userId}/referrals`,{\r\n                headers: {'Authorization' : `Bearer ${userToken}`}\r\n            })\r\n            if(res.status === 403){\r\n                setRedirect(true)\r\n            }\r\n        }\r\n\r\n        const data = await res.json()\r\n\r\n        return data\r\n    }\r\n\r\n    const filterReferrals = (referral) =>{\r\n        if(referral.id !== selectedReferral.id){\r\n            return referral;\r\n        }\r\n    }\r\n\r\n    const handlePageChange = (event, value) => {\r\n        setPage(value);\r\n    };\r\n\r\n    const handlePageSizeChange = (event) => {\r\n        setPageSize(event.target.value);\r\n        setPage(1);\r\n    };\r\n\r\n    if(redirect === true){\r\n        logout(history);\r\n        return (\r\n       <></>\r\n        )\r\n    }else{\r\n        return(\r\n            <div className=\"itemsList\">\r\n                <div className=\"listHeader\">\r\n                    <h2>{t(\"yourReferrals\")}</h2>\r\n                </div>\r\n                <div className=\"itemsNumber\">\r\n                    <p>{t(\"elementsNumber\")}&nbsp;</p>\r\n                    <select onChange={handlePageSizeChange} value={pageSize}>\r\n                        {pageSizes.map((size) => (\r\n                            <option key={size} value={size}>\r\n                                {size}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n\r\n                {referrals.map((referral) =>(\r\n                    <Referral key={referral.id} referral={referral} setSelectedReferral={setSelectedReferral} t={t}/>\r\n                ))}\r\n                <Pagination className=\"my-3\" count={count} page={page} siblingCount={1} boundaryCount={1} shape=\"rounded\" onChange={handlePageChange}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ReferralList","import * as React from 'react';\r\nimport {useEffect, useState} from \"react\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {Scheduler , WeekView, Appointments, Toolbar, DateNavigator, TodayButton } from '@devexpress/dx-react-scheduler-material-ui';\r\nimport { ViewState } from '@devexpress/dx-react-scheduler';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { fade } from '@material-ui/core/styles/colorManipulator';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    todayCell: {\r\n        backgroundColor: fade(theme.palette.primary.main, 0.1),\r\n        '&:hover': {\r\n            backgroundColor: fade(theme.palette.primary.main, 0.14),\r\n        },\r\n        '&:focus': {\r\n            backgroundColor: fade(theme.palette.primary.main, 0.16),\r\n        },\r\n    },\r\n    weekendCell: {\r\n        backgroundColor: fade(theme.palette.action.disabledBackground, 0.04),\r\n        '&:hover': {\r\n            backgroundColor: fade(theme.palette.action.disabledBackground, 0.04),\r\n        },\r\n        '&:focus': {\r\n            backgroundColor: fade(theme.palette.action.disabledBackground, 0.04),\r\n        },\r\n    },\r\n    today: {\r\n        backgroundColor: fade(theme.palette.primary.main, 0.16),\r\n    },\r\n    weekend: {\r\n        backgroundColor: fade(theme.palette.action.disabledBackground, 0.06),\r\n    },\r\n}));\r\n\r\nconst TimeTableCell = (props) => {\r\n    const classes = useStyles();\r\n    const { startDate } = props;\r\n    const date = new Date(startDate);\r\n\r\n    if (date.getDate() === new Date().getDate()) {\r\n        return <WeekView.TimeTableCell {...props} className={classes.todayCell} />;\r\n    } if (date.getDay() === 0 || date.getDay() === 6) {\r\n        return <WeekView.TimeTableCell {...props} className={classes.weekendCell} />;\r\n    } return <WeekView.TimeTableCell {...props} />;\r\n};\r\n\r\nconst DayScaleCell = (props) => {\r\n    const classes = useStyles();\r\n    const { startDate, today } = props;\r\n\r\n    if (today) {\r\n        return <WeekView.DayScaleCell {...props} className={classes.today} />;\r\n    } if (startDate.getDay() === 0 || startDate.getDay() === 6) {\r\n        return <WeekView.DayScaleCell {...props} className={classes.weekend} />;\r\n    } return <WeekView.DayScaleCell {...props} />;\r\n};\r\n\r\nconst Schedule = ({schedule}) =>{\r\n\r\n    const [appointments, setAppointments] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        if(schedule !== undefined){\r\n            let processedAppointments = convertAppointments(schedule);\r\n            setAppointments(processedAppointments);\r\n        }\r\n    },[schedule])\r\n\r\n    function convertDate(date){\r\n        let year, month, day, hours, minutes;\r\n        year = date.substring(0, 4)-0;\r\n        month = date.substring(5,7)-1;\r\n        day = date.substring(8,10)-0;\r\n        hours = date.substring(11,13)-0;\r\n        minutes = date.substring(14,16)-0;\r\n\r\n        return new Date(year, month, day, hours, minutes);\r\n    }\r\n\r\n    function convertAppointments(schedule){\r\n        let properAppointments = [];\r\n\r\n        Object.entries(schedule).forEach((([key,value])=>Object.entries(value)\r\n            .forEach(([key,value])=>{\r\n                let date = new Object();\r\n                date[\"startDate\"] = convertDate(value.startDate);\r\n                date[\"endDate\"] = convertDate(value.endDate);\r\n                properAppointments.push(date);\r\n            })))\r\n\r\n        return properAppointments;\r\n    }\r\n\r\n    return(\r\n        <Paper>\r\n            <Scheduler data={appointments} firstDayOfWeek={1} locale='pl-PL'>\r\n                <ViewState/>\r\n                <WeekView\r\n                    startDayHour={8}\r\n                    endDayHour={18}\r\n                    timeTableCellComponent={TimeTableCell}\r\n                    dayScaleCellComponent={DayScaleCell}\r\n                />\r\n                <Toolbar/>\r\n                <DateNavigator/>\r\n                <TodayButton/>\r\n                <Appointments/>\r\n            </Scheduler>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default Schedule;","import React from \"react\";\r\nimport {useState, useEffect, useRef} from 'react';\r\nimport {useHistory} from \"react-router\";\r\nimport {Col, Row} from \"react-bootstrap\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Schedule from \"./Schedule\";\r\nimport {baseUrl} from \"../../config/config\";\r\n\r\nconst ScheduleForm = ({t, logout}) =>{\r\n    const history = useHistory();\r\n    const [userToken, setUserToken] = useState(()=>{\r\n        const saved = JSON.parse(sessionStorage.getItem('token'));\r\n        return saved || undefined;\r\n    });\r\n\r\n    const [specializations, setSpecializations] = useState([]);\r\n    const [doctors, setDoctors] = useState([]);\r\n    const [selectedSpecialization, setSelectedSpecialization] = useState(undefined);\r\n    const [selectedDoctor, setSelectedDoctor] = useState(undefined);\r\n    const [schedule, setSchedule] = useState(undefined);\r\n    const [errors, setErrors] = useState({});\r\n    const ref = useRef();\r\n    const [redirect, setRedirect] = useState(false);\r\n\r\n    const reset = () =>{\r\n        ref.current.value = t(\"chooseDoctor\");\r\n    };\r\n\r\n    useEffect(()=>{\r\n        let controller = new AbortController();\r\n\r\n        (async () =>{\r\n            try{\r\n                const specializations = await fetchSpecializations()\r\n                specializations.forEach(spec => {\r\n                    spec.name = t(spec.name)\r\n                })\r\n                setSpecializations(specializations)\r\n                controller = null;\r\n            }catch (e){\r\n                console.log(e)\r\n                setRedirect(true);\r\n            }\r\n        })();\r\n        return () =>controller?.abort();\r\n\r\n    },[])\r\n\r\n\r\n    useEffect(()=>{\r\n        let controller = new AbortController();\r\n\r\n        if(selectedSpecialization!==undefined){\r\n            (async () =>{\r\n                try{\r\n                    const doctors = await fetchDoctors()\r\n                    setDoctors(doctors)\r\n                    controller = null;\r\n                }catch (e){\r\n                    console.log(e)\r\n                    setRedirect(true);\r\n                }\r\n            })();\r\n            return () =>controller?.abort();\r\n        }\r\n\r\n    }, [selectedSpecialization])\r\n\r\n    const fetchSpecializations = async () =>{\r\n        const res = await fetch(`${baseUrl}/specializations`,{\r\n            headers: {'Authorization' : `Bearer ${userToken}`}\r\n        })\r\n        if(res.status === 403){\r\n            setRedirect(true);\r\n        }\r\n\r\n        const data = await res.json()\r\n\r\n        return data\r\n    }\r\n\r\n    const fetchDoctors = async () =>{\r\n        const res = await fetch(`${baseUrl}/doctors/specialization?id=${selectedSpecialization.id}`,{\r\n            headers: {'Authorization' : `Bearer ${userToken}`}\r\n        })\r\n        if(res.status === 403){\r\n            setRedirect(true);\r\n        }\r\n        const data = await res.json()\r\n\r\n        return data\r\n    }\r\n\r\n    function clearSpecialization(){\r\n        setSelectedSpecialization(undefined);\r\n        setDoctors([]);\r\n        setSchedule(undefined);\r\n    }\r\n\r\n    function clearDoctor(){\r\n        setSelectedDoctor(undefined);\r\n        setSchedule(undefined);\r\n    }\r\n\r\n    const findFormErrors = () =>{\r\n        const newErrors = {};\r\n        if(selectedSpecialization === undefined){\r\n            newErrors.specialization = t(\"specializationError\");\r\n        }\r\n\r\n        if(selectedDoctor === undefined){\r\n            newErrors.doctor = t(\"doctorError\");\r\n        }\r\n\r\n        return newErrors;\r\n    }\r\n\r\n    function handleSubmit(e){\r\n        e.preventDefault();\r\n        const errors = findFormErrors();\r\n\r\n        if(Object.keys(errors).length > 0){\r\n            setErrors(errors);\r\n        }else{\r\n            fetch(`${baseUrl}/doctors/${selectedDoctor.id}/schedule?specializationId=${selectedSpecialization.id}`,{\r\n                headers: {'Authorization' : `Bearer ${userToken}`}\r\n            })\r\n                .then((res)=>res.json())\r\n                .then((obj)=>{\r\n                    setSchedule(obj)\r\n                })\r\n                .catch((err)=>console.log(err));\r\n        }\r\n    }\r\n    if(redirect === true){\r\n        logout(history);\r\n        return (\r\n            <></>\r\n        )\r\n    }else {\r\n        return (\r\n            <div className=\"itemsList\">\r\n                <div className=\"listHeader\">\r\n                    <h2>{t(\"doctorSchedule\")}</h2>\r\n                </div>\r\n                <Form className=\"newAppointmentForm\">\r\n                    <Row className=\"align-items-center mb-3\">\r\n                        <Col>\r\n                            <Form.Group>\r\n                                <Form.Label>{t(\"chooseSpecialization\")}:</Form.Label>\r\n                                <Form.Select id=\"selectedSpecialization\" isInvalid={!!errors.specialization}>\r\n                                    <option onClick={clearSpecialization}>{t(\"chooseSpecialization\")}</option>\r\n                                    {specializations.map((spec) => (\r\n                                        <option value={spec} onClick={(e) => {\r\n                                            setSelectedDoctor(undefined);\r\n                                            reset();\r\n                                            setSchedule(undefined);\r\n                                            setSelectedSpecialization(spec);\r\n\r\n                                            if (!!errors['specialization'])\r\n                                                setErrors({\r\n                                                    ...errors,\r\n                                                    ['specialization']: null\r\n                                                })\r\n                                        }}>{spec.name}</option>\r\n                                    ))}\r\n                                </Form.Select>\r\n                                <Form.Control.Feedback type='invalid'>{errors.specialization}</Form.Control.Feedback>\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"align-items-center mb-3\">\r\n                        <Col>\r\n                            <Form.Group>\r\n                                <Form.Label>{t(\"chooseDoctor\")}:</Form.Label>\r\n                                <Form.Select id=\"selectedDoctor\" isInvalid={!!errors.doctor} ref={ref}>\r\n                                    <option onClick={clearDoctor}>{t(\"chooseDoctor\")}</option>\r\n                                    {doctors.map((doc) => (\r\n                                        <option value={doc} onClick={(e) => {\r\n                                            setSelectedDoctor(doc);\r\n                                            setSchedule(undefined);\r\n                                            if (!!errors['doctor'])\r\n                                                setErrors({\r\n                                                    ...errors,\r\n                                                    ['doctor']: null\r\n                                                })\r\n                                        }}>{doc.firstName + ' ' + doc.lastName}</option>\r\n                                    ))}\r\n                                </Form.Select>\r\n                                <Form.Control.Feedback type='invalid'>{errors.doctor}</Form.Control.Feedback>\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n                    <div style={{display: \"flex\", justifyContent: 'center'}}>\r\n                        <Button variant='primary' onClick={e => handleSubmit(e)}>{t(\"showSchedule\")}</Button>\r\n                    </div>\r\n                </Form>\r\n                {(schedule !== undefined && selectedDoctor !== undefined && selectedSpecialization !== undefined) &&\r\n                <Schedule schedule={schedule}/>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ScheduleForm;\r\n","import React, {useState, useEffect} from \"react\";\r\nimport {FaRegUser, FaCheck, FaFile, FaRegListAlt} from 'react-icons/fa'\r\nimport {Button} from \"react-bootstrap\";\r\nimport {baseUrl} from \"../../config/config\";\r\n\r\nconst CheckUp = ({checkup, t}) =>{\r\n\r\n    const [userId, setUserId] = useState(()=>{\r\n        const savedUserId = JSON.parse(sessionStorage.getItem('id'));\r\n        return savedUserId || undefined;\r\n    });\r\n\r\n    const [userToken, setUserToken] = useState(()=>{\r\n        const saved = JSON.parse(sessionStorage.getItem('token'));\r\n        return saved || undefined;\r\n    });\r\n\r\n    const [state, setState] = useState(false);\r\n    const [checkUp, setChekup] = useState(checkup);\r\n\r\n    useEffect(()=>{\r\n        if(checkup !== undefined){\r\n            setChekup(checkup);\r\n        }\r\n    }, [checkup])\r\n\r\n    function togglePanel(e){\r\n        e.preventDefault();\r\n        setState(!state)\r\n    }\r\n\r\n    function handleFileDownload(e, checkup){\r\n        e.preventDefault();\r\n\r\n        fetch(`${baseUrl}/appointments/diagnosticTests?appointmentId=${checkup.appointmentId}&checkUpId=${checkup.checkUpId}`,{\r\n            headers: {'Authorization' : `Bearer ${userToken}`}\r\n        })\r\n            .then(res => res.json())\r\n            .then(res =>{\r\n                let a = window.document.createElement('a');\r\n                let byteArr = new Uint8Array(res.file);\r\n                a.href = window.URL.createObjectURL(new Blob([byteArr], {type : \"application/pdf\"}))\r\n                let date = new Date(res.appointmentDate).toISOString().slice(0,10);\r\n                a.download = t(\"checkUpFileName\") + String(date);\r\n                document.body.appendChild(a);\r\n                a.click();\r\n                document.body.removeChild(a);\r\n            })\r\n    }\r\n\r\n    return(\r\n        <div className=\"appointmentAndCheckup\" onClick={(e)=> togglePanel(e)}>\r\n            <div className=\"top\">\r\n                <p className=\"appointmentAndCheckupHeader\">{t(checkUp.diagnosticTestName)}</p>\r\n                <div className=\"data\">\r\n                    <p>{t(\"date\")}</p>\r\n                    <p>{new Date(checkUp.appointmentDate).toISOString().slice(0,10)}</p>\r\n                    <p>{new Date(checkUp.appointmentDate).toISOString().slice(11,16)}</p>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <FaRegUser size={42}/>\r\n                {t(\"doctorTitle\") + ' ' + checkUp.doctorFirstName + ' ' + checkUp.doctorLastName}\r\n            </div>\r\n\r\n            {state ? (\r\n                <div>\r\n                    <hr/>\r\n                    <div className=\"subsections\">\r\n                        <FaRegListAlt size={42}/>\r\n                        <p className=\"header\">{t(\"checkUpDescription\")}</p>\r\n                    </div>\r\n                    <div className=\"subsections\">\r\n                        <p>{checkUp.doctorsDescription}</p>\r\n                    </div>\r\n                    <hr/>\r\n\r\n                    <div className=\"subsections\">\r\n                        <FaCheck size={42}/>\r\n                        <p className=\"header\">{t(\"result\")}</p>\r\n                    </div>\r\n                    <div>\r\n                        <p>{checkUp.result ? checkUp.result : t(\"resultNotAvailable\")}</p>\r\n                    </div>\r\n\r\n                    {(checkUp.result !== null && checkUp.file) &&\r\n                    <>\r\n                        <hr/>\r\n                        <div className=\"subsections\">\r\n                            <FaFile size={42}/>\r\n                            <p className=\"header\">{t(\"downloadResultPDF\")}</p>\r\n                            <Button className=\"download\" href={`${baseUrl}/patients/${userId}/diagnosticTests`} onClick={(e)=>{\r\n                                handleFileDownload(e, checkup);\r\n                            }}>{t(\"download\")}</Button>\r\n                        </div>\r\n                    </>}\r\n                </div>) : null}\r\n        </div>);\r\n}\r\nexport default CheckUp;","import React from \"react\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst AppointmentDetailsButtonPanel = ({appointment, t}) => {\r\n    let history = useHistory();\r\n    const visitButton = 'visitButton';\r\n    const checkUpButton = 'checkUpButton';\r\n    const backButton = 'backButton';\r\n\r\n    const handleClick = e => {\r\n        e.preventDefault();\r\n\r\n        const button = e.target.id;\r\n        if (button === visitButton) {\r\n            history.push({\r\n                pathname: `/today-visits/${appointment.id}/details/visits-history`,\r\n                state: appointment\r\n            })\r\n        }\r\n        else if (button === checkUpButton) {\r\n            history.push({\r\n                pathname: `/today-visits/${appointment.id}/details/check-ups`,\r\n                state:  appointment\r\n            })\r\n        }\r\n        else if (button === backButton) {\r\n            history.push({\r\n                pathname: `/today-visits/${appointment.id}/details`,\r\n                state: appointment\r\n            })\r\n        }\r\n        else {\r\n            history.push({\r\n                pathname: `/today-visits/${appointment.id}/details/files`,\r\n                state: appointment\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"topBuffer\" style={{display: 'flex' ,justifyContent: 'space-between', width:'60%'}}>\r\n            {(window.location.href.indexOf('visits-history') > -1 || window.location.href.indexOf('check-ups') > -1 || window.location.href.indexOf('details/files') > -1) &&  <button id=\"backButton\" className=\"actionButton\" onClick={handleClick}>{t(\"backToDetailsButton\")}</button>}\r\n            {window.location.href.indexOf('visits-history') < 0 && <button id=\"visitButton\" className=\"actionButton\" onClick={handleClick}>{t(\"visitsHistoryButton\")}</button> }\r\n            {window.location.href.indexOf('check-ups') < 0 && <button id=\"checkUpButton\" className=\"actionButton\" onClick={handleClick}>{t(\"checkUpsButton\")}</button> }\r\n            {window.location.href.indexOf('details/files') < 0 && <button id=\"filesButton\" className=\"actionButton\" onClick={handleClick}>{t(\"patientFilesButton\")}</button> }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppointmentDetailsButtonPanel;","import React, {useState, useEffect} from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport {useHistory} from \"react-router\";\r\nimport CheckUp from \"./CheckUp\";\r\nimport {baseUrl} from \"../../config/config\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport AppointmentDetailsButtonPanel from \"../appointment/doctor/AppointmentDetailsButtonPanel\";\r\n\r\nconst CheckUpList = ({t, logout}) =>{\r\n    const [redirect, setRedirect] = useState(false);\r\n    const [userId, setUserId] = useState(()=>{\r\n        const saved = JSON.parse(sessionStorage.getItem('id'));\r\n        return saved || undefined;\r\n    });\r\n    const [userToken, setUserToken] = useState(()=>{\r\n        const saved = JSON.parse(sessionStorage.getItem('token'));\r\n        return saved || undefined;\r\n    });\r\n\r\n    const history = useHistory();\r\n    const app = history.location.state;\r\n    const [appointment, setAppointment] = useState(app ? app : undefined);\r\n    const location = useLocation();\r\n    const pageSizes = [3, 5, 10];\r\n    const [checkups, setCheckups] = useState([]);\r\n\r\n    const [page, setPage] = useState(1);\r\n    const [count, setCount] = useState(0);\r\n    const [pageSize, setPageSize] = useState(pageSizes[0]);\r\n\r\n    const getRequestParams = (page, pageSize) =>{\r\n        let params = {};\r\n\r\n        if(page){\r\n            params[\"page\"] = page - 1;\r\n        }\r\n        if(pageSize){\r\n            params[\"size\"] = pageSize;\r\n        }\r\n        return params;\r\n    }\r\n\r\n    useEffect(()=>{\r\n        const getCheckups = async () =>{\r\n            const checkUps = await fetchCheckups()\r\n            setCheckups(checkUps.diagnosticTests)\r\n            setCount(checkUps.totalPages)\r\n        }\r\n        getCheckups()\r\n    },[page, pageSize])\r\n\r\n\r\n    const fetchCheckups = async () =>{\r\n        const params = getRequestParams(page, pageSize);\r\n        let res;\r\n        if(appointment === undefined){\r\n            if(params.page !== null && params.size !== null){\r\n                res = await fetch(`${baseUrl}/patients/${userId}/diagnosticTests?page=${params.page}&size=${params.size}`,{\r\n                    headers: {'Authorization' : `Bearer ${userToken}`}\r\n                })\r\n                if(res.status === 403){\r\n                    setRedirect(true);\r\n                }\r\n\r\n            }else if(params.page !== null && params.size === null){\r\n                res = await fetch(`${baseUrl}/patients/${userId}/diagnosticTests?page=${params.page}`,{\r\n                    headers: {'Authorization' : `Bearer ${userToken}`}\r\n                })\r\n                if(res.status === 403){\r\n                    setRedirect(true);\r\n                }\r\n\r\n            }else if(params.page === null && params.size !== null){\r\n                res = await fetch(`${baseUrl}/patients/${userId}/diagnosticTests?size=${params.size}`,{\r\n                    headers: {'Authorization' : `Bearer ${userToken}`}\r\n                })\r\n                if(res.status === 403){\r\n                    setRedirect(true);\r\n                }\r\n\r\n            }else{\r\n                res = await fetch(`${baseUrl}/patients/${userId}/diagnosticTests`,{\r\n                    headers: {'Authorization' : `Bearer ${userToken}`}\r\n                })\r\n                if(res.status === 403){\r\n                    setRedirect(true);\r\n                }\r\n            }\r\n        }else{\r\n            if(params.page !== null && params.size !== null){\r\n                res = await fetch(`${baseUrl}/patients/${appointment.patient.id}/diagnosticTests?page=${params.page}&size=${params.size}`,{\r\n                    headers: {'Authorization' : `Bearer ${userToken}`}\r\n                })\r\n                if(res.status === 403){\r\n                    setRedirect(true);\r\n                }\r\n\r\n            }else if(params.page !== null && params.size === null){\r\n                res = await fetch(`${baseUrl}/patients/${appointment.patient.id}/diagnosticTests?page=${params.page}`,{\r\n                    headers: {'Authorization' : `Bearer ${userToken}`}\r\n                })\r\n                if(res.status === 403){\r\n                    setRedirect(true);\r\n                }\r\n\r\n            }else if(params.page === null && params.size !== null){\r\n                res = await fetch(`${baseUrl}/patients/${appointment.patient.id}/diagnosticTests?size=${params.size}`,{\r\n                    headers: {'Authorization' : `Bearer ${userToken}`}\r\n                })\r\n                if(res.status === 403){\r\n                    setRedirect(true);\r\n                }\r\n\r\n            }else{\r\n                res = await fetch(`${baseUrl}/patients/${appointment.patient.id}/diagnosticTests`,{\r\n                    headers: {'Authorization' : `Bearer ${userToken}`}\r\n                })\r\n                if(res.status === 403){\r\n                    setRedirect(true);\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        const data = await res.json();\r\n\r\n        return data;\r\n    }\r\n\r\n    const handlePageChange = (event, value) => {\r\n        setPage(value);\r\n    };\r\n\r\n    const handlePageSizeChange = (event) => {\r\n        setPageSize(event.target.value);\r\n        setPage(1);\r\n    };\r\n\r\n    if(redirect === true){\r\n        logout(history);\r\n        return (\r\n            <></>\r\n        )\r\n    }else {\r\n        return (\r\n            <div className=\"itemsList\">\r\n                <div className=\"listHeader\">\r\n                    <h2>{appointment ? t(\"checkupsHistory\") : t(\"yourCheckUps\")}</h2>\r\n                </div>\r\n                <br/>\r\n                {(appointment !== undefined) &&\r\n                <AppointmentDetailsButtonPanel appointment={appointment} t={t}/>\r\n                }\r\n                <div className=\"itemsNumber\">\r\n                    <p>{t(\"elementsNumber\")}&nbsp;</p>\r\n                    <select onChange={handlePageSizeChange} value={pageSize}>\r\n                        {pageSizes.map((size) => (\r\n                            <option key={size} value={size}>\r\n                                {size}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n                {checkups.map((checkup) => (\r\n                    <CheckUp key={checkup.id} checkup={checkup} t={t} logout={logout}/>\r\n                ))}\r\n                <Pagination className=\"my-3\" count={count} page={page} siblingCount={1} boundaryCount={1}\r\n                            shape=\"rounded\" onChange={handlePageChange}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CheckUpList;","import React from \"react\";\r\n\r\nconst PrescriptionListTableRow = ({prescription, t}) =>{\r\n\r\n    return(\r\n        <tr key={prescription.id}>\r\n            <td>{prescription.creationDate}</td>\r\n            <td>\r\n                {(prescription.medications ?\r\n                    <ul>\r\n                    {prescription.medications.map((medicine)=>(\r\n                        <li key={medicine.id}>{medicine.name}</li>\r\n                    ))}\r\n                    </ul> : '')}\r\n            </td>\r\n            <td>\r\n                {(prescription.medications ?\r\n                    <ul>\r\n                    {prescription.medications.map((medicine)=>(\r\n                        <li key={medicine.id}>{medicine.numberOfPackages}</li>\r\n                    ))}\r\n                    </ul> : '')}\r\n            </td>\r\n            <td>{t(\"issued\")}</td>\r\n            <td>{prescription.accessCode}</td>\r\n            <td>{prescription.doctorFirstName + ' ' + prescription.doctorLastName}</td>\r\n            <td>{prescription.doctorPwz}</td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default PrescriptionListTableRow;\r\n","import React from \"react\";\r\nimport PrescriptionListTableRow from \"./PrescriptionListTableRow\";\r\n\r\nconst PrescriptionListTable = ({prescriptionData, t}) =>{\r\n\r\n    return(\r\n        <table className=\"table table-hover fileTable\" style={{backgroundColor:\"white\", width : '90%'}}>\r\n            <thead>\r\n                <tr>\r\n                    <th>{t(\"issueDate\")}</th>\r\n                    <th>{t(\"medications\")}</th>\r\n                    <th>{t(\"numberOfPackages\")}</th>\r\n                    <th>{t(\"status\")}</th>\r\n                    <th>{t(\"eReceiptCode\")}</th>\r\n                    <th>{t(\"doctor\")}</th>\r\n                    <th>PWZ:</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n            {prescriptionData.map((prescription) =>\r\n                <PrescriptionListTableRow t={t} prescription={prescription} key={prescription.id}/>\r\n            )}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default PrescriptionListTable;","import React, {useState, useEffect} from \"react\";\r\nimport {useHistory} from \"react-router\";\r\nimport PrescriptionListTable from \"./PrescriptionListTable\";\r\nimport {baseUrl} from \"../../config/config\";\r\n\r\nconst PrescriptionList = ({t, logout}) =>{\r\n    const history = useHistory();\r\n    const [redirect, setRedirect] = useState(false);\r\n    const [userId, ,setUserId] = useState(()=>{\r\n        const saved = JSON.parse(sessionStorage.getItem('id'));\r\n        return saved || undefined;\r\n    });\r\n    const [userToken, setUserToken] = useState(()=>{\r\n        const saved = JSON.parse(sessionStorage.getItem('token'));\r\n        return saved || undefined;\r\n    });\r\n\r\n    const [prescriptions, setPrescriptions] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        let controller = new AbortController();\r\n\r\n        (async () =>{\r\n            try{\r\n                const prescriptions = await fetchPrescriptions()\r\n                setPrescriptions(prescriptions);\r\n                controller = null;\r\n            }catch (e){\r\n                console.log(e)\r\n                setRedirect(true);\r\n            }\r\n        })();\r\n        return () => controller?.abort();\r\n    },[])\r\n\r\n\r\n    const fetchPrescriptions = async () =>{\r\n        const res = await fetch(`${baseUrl}/patients/${userId}/prescriptions`,{\r\n            headers: {'Authorization' : `Bearer ${userToken}`}\r\n        })\r\n        if(res.status === 403){\r\n            setRedirect(true);\r\n        }\r\n        const data = await res.json();\r\n\r\n        return data;\r\n    }\r\n\r\n    if(redirect === true){\r\n        logout(history);\r\n        return (\r\n            <></>\r\n        )\r\n    }else {\r\n        return (\r\n            <div className=\"itemsList\">\r\n                <div className=\"listHeader\">\r\n                    <h2>{t(\"yourPrescriptions\")}</h2>\r\n                </div>\r\n                <div className=\"appointmentList\">\r\n                    <PrescriptionListTable prescriptionData={prescriptions} t={t}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default PrescriptionList;","import React from 'react';\r\n\r\nconst LanguageChanger = ({changeLanguage, t}) => {\r\n    return (\r\n        <div>\r\n            <div style={{textAlign: \"center\", marginBottom: \"10px\"}}>\r\n                <h4>{t(\"chooseLanguage\")}:</h4>\r\n            </div>\r\n            <div style={{ display: \"flex\", justifyContent: \"center\", marginBottom: \"20px\"}}>\r\n                <span style={{ display: \"inline-block\", marginRight: \"10px\", cursor: \"pointer\"}} className=\"flag-icon flag-icon-gb\" onClick={() => changeLanguage('en')}/>\r\n                <span style={{ display: \"inline-block\", marginLeft: \"10px\", cursor: \"pointer\"}} className=\"flag-icon flag-icon-pl\" onClick={() => changeLanguage('pl')}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LanguageChanger;","import {Button, Col, Form, Row} from \"react-bootstrap\";\r\nimport {Formik} from 'formik';\r\nimport * as yup from \"yup\";\r\nimport React, {useState} from \"react\";\r\nimport {useHistory} from 'react-router';\r\nimport LanguageChanger from \"./LanguageChanger\";\r\nimport {baseUrl} from \"../../config/config\";\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\nconst LoginForm = ({t, changeLanguage, setLogged, setRole}) => {\r\n    const patient = 'PATIENT';\r\n    const doctor = 'DOCTOR';\r\n    const history = useHistory();\r\n\r\n    const [notExistError, setNotExistError] = useState(undefined);\r\n\r\n    const onSubmit = values =>{\r\n\r\n        fetch(`${baseUrl}/login`,{\r\n            method : 'POST',\r\n            headers : {'Access-Control-Allow-Origin': `${baseUrl}`,\r\n                'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'\r\n            },\r\n            body : new URLSearchParams({\r\n                'userEmail' : values.email,\r\n                'password' : values.password\r\n            }),\r\n        })\r\n            .then(res => {\r\n                if(res.status === 403) {\r\n                    setNotExistError(t(\"userDontExists\"));\r\n                    throw new Error(t(\"userDontExists\"))\r\n                }\r\n                return res;\r\n            })\r\n            .then(res=>res.json())\r\n            .then((res)=>{\r\n                sessionStorage.setItem('logged', 'true');\r\n                sessionStorage.setItem('token', JSON.stringify(res.access_token));\r\n                sessionStorage.setItem('id', JSON.stringify(res.user_id));\r\n                sessionStorage.setItem('logged', 'true');\r\n                setLogged(true);\r\n                let decoded = jwtDecode(res.access_token);\r\n                sessionStorage.setItem('exp', JSON.stringify(decoded.exp));\r\n                setRole(decoded.role);\r\n                sessionStorage.setItem('role', JSON.stringify(decoded.role));\r\n\r\n                if(decoded.role === patient){\r\n                    history.push({\r\n                        pathname : '/appointments'})\r\n                }else if(decoded.role === doctor){\r\n                    history.push({\r\n                        pathname : '/today-visits'})\r\n                }\r\n            })\r\n            .catch(err=>console.log(err))\r\n    }\r\n\r\n    const schema = yup.object().shape({\r\n        email: yup.string().email(t(\"emailError\")).required(t(\"required\")),\r\n        password: yup.string().required(t(\"required\")).min(6, t(\"passwordMinCharactersError\")).max(50, t(\"passwordMaxCharactersError\"))\r\n    });\r\n\r\n    return (\r\n        <div className=\"loginForm\" style={{marginTop:\"17%\", marginBottom:\"27%\"}}>\r\n            <LanguageChanger changeLanguage={changeLanguage} t={t}/>\r\n            <Formik\r\n                validationSchema={schema}\r\n                onSubmit={onSubmit}\r\n                initialErrors={{}}\r\n                validateOnChange={true}\r\n                validateOnMount={false}\r\n                initialValues={{\r\n                    email: '',\r\n                    password: '',\r\n                }}>\r\n                {({\r\n                      handleSubmit,\r\n                      handleChange,\r\n                      values,\r\n                      touched,\r\n                      isValid,\r\n                      errors\r\n                  }) => (\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Row className=\"mb-3\">\r\n                            <Form.Group as={Col} xs={12} md={6} controlId=\"email\">\r\n                                <Form.Label>E-mail:</Form.Label>\r\n                                <Form.Control type=\"email\" name=\"email\" placeholder={t(\"enterEmail\")} defaultValue={values.email} isInvalid={!!errors.email} isValid={touched.email && !errors.email} onChange={handleChange} />\r\n                                <Form.Control.Feedback type=\"invalid\">{errors.email}</Form.Control.Feedback>\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} xs={12} md={6} controlId=\"password\">\r\n                                <Form.Label>{t(\"password\")}:</Form.Label>\r\n                                <Form.Control type=\"password\" name=\"password\" placeholder={t(\"enterPassword\")} defaultValue={values.password} isInvalid={!!errors.password} isValid={touched.password && !errors.password} onChange={handleChange}/>\r\n                                <Form.Control.Feedback type=\"invalid\">{errors.password}</Form.Control.Feedback>\r\n                            </Form.Group>\r\n                        </Row>\r\n                        <div style={{color: '#dc3545', marginBottom: \"20px\"}}>{notExistError}</div>\r\n                        <div>\r\n                            {t(\"newUser\")}?&nbsp;\r\n                            <Button variant=\"primary\" size=\"sm\" onClick={()=>{\r\n                                history.push({\r\n                                    pathname : '/register'\r\n                                })\r\n                            }}>{t(\"createAccount\")}</Button>\r\n                        </div>\r\n                        <hr/>\r\n                        <div style={{display: 'flex',justifyContent: 'center'}}>\r\n                            <Button style={{fontSize:\"20px\"}} variant=\"primary\" type=\"submit\" disabled={!isValid}>{t(\"login\")}</Button>\r\n                        </div>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginForm;","import React from \"react\";\r\nimport {Formik} from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport {Col, Row} from \"react-bootstrap\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport {useHistory} from 'react-router';\r\nimport {baseUrl} from \"../../config/config\";\r\nimport LanguageChanger from \"./LanguageChanger\";\r\n\r\nconst RegisterForm = ({changeLanguage, t}) => {\r\n\r\n    const schema = yup.object().shape({\r\n        email: yup.string().email(t(\"emailError\")).required(t(\"required\")),\r\n        pesel: yup.string().min(11, t(\"peselCharacterError\")).max(11, t(\"peselCharacterError\"))\r\n            .test('validatePesel', t(\"invalidPeselError\"),\r\n                function validatePesel(pesel) {\r\n                    let reg = /^[0-9]{11}$/;\r\n                    if(reg.test(pesel) === false)\r\n                        return false;\r\n                    else\r\n                    {\r\n                        let digits = (\"\"+pesel).split(\"\");\r\n                        if ((parseInt(pesel.substring( 4, 6)) > 31)||(parseInt(pesel.substring( 2, 4)) > 12))\r\n                            return false;\r\n\r\n                        let checksum = (1*parseInt(digits[0]) + 3*parseInt(digits[1]) + 7*parseInt(digits[2]) + 9*parseInt(digits[3]) + 1*parseInt(digits[4]) + 3*parseInt(digits[5]) + 7*parseInt(digits[6]) + 9*parseInt(digits[7]) + 1*parseInt(digits[8]) + 3*parseInt(digits[9]))%10;\r\n                        if(checksum === 0)\r\n                            checksum = 10;\r\n                        checksum = 10 - checksum;\r\n\r\n                        return (parseInt(digits[10]) === checksum);\r\n                    }\r\n                })\r\n            .required(t(\"required\")),\r\n        password: yup.string().min(6, t(\"passwordMinCharactersError\")).max(50, t(\"passwordMaxCharactersError\")).required(t(\"required\")),\r\n        confirmPassword: yup.string().oneOf([yup.ref('password'), ''], t(\"passwordMatch\")).required(t(\"required\"))\r\n    });\r\n\r\n    const history = useHistory();\r\n\r\n    const onSubmit = values =>{\r\n        const newPerson = {\r\n            pesel : values.pesel,\r\n            email : values.email,\r\n            password : values.password\r\n        };\r\n\r\n        fetch(`${baseUrl}/registration`,{\r\n            method : 'POST',\r\n            headers : {'Access-Control-Allow-Origin': `${baseUrl}`,\r\n                'Content-Type': 'application/json;charset=UTF-8'},\r\n            body : JSON.stringify(newPerson),\r\n        })\r\n            .then(res=>{\r\n                if(res.status === 404){\r\n                    window.alert(t(\"userWithPeselNotFound\"));\r\n                    throw new Error(t(\"userWithPeselNotFound\"))\r\n                }else{\r\n                    window.alert(t(\"registerSuccessful\"));\r\n                    history.push({\r\n                        pathname:'/login'\r\n                    })}\r\n            })\r\n            .catch(err=>{\r\n                console.log(err.message)\r\n            })\r\n    }\r\n\r\n    return(\r\n        <div className=\"loginForm\" style={{marginTop:\"15%\", marginBottom:\"27%\"}}>\r\n            <LanguageChanger changeLanguage={changeLanguage} t={t} />\r\n            <Formik\r\n                validationSchema={schema}\r\n                enableReinitialize={true}\r\n                onSubmit={onSubmit}\r\n                initialErrors={{}}\r\n                validateOnMount={false}\r\n                initialValues={{\r\n                    email : '',\r\n                    pesel : '',\r\n                    password: '',\r\n                    confirmPassword: ''\r\n                }} >\r\n                {({\r\n                      handleChange,\r\n                      handleSubmit,\r\n                      values,\r\n                      touched,\r\n                      isValid,\r\n                      errors\r\n                  })=>(\r\n                    <Form  onSubmit={handleSubmit}>\r\n                        <Row className=\"align-items-center mb-3\">\r\n                            <Col>\r\n                                <Form.Group>\r\n                                    <Form.Label>Pesel:</Form.Label>\r\n                                    <Form.Control type=\"text\" name=\"pesel\" placeholder=\"Pesel\" defaultValue={values.email} isInvalid={!!errors.pesel} isValid={touched.pesel && !errors.pesel} onChange={handleChange}/>\r\n                                    <Form.Control.Feedback type=\"invalid\">{errors.pesel}</Form.Control.Feedback>\r\n                                </Form.Group>\r\n                            </Col>\r\n                            <Col>\r\n                                <Form.Group>\r\n                                    <Form.Label>Email:</Form.Label>\r\n                                    <Form.Control type=\"email\" name=\"email\" placeholder=\"Email\" defaultValue={values.email} isInvalid={!!errors.email} isValid={touched.email && !errors.email} onChange={handleChange}/>\r\n                                    <Form.Control.Feedback type=\"invalid\">{errors.email}</Form.Control.Feedback>\r\n                                </Form.Group>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"align-items-center mb-3\">\r\n                            <Col>\r\n                                <Form.Group>\r\n                                    <Form.Label>{t(\"password\")}:</Form.Label>\r\n                                    <Form.Control type=\"password\" name=\"password\" placeholder={t(\"password\")} defaultValue={values.password} isInvalid={!!errors.password} isValid={touched.password && !errors.password} onChange={handleChange}/>\r\n                                    <Form.Control.Feedback type=\"invalid\">{errors.password}</Form.Control.Feedback>\r\n                                </Form.Group>\r\n                            </Col>\r\n                            <Col>\r\n                                <Form.Group>\r\n                                    <Form.Label>{t(\"confirmPassword\")}:</Form.Label>\r\n                                    <Form.Control type=\"password\" name=\"confirmPassword\" placeholder={t(\"confirmPassword\")} defaultValue={values.confirmPassword} isInvalid={!!errors.confirmPassword} isValid={touched.confirmPassword && !errors.confirmPassword} onChange={handleChange}/>\r\n                                    <Form.Control.Feedback type=\"invalid\">{errors.confirmPassword}</Form.Control.Feedback>\r\n                                </Form.Group>\r\n                            </Col>\r\n                        </Row>\r\n                         <div>\r\n                             {t(\"alreadyHaveAnAccount\")}?&nbsp;\r\n                             <Button variant=\"primary\" size=\"sm\" onClick={()=>{\r\n                                 history.push({\r\n                                     pathname : '/login'\r\n                                })\r\n                             }}>Login</Button>\r\n                         </div>\r\n                         <hr/>\r\n                        <div style={{display:\"flex\", justifyContent: 'center'}}>\r\n                            <Button variant=\"primary\" size=\"lg\" type=\"submit\" disabled={!isValid}>{t(\"register\")}</Button>\r\n                        </div>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RegisterForm;","export default __webpack_public_path__ + \"static/media/404.84004034.png\";","import React from \"react\";\r\nimport errorImage from '../../img/404.png';\r\n\r\nconst NotFound = ({t}) =>(\r\n    <div className=\"loginForm\" style={{marginTop:\"10%\", marginBottom:\"27%\"}}>\r\n        <img style={{width: \"100%\"}} src={errorImage} alt={\"404 not found\"}/>\r\n        <h1 style={{display: \"flex\", justifyContent: \"center\"}}>{t(\"notFound\")}</h1>\r\n    </div>\r\n);\r\n\r\nexport default NotFound;","import React, {useState, useEffect} from \"react\";\r\nimport {FaRegUser} from \"react-icons/fa\";\r\nimport moment from \"moment\";\r\nimport {useHistory} from 'react-router';\r\nimport {GiConfirmed} from \"react-icons/all\";\r\n\r\nconst DoctorAppointment = ({app, t}) => {\r\n    const history = useHistory();\r\n    const [appointment, setAppointment] = useState(app);\r\n    const done = 'DONE';\r\n    const telephone = 'TELEPHONE';\r\n    let x = (new Date()).getTimezoneOffset() * 60000;\r\n    let a = moment(Date.now());\r\n    let b = moment(appointment.patient.birthDate)\r\n\r\n    useEffect(()=>{\r\n        if(app !== undefined){\r\n            setAppointment(app);\r\n        }\r\n    },[app])\r\n\r\n    const handleClick = e => {\r\n        e.preventDefault();\r\n\r\n        history.push({\r\n            pathname: `/today-visits/${appointment.id}/details`,\r\n            state: appointment\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className={appointment.state === done ? \"appointmentAndCheckup todayApp\" : \"appointmentAndCheckup archivalApp\"}>\r\n            <div className=\"top\">\r\n                <p className=\"appointmentAndCheckupHeader\">{t(appointment.medicalServiceName)}</p>\r\n                <div className=\"data\">\r\n                    {appointment.state === done && <p><GiConfirmed size={42} style={{color: \"#18a74b\"}}/></p>}\r\n                    <p>{t(\"hour\")}&nbsp;{appointment.date ? new Date(new Date(appointment.date)-x).toISOString().slice(11,16) : ''}</p>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <p><FaRegUser size={42}/>{(appointment.patient ? (appointment.patient.firstName + ' ' + appointment.patient.lastName) : '')}</p>\r\n                <p>{t(\"age\")}&nbsp;{a.diff(b, 'year')}</p>\r\n                {appointment.type === telephone ? t(\"phoneNumber\") + ' ' + appointment.patient.phoneNumber : ''}\r\n            </div>\r\n            {appointment.state !== done &&\r\n                <>\r\n                    <hr />\r\n                    <div style={{display: 'flex' ,justifyContent: 'flex-end'}}>\r\n                        <button className=\"actionButton\" onClick={e => handleClick(e)}>{t(\"startVisit\")}</button>\r\n                    </div>\r\n                </>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DoctorAppointment;","import React, {useState, useEffect} from \"react\";\r\nimport {useHistory} from \"react-router\";\r\nimport {baseUrl} from \"../../../config/config\";\r\nimport DoctorAppointment from \"./DoctorAppointment\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\n\r\nconst TodayAppointmentList = ({t, logout}) => {\r\n    const history = useHistory();\r\n    const [redirect, setRedirect] = useState(false);\r\n    const [userId, setUserId] = useState(()=>{\r\n        const saved = JSON.parse(sessionStorage.getItem('id'));\r\n        return saved || undefined;\r\n    });\r\n    const [userToken, setUserToken] = useState(()=>{\r\n        const saved = JSON.parse(sessionStorage.getItem('token'));\r\n        return saved || undefined;\r\n    });\r\n\r\n    const pageSizes = [3, 5, 10];\r\n    const [appointments, setAppointments] = useState([]);\r\n    const [page, setPage] = useState(1);\r\n    const [count, setCount] = useState(0);\r\n    const [pageSize, setPageSize] = useState(pageSizes[0]);\r\n\r\n    const getRequestParams = (page, pageSize) =>{\r\n        let params = {};\r\n\r\n        if(page){\r\n            params[\"page\"] = page - 1;\r\n        }\r\n        if(pageSize){\r\n            params[\"size\"] = pageSize;\r\n        }\r\n        return params;\r\n    }\r\n\r\n    useEffect(() => {\r\n        let controller = new AbortController();\r\n        (async () => {\r\n            try{\r\n                const appointments = await fetchAppointments()\r\n                setAppointments(appointments.appointments)\r\n                setCount(appointments.totalPages)\r\n                controller = null;\r\n            }catch (e){\r\n                console.log(e)\r\n                setRedirect(true);\r\n            }\r\n        })();\r\n        return () =>controller?.abort();\r\n\r\n    }, [page, pageSize])\r\n\r\n    const fetchAppointments = async () =>{\r\n        const params = getRequestParams(page, pageSize);\r\n        let res;\r\n        if(params.page !== null && params.size !== null){\r\n            res = await fetch(`${baseUrl}/doctors/${userId}/todaysVisits?page=${params.page}&size=${params.size}`,{\r\n                headers: {'Authorization' : `Bearer ${userToken}`}\r\n            })\r\n            if(res.status === 403){\r\n                setRedirect(true);\r\n            }\r\n        }else if(params.page !== null && params.size === null){\r\n            res = await fetch(`${baseUrl}/doctors/${userId}/todaysVisits?page=${params.page}`,{\r\n                headers: {'Authorization' : `Bearer ${userToken}`}\r\n            })\r\n            if(res.status === 403){\r\n                setRedirect(true);\r\n            }\r\n        }else if(params.page === null && params.size !== null){\r\n            res = await fetch(`${baseUrl}/doctors/${userId}/todaysVisits?size=${params.size}`,{\r\n                headers: {'Authorization' : `Bearer ${userToken}`}\r\n            })\r\n            if(res.status === 403){\r\n                setRedirect(true);\r\n            }\r\n        }else{\r\n            res = await fetch(`${baseUrl}/doctors/${userId}/todaysVisits`,{\r\n                headers: {'Authorization' : `Bearer ${userToken}`}\r\n            })\r\n            if(res.status === 403){\r\n                setRedirect(true);\r\n            }\r\n        }\r\n\r\n        const data = await res.json();\r\n\r\n        return data;\r\n    }\r\n\r\n    const handlePageChange = (event, value) => {\r\n        setPage(value);\r\n    };\r\n\r\n    const handlePageSizeChange = (event) => {\r\n        setPageSize(event.target.value);\r\n        setPage(1);\r\n    };\r\n\r\n    if(redirect === true){\r\n        logout(history);\r\n        return (\r\n            <></>\r\n        )\r\n    }else {\r\n        return (\r\n            <div className=\"itemsList\">\r\n                <div className=\"listHeader\">\r\n                    <h2>{t(\"todayAppointments\")}</h2>\r\n                </div>\r\n                <div className=\"itemsNumber\">\r\n                    <p>{t(\"elementsNumber\")}&nbsp;</p>\r\n                    <select onChange={handlePageSizeChange} value={pageSize}>\r\n                        {pageSizes.map((size) => (\r\n                            <option key={size} value={size}>\r\n                                {size}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n                <div className=\"appointmentList\">\r\n                    {appointments.map(appointment => (\r\n                        <DoctorAppointment key={appointment.id} app={appointment} t={t}/>\r\n                    ))}\r\n                </div>\r\n                <Pagination className=\"my-3\" count={count} page={page} siblingCount={1} boundaryCount={1}\r\n                            shape=\"rounded\" onChange={handlePageChange}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodayAppointmentList;","import React from \"react\";\r\nimport logo from '../../../img/logo.png';\r\nimport {Navbar, Nav, NavDropdown, Container} from \"react-bootstrap\";\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\nimport {BsPerson} from 'react-icons/bs'\r\nimport {useLocation} from \"react-router-dom\";\r\nimport {useHistory} from 'react-router';\r\n\r\nconst DoctorNavigation = ({changeLanguage, t, setLogged}) =>{\r\n    const history = useHistory();\r\n    const profileTitle = (<BsPerson size={42}/>);\r\n    const {pathname} = useLocation()\r\n\r\n    const handleLogout = () =>{\r\n        sessionStorage.clear();\r\n        sessionStorage.setItem('logged', 'false');\r\n        setLogged(false);\r\n        history.push('/login');\r\n    }\r\n\r\n    return(\r\n        <Navbar bg=\"light\" variant=\"light\" expand=\"lg\" collapseOnSelect=\"true\" sticky=\"top\" className=\"navContainer\">\r\n            <Container fluid>\r\n                <Navbar.Brand className=\"navbar-brand\"><img src={logo} alt={\"Logo\"}/></Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"navbarToggleExternalContent\" className=\"navCollapse\">\r\n                    <Nav className=\"navNav\" key={pathname}>\r\n                        <LinkContainer to=\"/today-visits\" activeHref=\"active\">\r\n                            <Nav.Link exact className=\"navItemLink\">{t(\"todayAppointments\")}</Nav.Link>\r\n                        </LinkContainer>\r\n                        <LinkContainer to=\"/check-ups\" activeHref=\"active\">\r\n                            <Nav.Link exact className=\"navItemLink\">{t(\"checkups\")}</Nav.Link>\r\n                        </LinkContainer>\r\n                    </Nav>\r\n                    <NavDropdown className=\"navItemLanguages\" title={profileTitle} id=\"basic-nav-dropdown\">\r\n                        <NavDropdown title={t(\"language\")} id=\"basic-nav-dropdown\">\r\n                            <NavDropdown.Item onClick={() => {changeLanguage('en')}}>English</NavDropdown.Item>\r\n                            <NavDropdown.Item onClick={() => {changeLanguage('pl')}}>Polski</NavDropdown.Item>\r\n                        </NavDropdown>\r\n                        <NavDropdown.Divider />\r\n                        <NavDropdown.Item onClick={handleLogout}>{t(\"logout\")}</NavDropdown.Item>\r\n                    </NavDropdown>\r\n                </Navbar.Collapse>\r\n            </Container>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nexport default DoctorNavigation;","import React, {useEffect, useState, useRef} from 'react';\r\nimport {useHistory} from 'react-router';\r\nimport Form from \"react-bootstrap/Form\";\r\nimport {Col, Row} from \"react-bootstrap\";\r\nimport {baseUrl} from \"../../../config/config\";\r\nimport RangeSlider from \"react-bootstrap-range-slider\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nconst AppointmentDetailsForm = ({appointment, t, logout}) => {\r\n    const [redirect, setRedirect] = useState(false);\r\n    const [userToken, setUserToken] = useState(()=>{\r\n        const saved = JSON.parse(sessionStorage.getItem('token'));\r\n        return saved || undefined;\r\n    });\r\n\r\n    const history = useHistory();\r\n    const ref = useRef();\r\n    const formatYmd = date => date.toISOString().slice(0,10);\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const [services, setServices] = useState([]);\r\n    const [checkUps, setCheckUps] = useState([]);\r\n    const [medications, setMedications] = useState([]);\r\n\r\n    const [app, setApp] = useState(appointment);\r\n    const [description, setDescription] = useState(()=>{\r\n        const saved = sessionStorage.getItem('description');\r\n        return saved || undefined;\r\n    });\r\n\r\n    const [recommendations, setRecommendations] = useState(()=>{\r\n        const saved = sessionStorage.getItem('recommendations');\r\n        return saved || undefined;\r\n    });\r\n\r\n    const [service, setService] = useState(undefined);\r\n    const [referralExpiryDate, setReferralExpiryDate] = useState(formatYmd(new Date(new Date().setDate(new Date().getDate()+31))));\r\n    const [referralToDelete, setReferralToDelete] = useState(undefined);\r\n    const [referrals, setReferrals] = useState(()=>{\r\n        const saved = sessionStorage.getItem('referrals');\r\n        const savedReferrals = JSON.parse(saved);\r\n        return savedReferrals || [];\r\n    });\r\n\r\n    const [medication, setMedication] = useState(undefined);\r\n    const [medicationDosage, setMedicationDosage] = useState(undefined);\r\n    const [medicationQuantity, setMedicationQuantity] = useState(1);\r\n    const [medicationToDelete, setMedicationToDelete] = useState(undefined);\r\n    const [medicationsToAdd, setMedicationsToAdd] = useState(()=>{\r\n        const saved = sessionStorage.getItem('medications');\r\n        const savedMedications = JSON.parse(saved);\r\n        return savedMedications || [];\r\n    });\r\n\r\n    const [selectedCheckup, setSelectedCheckup] = useState(undefined);\r\n    const [checkupDescription, setCheckupDescription] = useState(undefined);\r\n    const [checkupResult, setCheckupResult] = useState(undefined);\r\n    const [checkupResultFile, setCheckupResultFile] = useState(undefined);\r\n    const [checkupToDelete, setCheckupToDelete] = useState(undefined);\r\n    const [checkUpsToAdd, setCheckUpsToAdd] = useState(()=>{\r\n        const saved = sessionStorage.getItem('checkups');\r\n        const savedCheckups = JSON.parse(saved);\r\n        return savedCheckups || [];\r\n    });\r\n\r\n    const reset = () =>{\r\n        ref.current.value = \"\";\r\n    };\r\n\r\n    useEffect(() => {\r\n        let controller = new AbortController();\r\n\r\n        (async () => {\r\n            try{\r\n                const services = await fetchServices()\r\n                services.forEach(service => {\r\n                    service.name = t(service.name)\r\n                })\r\n                setServices(services)\r\n                controller = null;\r\n            }catch (e){\r\n                console.log(e)\r\n                setRedirect(true);\r\n            }\r\n        })();\r\n        return () =>controller?.abort();\r\n\r\n    }, [])\r\n\r\n    const fetchServices = async () =>{\r\n        const res = await fetch(`${baseUrl}/medicalServices`,{\r\n            headers: {'Authorization' : `Bearer ${userToken}`}\r\n        });\r\n        if(res.status === 403){\r\n            setRedirect(true);\r\n        }\r\n        return await res.json();\r\n    }\r\n\r\n    useEffect(() => {\r\n        let controller = new AbortController();\r\n\r\n        (async () => {\r\n            try{\r\n                const checkUps = await fetchCheckUps()\r\n                checkUps.forEach(checkUp => {\r\n                    checkUp.name = t(checkUp.name)\r\n                })\r\n                setCheckUps(checkUps)\r\n                controller = null;\r\n            }catch (e){\r\n                console.log(e)\r\n                setRedirect(true);\r\n            }\r\n        })();\r\n        return () =>controller?.abort();\r\n\r\n    }, [])\r\n\r\n    const fetchCheckUps = async () =>{\r\n        const res = await fetch(`${baseUrl}/checkups`,{\r\n            headers: {'Authorization' : `Bearer ${userToken}`}\r\n        });\r\n        if(res.status === 403){\r\n            setRedirect(true);\r\n        }\r\n        return await res.json();\r\n    }\r\n\r\n    useEffect(() => {\r\n        let controller = new AbortController();\r\n\r\n        (async () => {\r\n            try{\r\n                const medications = await fetchMedications()\r\n                setMedications(medications);\r\n                controller = null;\r\n            }catch (e){\r\n                console.log(e)\r\n                setRedirect(true);\r\n            }\r\n        })();\r\n        return () =>controller?.abort();\r\n\r\n    }, [])\r\n\r\n    const fetchMedications = async () =>{\r\n        const res = await fetch(`${baseUrl}/medications`,{\r\n            headers: {'Authorization' : `Bearer ${userToken}`}\r\n        });\r\n        if(res.status === 403){\r\n            setRedirect(true);\r\n        }\r\n        return await res.json();\r\n    }\r\n\r\n    const handleReferralAddition = (e) => {\r\n        e.preventDefault();\r\n        let referral = {};\r\n\r\n        if (service !== undefined) {\r\n            referral[\"medicalServiceId\"] = service.id;\r\n            referral[\"medicalServiceName\"] = service.name;\r\n            referral[\"expiryDate\"] = referralExpiryDate;\r\n\r\n            referrals.push(referral);\r\n            sessionStorage.setItem('referrals', JSON.stringify(referrals));\r\n            setService(undefined);\r\n            let element = document.getElementById('serviceSelect');\r\n            element.value = t(\"chooseService\");\r\n            setReferralExpiryDate(formatYmd(new Date(new Date().setDate(new Date().getDate()+31))));\r\n        }\r\n    }\r\n\r\n    const handleReferralDeletion = (e) =>{\r\n        e.preventDefault();\r\n        if(referralToDelete !== undefined){\r\n           const refIndex = referrals.indexOf(referralToDelete);\r\n           if(refIndex > -1){\r\n               referrals.splice(refIndex, 1);\r\n               setReferrals(referrals);\r\n               sessionStorage.setItem('referrals', JSON.stringify(referrals));\r\n               setReferralToDelete(undefined);\r\n           }\r\n        }\r\n    }\r\n\r\n    const handleMedicationAddition = (e) =>{\r\n        e.preventDefault();\r\n        let medicine = {};\r\n\r\n        if(medication !== undefined && medicationDosage !== undefined){\r\n            if(medicationsToAdd.filter(e=>e.medicationId === medication.id).length === 0){\r\n                medicine[\"numberOfPackages\"] = medicationQuantity;\r\n                medicine[\"dosing\"] = medicationDosage;\r\n                medicine[\"medicationId\"] = medication.id;\r\n                medicine[\"name\"] = medication.name;\r\n\r\n                medicationsToAdd.push(medicine);\r\n                sessionStorage.setItem('medications', JSON.stringify(medicationsToAdd));\r\n                setMedication(undefined);\r\n                let element = document.getElementById('medicationSelect');\r\n                element.value = t(\"chooseMedication\");\r\n                setMedicationDosage('');\r\n                setMedicationQuantity(1);\r\n            }else{\r\n                window.alert(t(\"referralAddMedicationError\"));\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleMedicationDeletion = (e) =>{\r\n        e.preventDefault();\r\n        if(medicationToDelete !== undefined){\r\n            const medIndex = medicationsToAdd.indexOf(medicationToDelete);\r\n            if(medIndex > -1){\r\n                medicationsToAdd.splice(medIndex, 1);\r\n                setMedicationsToAdd(medicationsToAdd);\r\n                sessionStorage.setItem('medications', JSON.stringify(medicationsToAdd));\r\n                setMedicationToDelete(undefined);\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleCheckupAddition = (e) =>{\r\n        e.preventDefault();\r\n        let addedCheckup = {};\r\n\r\n        if(selectedCheckup !== undefined){\r\n            addedCheckup[\"checkUpId\"] = selectedCheckup.id;\r\n            addedCheckup[\"name\"] = selectedCheckup.name;\r\n\r\n            if(checkupDescription !== undefined){\r\n                addedCheckup[\"description\"] = checkupDescription;\r\n            }\r\n            if(checkupResult !== undefined && checkupResult !== ''){\r\n                addedCheckup[\"result\"] = checkupResult;\r\n            }\r\n            if(checkupResultFile !== undefined){\r\n                addedCheckup[\"file\"] = checkupResultFile;\r\n            }\r\n\r\n            checkUpsToAdd.push(addedCheckup);\r\n            sessionStorage.setItem('checkups', JSON.stringify(checkUpsToAdd));\r\n            setSelectedCheckup(undefined);\r\n            let element = document.getElementById('checkupSelect');\r\n            element.value = t(\"chooseCheckUp\");\r\n            setCheckupDescription('');\r\n            setCheckupResult('');\r\n            setCheckupResultFile(undefined);\r\n            reset();\r\n        }\r\n    }\r\n\r\n    const handleCheckupDeletion = (e) =>{\r\n        e.preventDefault();\r\n        if(checkupToDelete !== undefined){\r\n            const checkupIndex = checkUpsToAdd.indexOf(checkupToDelete);\r\n            if(checkupIndex > -1){\r\n                checkUpsToAdd.splice(checkupIndex, 1);\r\n                setCheckUpsToAdd(checkUpsToAdd);\r\n                sessionStorage.setItem('checkups', JSON.stringify(checkUpsToAdd));\r\n                setCheckupToDelete(undefined);\r\n            }\r\n        }\r\n    }\r\n\r\n    const convertToBase64 = (file) => {\r\n        return new Promise((resolve, reject) => {\r\n            const fileReader = new FileReader();\r\n            fileReader.readAsDataURL(file);\r\n            fileReader.onload = () => {\r\n                resolve(fileReader.result);\r\n            };\r\n            fileReader.onerror = (error) => {\r\n                reject(error);\r\n            };\r\n        });\r\n    };\r\n\r\n    const handleFileUpload = async (e) =>{\r\n        const file = e.target.files[0];\r\n        const base64 = await convertToBase64(file);\r\n        let data = base64.split('base64,')[1];\r\n        let binaryData = atob(data);\r\n\r\n        let byteNumbers = new Array(binaryData.length);\r\n        for(let i = 0; i < binaryData.length; i++){\r\n            byteNumbers[i] = binaryData.charCodeAt(i);\r\n        }\r\n        let test = new Uint8Array(byteNumbers);\r\n        let array = Array.from(test);\r\n        setCheckupResultFile(array);\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        const errors = findFormErrors();\r\n\r\n        if(Object.keys(errors).length > 0){\r\n            setErrors(errors);\r\n        }else{\r\n            let prescriptions = [];\r\n            if(medicationsToAdd.length > 0){\r\n                let prescription = {};\r\n                let expiryDate = formatYmd(new Date(new Date().setDate(new Date().getDate()+31)));\r\n                let accessCode = (Math.floor(Math.random() * 10000) + 10000).toString().substring(1);\r\n                let medications = medicationsToAdd;\r\n\r\n                prescription[\"expiryDate\"] = expiryDate;\r\n                prescription[\"accessCode\"] = accessCode;\r\n                prescription[\"medications\"] = medications;\r\n                prescriptions = [prescription];\r\n            }\r\n\r\n            let fetchBody = {};\r\n            fetchBody[\"description\"] = description;\r\n            fetchBody[\"recommendations\"] = recommendations;\r\n            fetchBody[\"referrals\"] = referrals;\r\n            fetchBody[\"prescriptions\"] = prescriptions;\r\n            fetchBody[\"checkUps\"] = checkUpsToAdd;\r\n\r\n            fetch(`${baseUrl}/appointments/${app.id}/done`,{\r\n                method : 'PATCH',\r\n                headers :{\r\n                    'Content-Type': 'application/json',\r\n                    'Access-Control-Allow-Origin': `${baseUrl}`,\r\n                    'Authorization' : `Bearer ${userToken}`\r\n                },\r\n                body : JSON.stringify(fetchBody)\r\n            }).then((res)=>{\r\n                if(res.status === 403){\r\n                    logout(history);\r\n                }else{\r\n                    window.alert(t(\"appointmentDetailsMessage\"));\r\n                    history.push({\r\n                        pathname : '/today-visits'\r\n                    })\r\n                }\r\n            }).catch((err)=>console.log(err));\r\n\r\n            sessionStorage.removeItem('description');\r\n            sessionStorage.removeItem('recommendations');\r\n            sessionStorage.removeItem('referrals');\r\n            sessionStorage.removeItem('medications');\r\n            sessionStorage.removeItem('checkups');\r\n        }\r\n    }\r\n\r\n    const handleCancel = (e) =>{\r\n        e.preventDefault();\r\n        sessionStorage.removeItem('description');\r\n        sessionStorage.removeItem('recommendations');\r\n        sessionStorage.removeItem('referrals');\r\n        sessionStorage.removeItem('medications');\r\n        sessionStorage.removeItem('checkups');\r\n        history.push({\r\n            pathname : '/today-visits'\r\n        })\r\n    }\r\n\r\n    const findFormErrors = () =>{\r\n        const newErrors = {};\r\n\r\n        if(description === undefined || description === ''){\r\n            newErrors.description = t(\"appointmentDescriptionRequired\");\r\n        }\r\n        return newErrors;\r\n    }\r\n\r\n    return (\r\n        <Form className=\"newAppointmentForm\">\r\n            <Form.Group className=\"mb-3\" controlId=\"detailsForm.ControlTextArea1\">\r\n                <Form.Label>{t(\"appointmentDescription\")}</Form.Label>\r\n                <Form.Control as=\"textarea\" rows={3} value={description} isInvalid={!!errors.description} onChange={(e)=>{\r\n                    setDescription(e.target.value);\r\n                    sessionStorage.setItem('description', e.target.value);\r\n                    if(!!errors['description'])\r\n                        setErrors({\r\n                            ...errors,\r\n                            ['description']:null\r\n                        })\r\n                }}/>\r\n                <Form.Control.Feedback type='invalid'>{errors.description}</Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"detailForm.ControlTextArea2\">\r\n                <Form.Label>{t(\"recommendations\")}:</Form.Label>\r\n                <Form.Control as=\"textarea\" rows={3} value={recommendations} onChange={(e)=>{\r\n                    setRecommendations(e.target.value)\r\n                    sessionStorage.setItem('recommendations', e.target.value);\r\n                }}/>\r\n            </Form.Group>\r\n            <Row className=\"mb-3\">\r\n                <Form.Label>{t(\"referrals\")}:</Form.Label>\r\n                <Col md>\r\n                    <Form.Group>\r\n                        <Form.Label column=\"sm\">{t(\"chooseService\")}:</Form.Label>\r\n                        <Form.Select id=\"serviceSelect\">\r\n                            <option onClick={() => setService(undefined)}>{t(\"chooseService\")}</option>\r\n                            {services.map((ser)=>(\r\n                                <option value={ser} onClick={()=>{\r\n                                    setService(ser);\r\n                                }}>{ser.name}</option>\r\n                            ))}\r\n                        </Form.Select>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label column=\"sm\">{t(\"chooseExpirationDate\")}</Form.Label>\r\n                        <Form.Control type='date' value={referralExpiryDate} onChange={(e) => setReferralExpiryDate(e.target.value)}/>\r\n                    </Form.Group>\r\n                </Col>\r\n                <Col md>\r\n                    <Form.Label column=\"sm\">{t(\"referralsList\")}</Form.Label>\r\n                    <div style={{overflow: \"scroll\", height: \"100px\"}}>\r\n                        {referrals.map((referral) => {\r\n                            return <div className=\"appointmentFormSubsectionItem\" key={referral.id} onClick={()=>{\r\n                                setReferralToDelete(referral);\r\n                            }}>{referral.medicalServiceName + ' ' + t(\"to\") + ': ' +referral.expiryDate}</div>\r\n                        })}\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n\r\n            <div style={{display: 'flex' ,justifyContent: 'space-between'}}>\r\n                <button className=\"addButton\" onClick={e=>handleReferralAddition(e)}>{t(\"addReferral\")}</button>\r\n                <button className=\"deleteButton\" onClick={e=>handleReferralDeletion(e)}>{t(\"deleteReferral\")}</button>\r\n            </div>\r\n            <hr />\r\n\r\n            <Row className=\"mb-3 topBuffer\">\r\n                <Col md>\r\n                    <Form.Label>{t(\"medications\")}</Form.Label>\r\n                    <Form.Group>\r\n                        <Form.Label column=\"sm\">{t(\"chooseMedication\")}:</Form.Label>\r\n                        <Form.Select id=\"medicationSelect\">\r\n                            <option onClick={() => setMedication(undefined)}>{t(\"chooseMedication\")}</option>\r\n                            {medications.map((medication) =>(\r\n                                <option value={medication} key={medication.id}\r\n                                        onClick={()=>setMedication(medication)}>{medication.name}</option>\r\n                                ))}\r\n                        </Form.Select>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-3\">\r\n                        <Form.Label column=\"sm\">{t(\"dosage\")}:</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder={t(\"dosage\")} value={medicationDosage} onChange={(e)=>setMedicationDosage(e.target.value)}/>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label column=\"sm\">{t(\"choosePackagesNumber\")}</Form.Label>\r\n                        <RangeSlider\r\n                            value={medicationQuantity}\r\n                            onChange={(e) => setMedicationQuantity(parseInt(e.target.value))}\r\n                        />\r\n                    </Form.Group>\r\n                </Col>\r\n                <Col md>\r\n                    <Form.Label column=\"sm\">{t(\"medicationsList\")}</Form.Label>\r\n                    <div style={{overflow: \"scroll\", height: \"216px\"}}>\r\n                        {medicationsToAdd.map((medication)=>{\r\n                            return <div className=\"appointmentFormSubsectionItem\" key={medication.id} onClick={()=>{\r\n                                setMedicationToDelete(medication);\r\n                            }}>{medication.name + ', '+medication.numberOfPackages + ' ' + t(\"package\") + '. '}</div>\r\n                        })}\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            <div style={{display: 'flex' ,justifyContent: 'space-between'}}>\r\n                <button className=\"addButton\" onClick={(e)=>handleMedicationAddition(e)}>{t(\"addMedication\")}</button>\r\n                <button className=\"deleteButton\" onClick={(e)=>handleMedicationDeletion(e)}>{t(\"deleteMedication\")}</button>\r\n            </div>\r\n            <hr />\r\n            <Row>\r\n\r\n            </Row>\r\n            <div className=\"topBuffer\">\r\n                <Form.Label>{t(\"checkups\")}:</Form.Label>\r\n                <h6 style={{color: '#e60000'}}>{t(\"checkUpsInfo\")}</h6>\r\n                <Row className=\"mb-3\">\r\n                    <Col md>\r\n                        <Form.Group>\r\n                            <Form.Label column=\"sm\">{t(\"chooseCheckUp\")}:</Form.Label>\r\n                            <Form.Select id=\"checkupSelect\">\r\n                                <option onClick={() => setSelectedCheckup(undefined)}>{t(\"chooseCheckUp\")}</option>\r\n                                {checkUps.map((checkUp)=>(\r\n                                   <option value={checkUp} key={checkUp.id}\r\n                                    onClick={()=>setSelectedCheckup(checkUp)}>{checkUp.name}</option>\r\n                                ))}\r\n                            </Form.Select>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col md />\r\n                </Row>\r\n                <Row className=\"mb-3\">\r\n                    <Col md>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Label column=\"sm\">{t(\"description\")}:</Form.Label>\r\n                            <Form.Control as=\"textarea\" rows={3} value={checkupDescription} onChange={(e)=>setCheckupDescription(e.target.value)}/>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col md>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Label column=\"sm\">{t(\"result\")}:</Form.Label>\r\n                            <Form.Control as=\"textarea\" rows={3} value={checkupResult} onChange={(e)=>setCheckupResult(e.target.value)}/>\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"mb-3\">\r\n                    <Col md>\r\n                        <Form.Group controlId=\"formFile\" className=\"mb-3\">\r\n                            <Form.Label column=\"sm\">{t(\"addFile\")}:</Form.Label>\r\n                            <Form.Control as=\"input\" type=\"file\" ref={ref} size=\"sm\" onChange={(e)=>handleFileUpload(e)}/>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col md>\r\n                        <Form.Label column=\"sm\">{t(\"checkUpsList\")}:</Form.Label>\r\n                        <div style={{overflow: \"scroll\", height: \"150px\"}}>\r\n                            {checkUpsToAdd.map((checkup)=>{\r\n                                return <div className=\"appointmentFormSubsectionItem\" key={checkup.id} onClick={()=>{\r\n                                    setCheckupToDelete(checkup);\r\n                                }}>{checkup.name}</div>\r\n                            })}\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                <div style={{display: 'flex' ,justifyContent: 'space-between'}}>\r\n                    <button className=\"addButton\" onClick={(e)=>handleCheckupAddition(e)}>{t(\"addCheckUp\")}</button>\r\n                    <button className=\"deleteButton\" onClick={(e)=>handleCheckupDeletion(e)}>{t(\"deleteCheckUp\")}</button>\r\n                </div>\r\n                <hr />\r\n            </div>\r\n            <div style={{display:\"flex\", justifyContent: 'center'}}>\r\n                <Button style={{marginLeft : '1%', marginRight:'1%'}} variant='danger' onClick={(e)=>handleCancel(e)}>{t(\"cancel\")}</Button>\r\n                <Button style={{marginLeft : '1%', marginRight:'1%'}} variant='primary' onClick={(e)=>handleSubmit(e)}>{t(\"saveChanges\")}</Button>\r\n            </div>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default AppointmentDetailsForm;","import React, {useState} from \"react\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport AppointmentDetailsForm from \"./AppointmentDetailsForm\";\r\nimport AppointmentDetailsButtonPanel from \"./AppointmentDetailsButtonPanel\";\r\n\r\nconst AppointmentDetails = ({t, logout}) => {\r\n    let history = useHistory();\r\n    const app = history.location.state;\r\n    const [appointment, setAppointment] = useState(app ? app : undefined);\r\n\r\n    return (\r\n        <div className=\"itemsList\">\r\n            <div className=\"listHeader\">\r\n                <h2>{t(\"appointmentDetails\")}</h2>\r\n            </div>\r\n            <br/>\r\n            <AppointmentDetailsButtonPanel appointment={appointment} t={t} />\r\n            <AppointmentDetailsForm appointment={appointment} t={t} logout={logout}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppointmentDetails;","import React from \"react\";\r\nimport {useState} from \"react\";\r\nimport {FaCheck, FaFile, FaRegUser} from \"react-icons/fa\";\r\nimport {GiMedicines} from \"react-icons/gi\";\r\n\r\nconst ArchivalVisit = ({appointment, t}) => {\r\n    const [open, setOpen] = useState(false);\r\n    let x = (new Date()).getTimezoneOffset() * 60000;\r\n\r\n    const togglePanel = (e) =>{\r\n        e.preventDefault();\r\n        setOpen(!open);\r\n    }\r\n\r\n    return(\r\n        <div className=\"appointmentAndCheckup archivalApp\" onClick={e => togglePanel(e)}>\r\n            <div className=\"top\">\r\n                <p className=\"appointmentAndCheckupHeader\">{t(appointment.serviceName)}</p>\r\n                <div className=\"data\">\r\n                    <p>{t(\"date\")}</p>\r\n                    <p>{appointment.date ? new Date(new Date(appointment.date)-x).toISOString().slice(0,10) : ''}</p>\r\n                    <p>{appointment.date ? new Date(new Date(appointment.date)-x).toISOString().slice(11,16) : ''}</p>\r\n                </div>\r\n            </div>\r\n            <div style={{display: 'flex', justifyContent:'space-between'}}>\r\n                <div>\r\n                    <FaRegUser size={42}/>\r\n                    {t(\"doctorTitle\")}&nbsp;{(appointment.doctor? (appointment.doctor.firstName + ' ' + appointment.doctor.lastName) : '')}\r\n                </div>\r\n            </div>\r\n            {appointment.recommendations  ? <>\r\n                {open ? (\r\n                    <div>\r\n                        <hr/>\r\n                        <div className=\"subsections\">\r\n                            <FaCheck size={42}/>\r\n                            <p className=\"header\">{t(\"recommendations\")}</p>\r\n                        </div>\r\n                        <ol>\r\n                            <li>{appointment.recommendations}</li>\r\n                        </ol>\r\n                        <hr/>\r\n\r\n                        <div className=\"subsections\">\r\n                            <FaFile size={42}/>\r\n                            <p className=\"header\">{t(\"realizedCheckUps\")}</p>\r\n                        </div>\r\n                        <p>{appointment.serviceName}</p>\r\n                        <hr/>\r\n                        <div className=\"subsections\">\r\n                            <GiMedicines size={42}/>\r\n                            <p className=\"header\">{t(\"ePrescriptions\")}</p>\r\n                        </div>\r\n                        <p>{appointment.prescriptions ? t(\"ePrescriptionsIssued\") : t(\"noPrescriptions\")}</p>\r\n                </div>) : null}\r\n            </> : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ArchivalVisit;","import React, {useEffect, useState} from \"react\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {baseUrl} from \"../../../../config/config\";\r\nimport ArchivalVisit from \"./ArchivalVisit\";\r\nimport AppointmentDetailsButtonPanel from \"../AppointmentDetailsButtonPanel\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\n\r\nconst VisitsHistoryList = ({t, logout}) => {\r\n    const [redirect, setRedirect] = useState(false);\r\n    const [userToken, setUserToken] = useState(()=>{\r\n        const saved = JSON.parse(sessionStorage.getItem('token'));\r\n        return saved || undefined;\r\n    });\r\n\r\n    let history = useHistory();\r\n    const appointment = history.location.state;\r\n    const [patientsAppointments, setPatientsAppointments] = useState([]);\r\n\r\n    const pageSizes = [3, 5, 10];\r\n    const [page, setPage] = useState(1);\r\n    const [count, setCount] = useState(0);\r\n    const [pageSize, setPageSize] = useState(pageSizes[0]);\r\n\r\n    const getRequestParams = (page, pageSize) =>{\r\n        let params = {};\r\n\r\n        if(page){\r\n            params[\"page\"] = page - 1;\r\n        }\r\n        if(pageSize){\r\n            params[\"size\"] = pageSize;\r\n        }\r\n        return params;\r\n    }\r\n\r\n    useEffect(() => {\r\n        let controller = new AbortController();\r\n\r\n        (async () => {\r\n            try{\r\n                const appointments = await fetchAppointments()\r\n                setPatientsAppointments(appointments.appointments)\r\n                controller = null;\r\n            }catch(e){\r\n                console.log(e)\r\n                setRedirect(true);\r\n            }\r\n        })();\r\n        return () =>controller?.abort();\r\n\r\n    }, [page, pageSize])\r\n\r\n    const fetchAppointments = async () =>{\r\n        const params = getRequestParams(page, pageSize);\r\n        let res;\r\n\r\n        if(params.page !== null && params.size !== null){\r\n            res = await fetch(`${baseUrl}/patients/${appointment.patient.id}/doneAppointments?page=${params.page}&size=${params.size}`,{\r\n                headers: {'Authorization' : `Bearer ${userToken}`}\r\n            })\r\n            if(res.status === 403){\r\n                setRedirect(true);\r\n            }\r\n\r\n        }else if(params.page !== null && params.size === null){\r\n            res = await fetch(`${baseUrl}/patients/${appointment.patient.id}/doneAppointments?page=${params.page}`,{\r\n                headers: {'Authorization' : `Bearer ${userToken}`}\r\n            })\r\n            if(res.status === 403){\r\n                setRedirect(true);\r\n            }\r\n        }else if(params.page === null && params.size !== null){\r\n            res = await fetch(`${baseUrl}/patients/${appointment.patient.id}/doneAppointments?size=${params.size}`,{\r\n                headers: {'Authorization' : `Bearer ${userToken}`}\r\n            })\r\n            if(res.status === 403){\r\n                setRedirect(true)\r\n            }\r\n        }else{\r\n            res = await fetch(`${baseUrl}/patients/${appointment.patient.id}/doneAppointments`,{\r\n                headers: {'Authorization' : `Bearer ${userToken}`}\r\n            })\r\n            if(res.status === 403){\r\n                setRedirect(true)\r\n            }\r\n        }\r\n\r\n        const data = await res.json()\r\n\r\n        return data\r\n    }\r\n\r\n    const handlePageChange = (event, value) => {\r\n        setPage(value);\r\n    };\r\n\r\n    const handlePageSizeChange = (event) => {\r\n        setPageSize(event.target.value);\r\n        setPage(1);\r\n    };\r\n\r\n\r\n    if(redirect === true){\r\n        logout(history);\r\n        return (\r\n            <></>\r\n        )\r\n    }else {\r\n        return (\r\n            <div className=\"itemsList\">\r\n                <div className=\"listHeader\">\r\n                    <h2>{t(\"appointmentsHistory\")}</h2>\r\n                </div>\r\n                <AppointmentDetailsButtonPanel appointment={appointment} t={t}/>\r\n                <div className=\"itemsNumber\">\r\n                    <p>{t(\"elementsNumber\")}&nbsp;</p>\r\n                    <select onChange={handlePageSizeChange} value={pageSize}>\r\n                        {pageSizes.map((size) => (\r\n                            <option key={size} value={size}>\r\n                                {size}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n                {patientsAppointments.length > 0 ?\r\n                    <div className=\"appointmentList\">\r\n                        {patientsAppointments.map(patientAppointment => <ArchivalVisit key={patientAppointment.id}\r\n                                                                                       appointment={patientAppointment}\r\n                                                                                       t={t}/>)}\r\n                    </div> : <span style={{marginTop: '1%'}}>{t(\"noAppointmentsToShow\")}</span>\r\n                }\r\n                {patientsAppointments.length > 0 &&\r\n                <Pagination className=\"my-3\" count={count} page={page} siblingCount={1} boundaryCount={1}\r\n                            shape=\"rounded\" onChange={handlePageChange}/>\r\n                }\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default VisitsHistoryList;","import React, {useEffect, useState} from \"react\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {baseUrl} from \"../../../../config/config\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport AppointmentDetailsButtonPanel from \"../AppointmentDetailsButtonPanel\";\r\n\r\nconst FilesTable = ({t, logout}) => {\r\n\r\n    const [userToken, setUserToken] = useState(()=>{\r\n        const saved = sessionStorage.getItem('token');\r\n        return saved || undefined;\r\n    });\r\n\r\n    const [files, setFiles] = useState([]);\r\n    let history = useHistory();\r\n    const app = history.location.state;\r\n    const [appointment, setAppointment] = useState(app ? app : undefined);\r\n    const [redirect, setRedirect] = useState(false);\r\n\r\n    useEffect(() => {\r\n        let controller = new AbortController();\r\n\r\n        (async () => {\r\n            try{\r\n                const files = await fetchFiles()\r\n                setFiles(files);\r\n                controller = null;\r\n            }catch (e){\r\n                console.log(e)\r\n                setRedirect(true);\r\n            }\r\n        })();\r\n        return () =>controller?.abort();\r\n\r\n    }, [])\r\n\r\n    const fetchFiles = async () => {\r\n        const res = await fetch(`${baseUrl}/patients/${appointment.patient.id}/files`,{\r\n            headers: {'Authorization' : `Bearer ${userToken}`}\r\n        })\r\n        if(res.status === 403){\r\n           setRedirect(true);\r\n        }\r\n        const data = await res.json()\r\n\r\n        return data;\r\n    }\r\n\r\n    const handleFileDownload = (e, file) => {\r\n        e.preventDefault();\r\n        fetch(`${baseUrl}/patients/${appointment.patient.id}/files/${file.id}`,{\r\n            headers: {'Authorization' : `Bearer ${userToken}`}\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                let a = window.document.createElement('a');\r\n                let byteArr = new Uint8Array(res.file);\r\n                a.href = window.URL.createObjectURL(new Blob([byteArr], {type: file.type}))\r\n                a.download = res.name;\r\n                document.body.appendChild(a);\r\n                a.click();\r\n                document.body.removeChild(a);\r\n            });\r\n    }\r\n\r\n    if(redirect === true){\r\n        logout(history);\r\n        return (\r\n            <></>\r\n        )\r\n    }else {\r\n        return (\r\n            <div className=\"itemsList\">\r\n                <div className=\"listHeader\">\r\n                    <h2>{t(\"patientFiles\")}</h2>\r\n                </div>\r\n                <AppointmentDetailsButtonPanel appointment={appointment} t={t}/>\r\n                {files.length > 0 ?\r\n                    <Table className=\"table table-hover table-bordered fileTable topBuffer\" style={{width: '80%'}}>\r\n                        <thead style={{backgroundColor: '#e6eeff'}}>\r\n                        <tr>\r\n                            <th>{t(\"name\")}:</th>\r\n                            <th>{t(\"description\")}:</th>\r\n                            <th>{t(\"createDate\")}</th>\r\n                            <th>{t(\"action\")}</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {files.map((file) =>\r\n                            <tr key={file.id}>\r\n                                <td>{file.name}</td>\r\n                                <td>{file.description}</td>\r\n                                <td>{file.uploadDate}</td>\r\n                                <td>\r\n                                    <Button variant='primary'\r\n                                            onClick={e => handleFileDownload(e, file)}>{t(\"Download\")}</Button>\r\n                                </td>\r\n                            </tr>\r\n                        )}\r\n                        </tbody>\r\n                    </Table> : <span className=\"topBuffer\">{t(\"noFiles\")}</span>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FilesTable;","import React, {useRef, useState, useEffect} from \"react\";\r\nimport {FaRegUser} from \"react-icons/fa\";\r\nimport moment from \"moment\";\r\nimport {Form} from \"react-bootstrap\";\r\nimport {baseUrl} from \"../../../config/config\";\r\n\r\nconst DoctorCheckUp = ({checkup, setSelectedCheckup, t}) => {\r\n\r\n    const [userToken, setUserToken] = useState(()=>{\r\n        const saved = JSON.parse(sessionStorage.getItem('token'));\r\n        return saved || undefined;\r\n    });\r\n\r\n    const [state, setState] = useState(false);\r\n    const [showAll, setShowAll] = useState(true);\r\n    const [checkUp, setCheckUp] = useState(checkup);\r\n    const [result, setResult] = useState(undefined);\r\n    const [file, setFile] = useState(undefined);\r\n    const [doctorsDescription, setDoctorsDescription] = useState(undefined);\r\n    const [errors, setErrors] = useState({});\r\n    const ref = useRef();\r\n    let a = moment(Date.now());\r\n    let b = moment(checkUp.patient.birthDate)\r\n\r\n    function showForm(e) {\r\n        e.preventDefault();\r\n        setState(!state);\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(checkup !== undefined){\r\n            setCheckUp(checkup);\r\n        }\r\n    },[checkup])\r\n\r\n    const findFormErrors = () => {\r\n        const newErrors = {};\r\n\r\n        if(result === undefined || result === ''){\r\n            newErrors.result = t(\"checkupResultRequired\");\r\n        }\r\n\r\n        if (file === undefined) {\r\n            newErrors.file = t(\"checkupResultFileRequired\");\r\n        }\r\n\r\n        return newErrors;\r\n    }\r\n\r\n    const convertToBase64 = (file) => {\r\n        return new Promise((resolve, reject) => {\r\n            const fileReader = new FileReader();\r\n            fileReader.readAsDataURL(file);\r\n            fileReader.onload = () => {\r\n                resolve(fileReader.result);\r\n            };\r\n            fileReader.onerror = (error) => {\r\n                reject(error);\r\n            };\r\n        });\r\n    };\r\n\r\n    const handleFileUpload = async (e) =>{\r\n        const file = e.target.files[0];\r\n        const base64 = await convertToBase64(file);\r\n        let data = base64.split('base64,')[1];\r\n        let binaryData = atob(data);\r\n\r\n        let byteNumbers = new Array(binaryData.length);\r\n        for(let i = 0; i < binaryData.length; i++){\r\n            byteNumbers[i] = binaryData.charCodeAt(i);\r\n        }\r\n        let test = new Uint8Array(byteNumbers);\r\n        let array = Array.from(test);\r\n        setFile(array);\r\n    }\r\n\r\n    const handleRealization = (e) =>{\r\n        e.preventDefault();\r\n        const errors = findFormErrors();\r\n\r\n        if (Object.keys(errors).length > 0) {\r\n            setErrors(errors);\r\n        } else {\r\n            let fetchBody = {};\r\n            fetchBody['result'] = result;\r\n            fetchBody['doctorsDescription'] = doctorsDescription;\r\n            fetchBody['file'] = file;\r\n\r\n            fetch(`${baseUrl}/appointments/${checkUp.appointmentId}/testResult/${checkUp.checkUpId}`, {\r\n                method: 'PATCH',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization' : `Bearer ${userToken}`\r\n                },\r\n                body: JSON.stringify(fetchBody)\r\n            })\r\n            .then((res) => {\r\n                if(res.status === 403){\r\n                    window.alert('bląd');\r\n                }\r\n                res.json()\r\n            })\r\n                .then(()=>new Promise(resolve => setTimeout(resolve, 2000)))\r\n            .then(window.alert(t(\"checkUpRealized\")))\r\n            .catch((err) => console.log(err));\r\n            setSelectedCheckup(checkUp);\r\n            setShowAll(false);\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"appointmentAndCheckup\">\r\n            <div className=\"top\">\r\n                <p className=\"appointmentAndCheckupHeader\">{t(checkUp.diagnosticTestName)}</p>\r\n                <div className=\"data\">\r\n                    <p>{t(\"date\")}</p>\r\n                    <p>{new Date(checkUp.appointmentDate).toISOString().slice(0,10)}</p>\r\n                    <p>{new Date(checkUp.appointmentDate).toISOString().slice(11,16)}</p>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <p><FaRegUser size={42}/>{(checkUp.patient ? (checkUp.patient.firstName + ' ' + checkUp.patient.lastName) : '')}</p>\r\n                <p>{t(\"age\")}&nbsp;{a.diff(b, 'year')}</p>\r\n            </div>\r\n            {!state &&\r\n            <div style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n                <button className=\"actionButton\" onClick={showForm}>{t(\"realizeCheckUp\")}</button>\r\n            </div>\r\n            }\r\n            {state ? (\r\n                <Form>\r\n                    <Form.Group className=\"mb-3\" controlId=\"doctorDescription\">\r\n                        <Form.Label>{t(\"description\")}:</Form.Label>\r\n                        <Form.Control as=\"textarea\" rows={3} value={doctorsDescription} onChange={e => {\r\n                            setDoctorsDescription(e.target.value)\r\n                        }} />\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-3\" controlId=\"result\">\r\n                        <Form.Label>{t(\"result\")}:</Form.Label>\r\n                        <Form.Control as=\"textarea\" rows={3} isInvalid={!!errors.result} value={result} onChange={e => {\r\n                            setResult(e.target.value);\r\n                            if(!!errors['result'])\r\n                                setErrors({\r\n                                    ...errors,\r\n                                    ['result']:null\r\n                                })\r\n                        }} />\r\n                        <Form.Control.Feedback type='invalid'>{errors.result}</Form.Control.Feedback>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"file\" className=\"mb-2\">\r\n                        <Form.Label>{t(\"file\")}</Form.Label>\r\n                        <Form.Control as=\"input\" ref={ref} type=\"file\" isInvalid={!!errors.file} onChange={e => {\r\n                            handleFileUpload(e);\r\n                            if(!!errors['file'])\r\n                                setErrors({\r\n                                    ...errors,\r\n                                    ['file']:null\r\n                                })\r\n                        }}\r\n                        />\r\n                        <Form.Control.Feedback type='invalid'>{errors.file}</Form.Control.Feedback>\r\n                    </Form.Group>\r\n                    {state &&\r\n                    <div className=\"topBuffer\" style={{display: 'flex', justifyContent: 'space-between'}}>\r\n                        <button className=\"deleteButton\" onClick={(e)=>showForm(e)}>{t(\"cancel\").toUpperCase()}</button>\r\n                        <button className=\"addButton\" onClick={e => handleRealization(e)}>{t(\"accept\").toUpperCase()}</button>\r\n                    </div>\r\n                    }\r\n                </Form>) : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DoctorCheckUp;","import React, {useEffect, useState} from \"react\";\r\nimport {useHistory} from \"react-router\";\r\nimport {baseUrl} from \"../../../config/config\";\r\nimport DoctorCheckUp from \"./DoctorCheckUp\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\n\r\nconst DoctorCheckUpList = ({t, logout}) => {\r\n    const history = useHistory();\r\n    const [redirect, setRedirect] = useState(false);\r\n    const [userId, setUserId] = useState(()=>{\r\n        const saved = JSON.parse(sessionStorage.getItem('id'));\r\n        return saved || undefined;\r\n    });\r\n    const [userToken, setUserToken] = useState(()=>{\r\n        const saved = JSON.parse(sessionStorage.getItem('token'));\r\n        return saved || undefined;\r\n    });\r\n\r\n    const pageSizes = [3, 5, 10];\r\n    const [checkUps, setCheckUps] = useState([]);\r\n    const [selectedCheckup, setSelectedCheckup] = useState(undefined);\r\n\r\n    const [page, setPage] = useState(1);\r\n    const [count, setCount] = useState(0);\r\n    const [pageSize, setPageSize] = useState(pageSizes[0]);\r\n\r\n    const getRequestParams = (page, pageSize) => {\r\n        let params = {};\r\n\r\n        if (page) {\r\n            params[\"page\"] = page - 1;\r\n        }\r\n        if (pageSize) {\r\n            params[\"size\"] = pageSize;\r\n        }\r\n        return params;\r\n    }\r\n\r\n    useEffect(() => {\r\n        let controller = new AbortController();\r\n\r\n        (async () => {\r\n            try{\r\n                const checkUps = await fetchCheckUps()\r\n                setCheckUps(checkUps.checkUps);\r\n                setCount(checkUps.totalPages);\r\n                controller = null;\r\n            }catch (e){\r\n                console.log(e)\r\n                setRedirect(true);\r\n            }\r\n        })();\r\n        return () =>controller?.abort();\r\n\r\n    }, [page, pageSize, selectedCheckup])\r\n\r\n    useEffect(()=>{\r\n        if(selectedCheckup !== undefined){\r\n            setCheckUps(checkUps.filter(filterCheckups));\r\n        }\r\n    }, [selectedCheckup])\r\n\r\n\r\n    const fetchCheckUps = async () => {\r\n        const params = getRequestParams(page, pageSize);\r\n        let res;\r\n        if (params.page !== null && params.size !== null) {\r\n            res = await fetch(`${baseUrl}/doctors/${userId}/testsWithoutResults?page=${params.page}&size=${params.size}`,{\r\n                headers: {'Authorization' : `Bearer ${userToken}`}\r\n            })\r\n            if(res.status === 403){\r\n                setRedirect(true);\r\n            }\r\n        } else if (params.page !== null && params.size === null) {\r\n            res = await fetch(`${baseUrl}/doctors/${userId}/testsWithoutResults?page=${params.page}`,{\r\n                headers: {'Authorization' : `Bearer ${userToken}`}\r\n            })\r\n            if(res.status === 403){\r\n                setRedirect(true);\r\n            }\r\n        } else if (params.page === null && params.size !== null) {\r\n            res = await fetch(`${baseUrl}/doctors/${userId}/testsWithoutResults?size=${params.size}`,{\r\n                headers: {'Authorization' : `Bearer ${userToken}`}\r\n            })\r\n            if(res.status === 403){\r\n                setRedirect(true);\r\n            }\r\n        } else {\r\n            res = await fetch(`${baseUrl}/doctors/${userId}/testsWithoutResults`,{\r\n                headers: {'Authorization' : `Bearer ${userToken}`}\r\n            })\r\n            if(res.status === 403){\r\n                setRedirect(true);\r\n            }\r\n        }\r\n\r\n        const data = await res.json();\r\n\r\n        return data;\r\n    }\r\n\r\n    const filterCheckups = (checkup) =>{\r\n        if(checkup.appointmentId !== selectedCheckup.appointmentId && checkup.checkUpId !== selectedCheckup.checkUpId){\r\n            return checkup;\r\n        }\r\n    }\r\n\r\n    const handlePageChange = (event, value) => {\r\n        setPage(value);\r\n    }\r\n\r\n    const handlePageSizeChange = (event) => {\r\n        setPageSize(event.target.value);\r\n        setPage(1);\r\n    };\r\n\r\n    if(redirect === true){\r\n        logout(history);\r\n        return (\r\n            <></>\r\n        )\r\n    }else {\r\n        return (\r\n            <div className=\"itemsList\">\r\n                <div className=\"listHeader\">\r\n                    <h2>{t(\"checkUpsToRealize\")}</h2>\r\n                </div>\r\n                <div className=\"itemsNumber\">\r\n                    <p>{t(\"elementsNumber\")}&nbsp;</p>\r\n                    <select onChange={handlePageSizeChange} value={pageSize}>\r\n                        {pageSizes.map((size) => (\r\n                            <option key={size} value={size}>\r\n                                {size}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n                {checkUps.map(checkUp => (\r\n                    <DoctorCheckUp checkup={checkUp} setSelectedCheckup={setSelectedCheckup} t={t}/>\r\n                ))}\r\n                <Pagination className=\"my-3\" count={count} page={page} siblingCount={1} boundaryCount={1}\r\n                            shape=\"rounded\" onChange={handlePageChange}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DoctorCheckUpList;","export default __webpack_public_path__ + \"static/media/stetoscope.a15ede8e.jpg\";","import React, {useState} from \"react\";\r\nimport Navigation from \"./components/fragments/Navigation\";\r\nimport Footer from \"./components/fragments/Footer\";\r\nimport PatientData from \"./components/patient/PatientData\";\r\nimport UploadNewFile from \"./components/patientFiles/UploadNewFile\";\r\nimport AppointmentList from \"./components/appointment/AppointmentList\";\r\nimport NewAppointment from \"./components/appointment/NewAppointment\";\r\nimport ReferralList from \"./components/referral/ReferralList\";\r\nimport ScheduleForm from \"./components/schedule/ScheduleForm\";\r\nimport CheckUpList from \"./components/checkup/CheckUpList\";\r\nimport PrescriptionList from \"./components/prescription/PrescriptionList\";\r\nimport LoginForm from \"./components/login/LoginForm\";\r\nimport RegisterForm from \"./components/login/RegisterForm\";\r\nimport NotFound from \"./components/login/NotFound\";\r\nimport TodayAppointmentList from \"./components/appointment/doctor/TodayAppointmentList\";\r\nimport DoctorNavigation from \"./components/fragments/doctor/DoctorNavigation\";\r\nimport AppointmentDetails from \"./components/appointment/doctor/AppointmentDetails\";\r\nimport VisitsHistoryList from \"./components/appointment/doctor/visitsHistory/VisitsHistoryList\";\r\nimport FilesTable from \"./components/appointment/doctor/files/FilesTable\";\r\nimport DoctorCheckUpList from \"./components/checkup/doctor/DoctorCheckUpList\";\r\nimport background from '../src/img/stetoscope.jpg';\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {\r\n    Switch,\r\n    Route, HashRouter\r\n} from \"react-router-dom\";\r\nimport {Redirect} from \"react-router\";\r\n\r\n\r\nconst App = () =>{\r\n\r\n    const patient = 'PATIENT';\r\n    const doctor = 'DOCTOR';\r\n\r\n    const [logged, setLogged] = useState(()=>{\r\n        const savedState = JSON.parse(sessionStorage.getItem('logged'));\r\n        return savedState || false;\r\n    });\r\n\r\n    const [role, setRole] = useState(()=>{\r\n        const savedRole = JSON.parse(sessionStorage.getItem('role'));\r\n        return savedRole || undefined;\r\n    })\r\n\r\n    const {t, i18n} = useTranslation()\r\n\r\n    const changeLanguage = (language) => {\r\n        i18n.changeLanguage(language);\r\n    }\r\n\r\n    const logOut = (history) =>{\r\n        const exp = JSON.parse(sessionStorage.getItem('exp'));\r\n        if(exp * 1000 < Date.now()){\r\n            history.push({\r\n                pathname : '/login'\r\n            })\r\n            window.alert(t(\"tokenExpiredLogout\"));\r\n            sessionStorage.clear();\r\n            sessionStorage.setItem('logged', 'false');\r\n            setLogged(false);\r\n            setRole(undefined);\r\n        }\r\n    }\r\n\r\n  return (\r\n      <HashRouter>\r\n              <div>\r\n                  {(logged===true && role === patient) &&\r\n                    <Navigation changeLanguage={changeLanguage} t={t} setLogged={setLogged}/>}\r\n                  {(logged===true && role === doctor) &&\r\n                    <DoctorNavigation changeLanguage={changeLanguage} t={t} setLogged={setLogged}/>\r\n                  }\r\n                  <div className=\"wholePage\">\r\n                      <div className=\"content\" style={logged !== true ? {width: '100%', backgroundImage : `url(${background})`}: {width: '80%', backgroundImage: null}}>\r\n                          {logged === false &&\r\n                              <Switch>\r\n                                  <Route exact path=\"/login\" component={() => <LoginForm t={t} changeLanguage={changeLanguage} setLogged={setLogged} setRole={setRole}/>}/>\r\n                                  <Route exact path=\"/register\" component={() => <RegisterForm t={t} changeLanguage={changeLanguage}/>}/>\r\n                                  <Route exact path=\"/\">\r\n                                      <Redirect to=\"/login\"/>\r\n                                  </Route>\r\n                              </Switch>\r\n                          }\r\n                          {(role === patient && logged === true) &&\r\n                              <Switch>\r\n                                  <Route exact path=\"/my-account\" component={() => <PatientData t={t} logout={logOut} setLogged={setLogged}/>} />\r\n                                  <Route exact path=\"/my-files\"  component={() => <UploadNewFile t={t} logout={logOut}/>}/>\r\n                                  <Route exact path=\"/appointments\" component={() => <AppointmentList t={t} logout={logOut}/>}/>\r\n                                  <Route exact path=\"/new-appointment\" component={() => <NewAppointment t={t} logout={logOut}/>}/>\r\n                                  <Route exact path=\"/referrals\" component={() => <ReferralList t={t} logout={logOut}/>}/>\r\n                                  <Route exact path=\"/schedule\" component={() => <ScheduleForm t={t} logout={logOut}/>}/>\r\n                                  <Route exact path=\"/check-ups\" component={() => <CheckUpList t={t} logout={logOut}/>}/>\r\n                                  <Route exact path=\"/prescriptions\" component={() => <PrescriptionList t={t} logout={logOut}/>}/>\r\n                                  <Route path=\"*\" component={()=><NotFound t={t}/>}/>\r\n                              </Switch>\r\n                          }\r\n                          {(role === doctor && logged === true) &&\r\n                              <Switch>\r\n                                  <Route exact path=\"/today-visits\" component={() => <TodayAppointmentList t={t} logout={logOut}/>} />\r\n                                  <Route exact path=\"/today-visits/:id/details\" component={() => <AppointmentDetails t={t} logout={logOut}/>} />\r\n                                  <Route exact path=\"/today-visits/:id/details/visits-history\" component={() => <VisitsHistoryList t={t} logout={logOut}/>} />\r\n                                  <Route exact path=\"/today-visits/:id/details/check-ups\" component={() => <CheckUpList t={t} logout={logOut}/>} />\r\n                                  <Route exact path=\"/today-visits/:id/details/files\" component={() => <FilesTable t={t} logout={logOut}/>} />\r\n                                  <Route exact path=\"/check-ups\" component={() => <DoctorCheckUpList t={t} logout={logOut}/>} />\r\n                                  <Route path=\"*\" component={()=><NotFound t={t}/>}/>\r\n                              </Switch>\r\n                          }\r\n                      </div>\r\n                  </div>\r\n                  <Footer t={t}/>\r\n              </div>\r\n      </HashRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import i18n from 'i18next'\r\nimport Backend from 'i18next-http-backend'\r\nimport LanguageDetector from 'i18next-browser-languagedetector'\r\nimport { initReactI18next } from 'react-i18next'\r\n\r\ni18n.use(Backend).use(LanguageDetector).use(initReactI18next).init({\r\n    fallbackLng: 'pl',\r\n    debug: true,\r\n    detection: {\r\n        order: ['queryString', 'cookie'],\r\n        cache: ['cookie']\r\n    },\r\n    interpolation: {\r\n        escapeValue: false\r\n    }\r\n})\r\n\r\nexport default i18n","import React, {Suspense} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'flag-icon-css/css/flag-icons.min.css'\r\n\r\nimport './i18n'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Suspense fallback={<div>Loading...</div>}>\r\n        <App />\r\n    </Suspense>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}