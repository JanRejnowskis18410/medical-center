{"version":3,"sources":["logo.png","components/fragments/Navigation.js","components/referral/Referral.js","config/config.js","components/referral/ReferralList.js","components/patient/HomePage.js","components/appointment/Appointment.js","components/appointment/AppointmentList.js","components/appointment/NewAppointmentForm.js","components/appointment/AvailableAppointment.js","components/appointment/AppointmentModal.js","components/appointment/NewAppointment.js","components/checkup/CheckUp.js","components/checkup/CheckUpList.js","components/prescription/PrescriptionListTableRow.js","components/prescription/PrescriptionListTable.js","components/prescription/PrescriptionList.js","components/medication/Medication.js","components/prescription/PrescriptionRenewal.js","components/fragments/Footer.js","App.js","index.js"],"names":["Navigation","profileTitle","size","Navbar","bg","variant","expand","collapseOnSelect","sticky","className","Container","fluid","Brand","src","logo","Toggle","Collapse","id","Nav","to","activeHref","Link","exact","NavDropdown","title","Item","href","Divider","Referral","referral","setSelectedReferral","history","useHistory","useState","ref","setRef","useEffect","undefined","medicalService","name","issueDate","expiryDate","style","display","justifyContent","onClick","e","preventDefault","push","pathname","state","handleClick","baseUrl","ReferralList","referrals","setReferrals","selectedReferral","getReferrals","a","fetchReferrals","filter","filterReferrals","fetch","res","json","data","map","schema","yup","shape","firstName","min","max","required","lastName","pesel","birthDate","phoneNumber","email","street","streetNumber","city","postCode","country","HomePage","setPatient","setFirstName","setLastName","setPesel","setBirthDate","setPhone","setEmail","patientsFiles","setPatientFiles","setStreet","setStreetNumber","setCity","setPostCode","setCountry","getPatient","fetchPatient","patient","address","validationSchema","enableReinitialize","onSubmit","newObj","method","headers","body","JSON","stringify","then","catch","err","console","log","initialErrors","validateOnChange","validateOnMount","initialValues","handleChange","handleSubmit","values","touched","errors","isValid","Form","Row","Col","Group","Label","Control","type","placeholder","defaultValue","isInvalid","onChange","target","value","Feedback","Button","Appointment","appointment","setCancelledAppointment","app","setAppointment","open","setOpen","x","Date","getTimezoneOffset","formatYmd","date","toISOString","slice","setDate","getDate","confirmed","togglePanel","service","serviceName","doctor","updatedApp","window","alert","handleConfirmation","patientId","handleCancellation","recommendations","prescriptions","AppointmentList","appointments","setAppointments","appDate","setAppDate","filteredAppointments","setFilteredAppointments","canceledAppointment","checkAppId","getAppointments","fetchAppointments","apps","sort","b","result","res1","data1","res2","data2","concat","htmlFor","facilityAppointments","phoneAppointments","withRouter","languages","location","appointmentType","setAppointmentType","language","setLanguage","setService","receivedReferral","setSelectedDoctor","services","setServices","doctors","setDoctors","dateFrom","setDateFrom","dateTo","setDateTo","setErrors","getServices","fetchServices","doneByMedicalStaff","getDoctors","fetchDoctors","document","querySelector","disabled","facilityService","checked","newErrors","appType","serviceMess","findFormErrors","Object","keys","length","Check","label","Select","lang","clearReferralFields","clearService","ser","doc","AvailableAppointment","setOpenModal","setSelectedAppointment","AppointmentModal","selectedAppointment","setReferral","referralId","bookAnAppointment","receivedService","setReceivedService","openModal","setDoctor","getAvailableAppointments","fontFamily","CheckUp","props","this","setState","checkup","diagnosticTestName","appointmentDate","description","React","Component","CheckUpList","checkups","setCheckups","getCheckups","fetchCheckups","PrescriptionListTableRow","prescription","creationDate","medications","medicine","numberOfPackages","accessCode","PrescriptionListTable","prescriptionData","backgroundColor","width","PrescriptionList","setPrescriptions","getPrescriptions","fetchPrescriptions","Medication","medication","PrescriptionRenewal","medicines","setMedicines","getMedicines","med","extendable","doctorFirstName","doctorLastName","Footer","App","position","paddingBottom","path","component","NewAppointment","ReactDOM","render","StrictMode","getElementById"],"mappings":"4MAAe,MAA0B,iC,4DC8C1BA,MAxCf,WACI,IAAMC,EAAgB,cAAC,IAAD,CAAUC,KAAM,KACtC,OACQ,cAACC,EAAA,EAAD,CAAQC,GAAG,QAAQC,QAAQ,QAAQC,OAAO,KAAKC,iBAAiB,OAAOC,OAAO,MAAMC,UAAU,eAA9F,SACI,eAACC,EAAA,EAAD,CAAWC,OAAK,EAAhB,UACI,cAACR,EAAA,EAAOS,MAAR,CAAcH,UAAU,eAAxB,SAAuC,qBAAKI,IAAKC,MACjD,cAACX,EAAA,EAAOY,OAAR,CAAe,gBAAc,qBAC7B,eAACZ,EAAA,EAAOa,SAAR,CAAiBC,GAAG,8BAA8BR,UAAU,cAA5D,UACI,eAACS,EAAA,EAAD,CAAKT,UAAU,SAAf,UACI,cAAC,gBAAD,CAAeU,GAAG,UAAUC,WAAW,SAAvC,SACI,cAACF,EAAA,EAAIG,KAAL,CAAUC,OAAK,EAACb,UAAU,cAA1B,sBAEJ,cAAC,gBAAD,CAAeU,GAAG,eAAeC,WAAW,SAA5C,SACI,cAACF,EAAA,EAAIG,KAAL,CAAWC,OAAK,EAACb,UAAU,cAA3B,2BAEJ,cAAC,gBAAD,CAAeU,GAAG,UAAUC,WAAW,SAAvC,SACI,cAACF,EAAA,EAAIG,KAAL,CAAWC,OAAK,EAACb,UAAU,cAA3B,8BAEJ,cAAC,gBAAD,CAAeU,GAAG,WAAWC,WAAW,SAAxC,SACI,cAACF,EAAA,EAAIG,KAAL,CAAWC,OAAK,EAACb,UAAU,cAA3B,uBAEJ,cAAC,gBAAD,CAAeU,GAAG,WAAWC,WAAW,SAAxC,SACI,cAACF,EAAA,EAAIG,KAAL,CAAUC,OAAK,EAACb,UAAU,cAA1B,0BAGR,eAACc,EAAA,EAAD,CAAad,UAAU,mBAAmBe,MAAOvB,EAAcgB,GAAG,qBAAlE,UACI,cAACM,EAAA,EAAYE,KAAb,CAAkBC,KAAK,cAAvB,wBACA,eAACH,EAAA,EAAD,CAAaC,MAAM,aAAQP,GAAG,qBAA9B,UACI,cAACM,EAAA,EAAYE,KAAb,CAAkBC,KAAK,aAAvB,uBACA,cAACH,EAAA,EAAYE,KAAb,CAAkBC,KAAK,UAAvB,uBAEJ,cAACH,EAAA,EAAYI,QAAb,IACA,cAACJ,EAAA,EAAYE,KAAb,CAAkBC,KAAK,WAAvB,iC,uCCIbE,EAtCE,SAAC,GAAoC,IAAnCC,EAAkC,EAAlCA,SAAUC,EAAwB,EAAxBA,oBACnBC,EAAUC,cAChB,EAAsBC,mBAASJ,GAA/B,mBAAOK,EAAP,KAAYC,EAAZ,KAEAC,qBAAU,gBACUC,IAAbR,GACCM,EAAON,KAEb,CAACA,IAYP,OACI,sBAAKpB,UAAU,WAAf,UACI,qBAAKA,UAAU,eAAf,SACI,mBAAGA,UAAU,iBAAb,SAA+ByB,EAAII,eAAeC,SAGtD,sBAAK9B,UAAU,eAAf,UACI,mDAAsByB,EAAIM,aAC1B,4DAA0BN,EAAIO,iBAElC,uBACA,qBAAKC,MAAO,CAACC,QAAS,OAAQC,eAAgB,YAA9C,SAEI,wBAAQnC,UAAU,eAAeoC,QAAS,SAACC,GAAD,OAvB9B,SAACA,GACjBA,EAAEC,iBACFjB,EAAoBD,GAEpBE,EAAQiB,KAAK,CACTC,SAAU,eACVC,MAAOhB,IAiBwCiB,CAAYL,IAA3D,uCCrCCM,EAA6E,uCCmD3EC,EA9CM,WACjB,MAAkCpB,mBAAS,IAA3C,mBAAOqB,EAAP,KAAkBC,EAAlB,KACA,EAAgDtB,wBAASI,GAAzD,mBAAOmB,EAAP,KAAyB1B,EAAzB,KAEAM,qBAAU,WACN,IAAMqB,EAAY,uCAAG,4BAAAC,EAAA,sEACWC,IADX,OACPL,EADO,OAEbC,EAAaD,GAFA,2CAAH,qDAKlBG,MACF,IAEFrB,qBAAU,gBACgBC,IAAnBmB,GACCD,EAAaD,EAAUM,OAAOC,MAGpC,CAACL,IAGH,IAAMG,EAAc,uCAAG,8BAAAD,EAAA,sEACDI,MAAM,GAAD,OAAIV,EAAJ,0BADJ,cACbW,EADa,gBAEAA,EAAIC,OAFJ,cAEbC,EAFa,yBAIZA,GAJY,2CAAH,qDAOpB,SAASJ,EAAgBhC,GACrB,GAAGA,EAASZ,KAAOuC,EAAiBvC,GAChC,OAAOY,EAIf,OACI,sBAAKpB,UAAU,YAAf,UACI,qBAAKA,UAAU,aAAf,SACI,qDAEH6C,EAAUY,KAAI,SAACrC,GAAD,OACX,cAAC,EAAD,CAA4BA,SAAUA,EAAUC,oBAAqBA,GAAtDD,EAASZ,W,kDCrClCkD,EAASC,MAAaC,MAAM,CAC9BC,UAAWF,MAAaG,IAAI,EAAG,gDAAsCC,IAAI,GAAI,sDAAyCC,SAAS,kBAC/HC,SAAUN,MAAaG,IAAI,EAAG,+CAA0CC,IAAI,GAAI,qDAA6CC,SAAS,kBACtIE,MAAOP,MAAaG,IAAI,GAAI,wCAAmCC,IAAI,GAAI,wCAAmCC,SAAS,kBACnHG,UAAWR,MAAWK,SAAS,kBAC/BI,YAAaT,MAAaG,IAAI,EAAG,4CAA4CE,SAAS,kBACtFK,MAAOV,MAAaU,MAAM,kCAA6BL,SAAS,kBAChEM,OAAQX,MAAaG,IAAI,GAAGE,SAAS,kBACrCO,aAAcZ,MAAaK,SAAS,kBACpCQ,KAAMb,MAAaK,SAAS,kBAC5BS,SAAUd,MAAaK,SAAS,kBAChCU,QAASf,MAAaK,SAAS,oBA+NpBW,EA5NE,WAEb,MAA2BnD,mBAAS,IAApC,mBAAOgC,EAAP,KAAaoB,EAAb,KACA,EAAkCpD,wBAASI,GAA3C,mBAAOiC,EAAP,KAAkBgB,EAAlB,KACA,EAAgCrD,wBAASI,GAAzC,mBAAOqC,EAAP,KAAiBa,EAAjB,KACA,EAA0BtD,wBAASI,GAAnC,mBAAOsC,EAAP,KAAca,EAAd,KACA,EAAkCvD,wBAASI,GAA3C,mBAAOuC,EAAP,KAAkBa,EAAlB,KACA,EAAgCxD,wBAASI,GAAzC,mBAAOwC,EAAP,KAAoBa,EAApB,KACA,EAA0BzD,wBAASI,GAAnC,mBAAOyC,EAAP,KAAca,EAAd,KACA,EAAyC1D,wBAASI,GAAlD,mBAAOuD,EAAP,KAAsBC,EAAtB,KAEA,EAA4B5D,wBAASI,GAArC,mBAAO0C,EAAP,KAAee,EAAf,KACA,EAAwC7D,wBAASI,GAAjD,mBAAO2C,EAAP,KAAqBe,EAArB,KACA,EAAwB9D,wBAASI,GAAjC,mBAAO4C,GAAP,KAAae,GAAb,KACA,GAAgC/D,wBAASI,GAAzC,qBAAO6C,GAAP,MAAiBe,GAAjB,MACA,GAA8BhE,wBAASI,GAAvC,qBAAO8C,GAAP,MAAgBe,GAAhB,MAGA9D,qBAAU,WACN,IAAM+D,EAAU,uCAAG,4BAAAzC,EAAA,sEACO0C,KADP,OACTC,EADS,OAEfhB,EAAWgB,GAFI,2CAAH,qDAKhBF,MACD,IAEH/D,qBAAU,gBACMC,IAAT4B,IACCqB,EAAarB,EAAKK,WAClBiB,EAAYtB,EAAKS,UACjBc,EAASvB,EAAKU,OACdc,EAAaxB,EAAKW,WAClBc,EAASzB,EAAKY,aACdc,EAAS1B,EAAKa,OACde,EAAgB5B,EAAK2B,eACrB3B,EAAKqC,QAAUR,EAAU7B,EAAKqC,QAAQvB,QAAUe,OAAUzD,GAC1D4B,EAAKqC,QAAUP,EAAgB9B,EAAKqC,QAAQtB,cAAgBe,OAAgB1D,GAC5E4B,EAAKqC,QAAUN,GAAQ/B,EAAKqC,QAAQrB,MAAQe,QAAQ3D,GACpD4B,EAAKqC,QAAUL,GAAYhC,EAAKqC,QAAQpB,UAAYe,QAAY5D,GAChE4B,EAAKqC,QAAUJ,GAAWjC,EAAKqC,QAAQnB,SAAWe,QAAW7D,MAEnE,CAAC4B,IAEH,IAAMmC,GAAY,uCAAG,8BAAA1C,EAAA,sEACCI,MAAM,GAAD,OAAIV,EAAJ,gBADN,cACXW,EADW,gBAEEA,EAAIC,OAFN,cAEXC,EAFW,yBAIVA,GAJU,2CAAH,qDAoClB,OAAIA,EAIQ,sBAAKxD,UAAU,YAAf,UACI,qBAAKA,UAAU,aAAf,SACI,8CAEJ,cAAC,IAAD,CAAQ8F,iBAAkBpC,EAClBqC,oBAAoB,EACpBC,SAvCxB,WACI,IAAMC,EAAS,CACX,GAAM,EACNJ,QAAS,CACLvB,SACAC,eACAE,YACAD,QACAE,YAEJN,cACAP,YACAI,WACAI,QACAF,YACAD,QACAiB,iBAGJ9B,MAAM,GAAD,OAAIV,EAAJ,aAAuB,CACxBuD,OAAQ,MACRC,QAAS,CAAC,8BAA8B,GAA9B,OAAkCxD,GACxC,eAAgB,kCACpByD,KAAMC,KAAKC,UAAUL,KACtBM,MAAK,SAACjD,GAAD,OAAOA,EAAIC,UACdiD,OAAM,SAACC,GAAD,OAAOC,QAAQC,IAAIF,MAC9BC,QAAQC,IAAI9C,IAcQ+C,cAAe,GACfC,kBAAkB,EAClBC,iBAAiB,EACjBC,cAAe,CACnBlD,UAAYA,EACZI,SAAWA,EACXC,MAAQA,EACRC,UAAYA,EACZC,YAAcA,EACdC,MAAQA,EACRC,OAASA,EACTC,aAAeA,EACfC,KAAMA,GACNC,SAAWA,GACXC,QAAUA,IAjBd,SAmBK,gBACGsC,EADH,EACGA,aACAC,EAFH,EAEGA,aACAC,EAHH,EAGGA,OACAC,EAJH,EAIGA,QAEAC,GANH,EAKGC,QALH,EAMGD,QANH,OAQG,eAACE,EAAA,EAAD,CAAMtH,UAAU,qBAAqBgG,SAAUiB,EAA/C,UACI,eAACM,EAAA,EAAD,CAAKvH,UAAU,0BAAf,UACI,cAACwH,EAAA,EAAD,UACI,eAACF,EAAA,EAAKG,MAAN,WACI,cAACH,EAAA,EAAKI,MAAN,yBACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,OAAO9F,KAAK,YAAY+F,YAAY,YAAOpI,KAAK,KAAKqI,aAAcZ,EAAOrD,UAAWkE,YAAaX,EAAOvD,UAAWwD,QAASF,EAAQtD,YAAcuD,EAAOvD,UAAWmE,SAAU,SAAC3F,GAAKwC,EAAaxC,EAAE4F,OAAOC,UAC9N,cAACZ,EAAA,EAAKK,QAAQQ,SAAd,CAAuBP,KAAK,UAA5B,SAAuCR,EAAOvD,iBAGtD,cAAC2D,EAAA,EAAD,UACI,eAACF,EAAA,EAAKG,MAAN,WACI,cAACH,EAAA,EAAKI,MAAN,wBACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,OAAO9F,KAAK,WAAW+F,YAAY,WAAWpI,KAAK,KAAMqI,aAAcZ,EAAOjD,SAAU8D,YAAaX,EAAOnD,SAAUoD,QAASF,EAAQlD,WAAamD,EAAOnD,SAAU+D,SAAU,SAAC3F,GAAKyC,EAAYzC,EAAE4F,OAAOC,UAC7N,cAACZ,EAAA,EAAKK,QAAQQ,SAAd,CAAuBP,KAAK,UAA5B,SAAuCR,EAAOnD,mBAI1D,eAACsD,EAAA,EAAD,CAAKvH,UAAU,0BAAf,UACI,cAACwH,EAAA,EAAD,UACI,eAACF,EAAA,EAAKG,MAAN,WACI,cAACH,EAAA,EAAKI,MAAN,qBACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,OAAO9F,KAAK,QAAQ+F,YAAY,QAAQpI,KAAK,KAAKqI,aAAcZ,EAAOhD,MAAO6D,YAAaX,EAAOlD,MAAOmD,QAASF,EAAQjD,QAAUkD,EAAOlD,MAAO8D,SAAU,SAAC3F,GAAD,OAAK0C,EAAS1C,EAAE4F,OAAOC,UACtM,cAACZ,EAAA,EAAKK,QAAQQ,SAAd,CAAuBP,KAAK,UAA5B,SAAuCR,EAAOlD,aAGtD,cAACsD,EAAA,EAAD,UACI,eAACF,EAAA,EAAKG,MAAN,WACI,cAACH,EAAA,EAAKI,MAAN,8BACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,OAAO9F,KAAK,YAAY+F,YAAY,iBAAiBpI,KAAK,KAAKqI,aAAcZ,EAAO/C,UAAW4D,YAAaX,EAAOjD,UAAWkD,QAASF,EAAQhD,YAAciD,EAAOjD,UAAW6D,SAAU,SAAC3F,GAAD,OAAK2C,EAAa3C,EAAE4F,OAAOC,UACvO,cAACZ,EAAA,EAAKK,QAAQQ,SAAd,CAAuBP,KAAK,UAA5B,SAAuCR,EAAOjD,oBAI1D,eAACoD,EAAA,EAAD,CAAKvH,UAAU,0BAAf,UACI,cAACwH,EAAA,EAAD,UACI,eAACF,EAAA,EAAKG,MAAN,WACI,cAACH,EAAA,EAAKI,MAAN,uBACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,OAAO9F,KAAK,cAAc+F,YAAY,UAAUpI,KAAK,KAAKqI,aAAcZ,EAAO9C,YAAa2D,YAAaX,EAAOhD,YAAaiD,QAASF,EAAQ/C,cAAgBgD,EAAOhD,YAAa4D,SAAU,SAAC3F,GAAD,OAAK4C,EAAS5C,EAAE4F,OAAOC,UACtO,cAACZ,EAAA,EAAKK,QAAQQ,SAAd,CAAuBP,KAAK,UAA5B,SAAuCR,EAAOhD,mBAGtD,cAACoD,EAAA,EAAD,UACI,eAACF,EAAA,EAAKG,MAAN,WACI,cAACH,EAAA,EAAKI,MAAN,qBACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,QAAQ9F,KAAK,QAAQ+F,YAAY,QAAQpI,KAAK,KAAKqI,aAAcZ,EAAO7C,MAAO0D,YAAaX,EAAO/C,MAAOgD,QAASF,EAAQ9C,QAAU+C,EAAO/C,MAAO2D,SAAU,SAAC3F,GAAD,OAAK6C,EAAS7C,EAAE4F,OAAOC,UACvM,cAACZ,EAAA,EAAKK,QAAQQ,SAAd,CAAuBP,KAAK,UAA5B,SAAuCR,EAAO/C,gBAI1D,uBACA,eAACkD,EAAA,EAAD,CAAKvH,UAAU,0BAAf,UACI,cAACwH,EAAA,EAAD,UACI,eAACF,EAAA,EAAKG,MAAN,WACI,cAACH,EAAA,EAAKI,MAAN,qBACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,OAAO9F,KAAK,SAAS+F,YAAY,QAAQpI,KAAK,KAAKqI,aAAcZ,EAAO5C,OAAQyD,YAAaX,EAAO9C,OAAQ+C,QAASF,EAAQ7C,SAAW8C,EAAO9C,OAAQ0D,SAAU,SAAC3F,GAAD,OAAKgD,EAAUhD,EAAE4F,OAAOC,UAC5M,cAACZ,EAAA,EAAKK,QAAQQ,SAAd,CAAuBP,KAAK,UAA5B,SAAuCR,EAAO9C,cAGtD,cAACkD,EAAA,EAAD,UACI,eAACF,EAAA,EAAKG,MAAN,WACI,cAACH,EAAA,EAAKI,MAAN,qBACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,OAAO9F,KAAK,eAAe+F,YAAY,QAAQpI,KAAK,KAAKqI,aAAcZ,EAAO3C,aAAcwD,YAAaX,EAAO7C,aAAc8C,QAASF,EAAQ5C,eAAiB6C,EAAO7C,aAAcyD,SAAU,SAAC3F,GAAD,OAAKiD,EAAgBjD,EAAE4F,OAAOC,UAChP,cAACZ,EAAA,EAAKK,QAAQQ,SAAd,CAAuBP,KAAK,UAA5B,SAAuCR,EAAO7C,uBAI1D,eAACgD,EAAA,EAAD,CAAKvH,UAAU,0BAAf,UACI,cAACwH,EAAA,EAAD,UACI,eAACF,EAAA,EAAKG,MAAN,WACI,cAACH,EAAA,EAAKI,MAAN,sBACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,OAAO9F,KAAK,OAAO+F,YAAY,SAASpI,KAAK,KAAKqI,aAAcZ,EAAO1C,KAAMuD,YAAaX,EAAO5C,KAAM6C,QAASF,EAAQ3C,OAAS4C,EAAO5C,KAAMwD,SAAUhB,IAC3K,cAACM,EAAA,EAAKK,QAAQQ,SAAd,CAAuBP,KAAK,UAA5B,SAAuCR,EAAO5C,YAGtD,cAACgD,EAAA,EAAD,UACI,eAACF,EAAA,EAAKG,MAAN,WACI,cAACH,EAAA,EAAKI,MAAN,4BACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,OAAO9F,KAAK,WAAW+F,YAAY,eAAepI,KAAK,KAAKqI,aAAcZ,EAAOzC,SAAUsD,YAAaX,EAAO3C,SAAU4C,QAASF,EAAQ1C,WAAa2C,EAAO3C,SAAUuD,SAAU,SAAC3F,GAAD,OAAKmD,GAAYnD,EAAE4F,OAAOC,UAC/N,cAACZ,EAAA,EAAKK,QAAQQ,SAAd,CAAuBP,KAAK,UAA5B,SAAuCR,EAAO3C,mBAI1D,eAAC8C,EAAA,EAAD,CAAKvH,UAAU,0BAAf,UACI,cAACwH,EAAA,EAAD,UACI,eAACF,EAAA,EAAKG,MAAN,WACI,cAACH,EAAA,EAAKI,MAAN,4BACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,OAAO9F,KAAK,UAAU+F,YAAY,eAAUpI,KAAK,KAAKqI,aAAcZ,EAAOxC,QAASqD,YAAaX,EAAO1C,QAAS2C,QAASF,EAAQzC,UAAY0C,EAAO1C,QAASsD,SAAU,SAAC3F,GAAD,OAAKoD,GAAWpD,EAAE4F,OAAOC,UACpN,cAACZ,EAAA,EAAKK,QAAQQ,SAAd,CAAuBP,KAAK,UAA5B,SAAuCR,EAAO1C,eAGtD,cAAC8C,EAAA,EAAD,UACI,cAACF,EAAA,EAAKG,MAAN,SAGR,qBAAKxF,MAAO,CAACC,QAAQ,OAAQC,eAAgB,UAA7C,SACI,cAACiG,EAAA,EAAD,CAAQxI,QAAQ,UAAUH,KAAK,KAAKmI,KAAK,SAAzC,+BAjIrB,M,iBCoBAS,EAnHK,SAAC,GAA2C,IAA1CC,EAAyC,EAAzCA,YAAaC,EAA4B,EAA5BA,wBAC/B,EAA8B/G,mBAAS8G,GAAvC,mBAAOE,EAAP,KAAYC,EAAZ,KACA,EAAwBjH,oBAAS,GAAjC,mBAAOkH,EAAP,KAAaC,EAAb,KAEAhH,qBAAU,gBACWC,IAAd0G,GACCG,EAAeH,KAGpB,CAACA,IA+CJ,IAAIM,EAAuC,KAAlC,IAAIC,MAAQC,oBACfC,EAAY,SAAAC,GAAI,OAAIA,EAAKC,cAAcC,MAAM,EAAG,KAClD,OACI,sBAAKlJ,UAAWwI,EAAIQ,KAAQ,IAAIH,MAAK,IAAIA,MAAOM,SAAQ,IAAIN,MAAOO,UAAU,IAAO,IAAIP,KAAKL,EAAIQ,KAAKE,MAAM,EAAE,KAAS,oCAChH,IAAIL,MAAK,IAAIA,MAAOM,SAAQ,IAAIN,MAAOO,UAAU,IAAKA,YAAe,IAAIP,KAAKL,EAAIQ,KAAKE,MAAM,EAAE,KAAME,YAAgC,IAAlBZ,EAAIa,UAAuB,qCAC/IN,EAAU,IAAIF,QAAYL,EAAIQ,KAAKE,MAAM,EAAE,KAAW,IAAIL,MAAK,IAAIA,MAAOM,SAAQ,IAAIN,MAAOO,UAAU,IAAKA,YAAe,IAAIP,KAAKL,EAAIQ,KAAKE,MAAM,EAAE,KAAME,YAAgC,IAAlBZ,EAAIa,UAAsB,iCACrM,oCAAuC,GAAIjH,QAAS,SAAAC,GAAC,OAnDjE,SAAqBA,GACjBA,EAAEC,iBACFqG,GAASD,GAiDsDY,CAAYjH,IAHvE,UAII,sBAAKrC,UAAU,MAAf,UACI,mBAAGA,UAAU,8BAAb,SAA6CwI,EAAIe,QAAWf,EAAIe,QAAQzH,KAAQ0G,EAAIgB,cACpF,sBAAKxJ,UAAU,OAAf,UACI,sCACA,4BAAIsI,EAAYU,KAAO,IAAIH,KAAK,IAAIA,KAAKP,EAAYU,MAAMJ,GAAGK,cAAcC,MAAM,EAAE,IAAM,KAC1F,4BAAIZ,EAAYU,KAAO,IAAIH,KAAK,IAAIA,KAAKP,EAAYU,MAAMJ,GAAGK,cAAcC,MAAM,GAAG,IAAM,WAGlGV,EAAIQ,KAAM,sBAAK/G,MAAO,CAACC,QAAS,OAAQC,eAAe,iBAA7C,UACP,gCACI,cAAC,IAAD,CAAW1C,KAAM,KADrB,YAEe+I,EAAIiB,OAASjB,EAAIiB,OAAO5F,UAAY,IAAM2E,EAAIiB,OAAOxF,SAAY,MAE5E,IAAI4E,MAAK,IAAIA,MAAOM,SAAQ,IAAIN,MAAOO,UAAU,IAAKA,YAAe,IAAIP,KAAKL,EAAIQ,KAAKE,MAAM,EAAE,KAAME,YAAkC,IAAlBZ,EAAIa,WACzH,cAACjB,EAAA,EAAD,CAAQxI,QAAQ,SAASH,KAAK,KAAK2C,QAAS,SAAAC,GAAC,OA7DjE,SAA4BA,GACxBA,EAAEC,iBACF,IAAIoH,EAAalB,EACjBkB,EAAWL,WAAY,EACvBZ,EAAeiB,GAEfrG,MAAM,GAAD,OAAIV,EAAJ,yBAA4B2F,EAAY9H,GAAxC,YAAsD,CACvD0F,OAAQ,QACRC,QAAQ,CACJ,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjB+C,WAAY,MAEjB9C,MAAK,SAACjD,GAAD,OAAOA,EAAIC,UACdgD,KAAKoD,OAAOC,MAAM,qCAClBpD,OAAM,SAACC,GAAD,OAAOC,QAAQC,IAAIF,MA6CiCoD,CAAmBxH,IAAlE,wCAED0G,EAAU,IAAIF,MAAUE,EAAU,IAAIF,KAAK,IAAIA,KAAKL,EAAIQ,MAAMJ,MAAyB,IAAlBJ,EAAIa,WACxE,cAACjB,EAAA,EAAD,CAAQxI,QAAQ,UAAUH,KAAK,KAAK2C,QAAS,SAAAC,GAAC,OA7ClE,SAA4BA,GACxBA,EAAEC,iBACF,IAAIoH,EAAalB,EACjBkB,EAAWI,UAAY,KACvBvB,EAAwBmB,GACxBjB,EAAeiB,GAGfrG,MAAM,GAAD,OAAIV,EAAJ,yBAA4B2F,EAAY9H,GAAxC,WAAoD,CACrD0F,OAAQ,QACRC,QAAQ,CACJ,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBwD,UAAY,SAEjBvD,MAAK,SAACjD,GAAD,OAAOA,EAAIC,UACdgD,KAAKoD,OAAOC,MAAM,sCAClBpD,OAAM,SAACC,GAAD,OAAOC,QAAQC,IAAIF,MA2BkCsD,CAAmB1H,IAAnE,yCAEC,GACRmG,EAAIwB,gBAAmB,mCACnBtB,EACG,gCACI,uBACA,sBAAK1I,UAAU,cAAf,UACI,cAAC,IAAD,CAASP,KAAM,KACf,mBAAGO,UAAU,SAAb,0BAEJ,6BACI,6BAAKwI,EAAIwB,oBAEb,uBAEA,sBAAKhK,UAAU,cAAf,UACI,cAAC,IAAD,CAAQP,KAAM,KACd,mBAAGO,UAAU,SAAb,qCAEJ,4BAAIwI,EAAIgB,cACR,uBAEA,sBAAKxJ,UAAU,cAAf,UACI,cAAC,IAAD,CAAaP,KAAM,KACnB,mBAAGO,UAAU,SAAb,0BAEJ,4BAAIwI,EAAIyB,cAAgB,6CAAoC,mBAEtD,OACR,SCHXC,G,OA3GS,WACpB,IAGA,EAAwC1I,mBAAS,IAAjD,mBAAO2I,EAAP,KAAqBC,EAArB,KACA,EAA8B5I,oBAAmB,IAAIqH,MAJtBI,cAAcC,MAAM,EAAE,KAIrD,mBAAOmB,EAAP,KAAgBC,EAAhB,KACA,EAAwD9I,mBAAS,CAAC2I,IAAlE,mBAAOI,EAAP,KAA6BC,EAA7B,KACA,EAAuDhJ,wBAASI,GAAhE,mBAAO6I,EAAP,KAA4BlC,EAA5B,KACIjH,EAAUC,cAcd,SAASmJ,EAAWlC,GAChB,OAAuB,MAAhBA,EAAIsB,UAbfnI,qBAAU,WACN,IAAMgJ,EAAe,uCAAG,4BAAA1H,EAAA,sEACO2H,IACtBrE,MAAK,SAAAsE,GAAI,OAAEA,EAAKC,MAAK,SAAC7H,EAAE8H,GAAH,OAAO,IAAIlC,KAAKkC,EAAE/B,MAAQ,IAAIH,KAAK5F,EAAE+F,YAF3C,OACdmB,EADc,OAGpBC,EAAgBD,GAChBK,EAAwBL,GAJJ,2CAAH,qDAOrBQ,MACD,CAACF,IAQJ9I,qBAAU,WACN,QAAyBC,IAAtB6I,EAAgC,CAC/B,IAAMO,EAASb,EAAahH,OAAOuH,GACnCN,EAAgBY,MAEtB,CAACP,IAGH,IAAMG,EAAiB,uCAAG,oCAAA3H,EAAA,sEACHI,MAAM,GAAD,OAAIV,EAAJ,iCADF,cAChBsI,EADgB,gBAEFA,EAAK1H,OAFH,cAEhB2H,EAFgB,gBAGH7H,MAAM,GAAD,OAAIV,EAAJ,oCAHF,cAGhBwI,EAHgB,iBAIFA,EAAK5H,OAJH,eAIhB6H,EAJgB,OAKhB5H,EAAO4H,EAAMC,OAAOH,GALJ,kBAOf1H,GAPe,4CAAH,qDA6BvB,OACI,sBAAKxD,UAAU,YAAf,UACI,qBAAKA,UAAU,aAAf,SACI,gDAEJ,qBAAKA,UAAU,wBAAf,SACI,sBAAKA,UAAU,sBAAf,UACI,sBAAKA,UAAU,aAAf,UACI,sBAAKA,UAAU,WAAf,UACI,uBAAO4H,KAAK,QAAQpH,GAAG,MAAMsB,KAAK,MAAMoG,MAAM,MAAMF,SAjBtD,WAClBwC,EAAwBL,MAiBJ,uBAAOmB,QAAQ,MAAf,0BAEJ,sBAAKtL,UAAU,WAAf,UACI,uBAAO4H,KAAK,QAAQpH,GAAG,SAASsB,KAAK,MAAMoG,MAAM,SAASF,SA/BrD,WACzB,IAAIuD,EAAuBpB,EAAahH,QAAO,SAAAmF,GAAW,MA7C7C,aA6CkDA,EAAYV,QAC3E4C,EAAwBe,MA8BJ,uBAAOD,QAAQ,SAAf,qCAEJ,sBAAKtL,UAAU,WAAf,UACI,uBAAO4H,KAAK,QAAQpH,GAAG,OAAOsB,KAAK,MAAMoG,MAAM,OAAOF,SA9BpD,WACtB,IAAIwD,EAAoBrB,EAAahH,QAAO,SAAAmF,GAAW,MAjD7C,cAiDkDA,EAAYV,QACxE4C,EAAwBgB,MA6BJ,uBAAOF,QAAQ,OAAf,8BAGR,8BACI,wBAAQtL,UAAU,eAAeoC,QA1BjC,WAChBd,EAAQiB,KAAK,iBAyBG,wCAIZ,qBAAKvC,UAAU,UAAf,SACQ,cAACsH,EAAA,EAAD,UACI,eAACA,EAAA,EAAKG,MAAN,WACI,cAACH,EAAA,EAAKI,MAAN,oBACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,OAAOI,SAAU,SAAC3F,GAAD,OAAOiI,EAAWjI,EAAE4F,OAAOC,QAAQA,MAAOmC,WAI9F,qBAAKrK,UAAU,kBAAf,SACKuK,EAAqB9G,KAAI,SAAC6E,GAAD,OACtB,cAAC,EAAD,CAAkCA,YAAaA,EAAaC,wBAAyBA,GAAnED,EAAY9H,c,eCmMnCiL,eArSY,SAAC,GAAsB,IAArBd,EAAoB,EAApBA,gBAGnB5B,EAAY,SAAAC,GAAI,OAAIA,EAAKC,cAAcC,MAAM,EAAE,KAE/CwC,EAAY,CAAC,SAAU,aAEvBtK,EALQG,cAKWoK,SAASlJ,MAElC,EAA8CjB,wBAASI,GAAvD,mBAAOgK,EAAP,KAAwBC,EAAxB,KACA,EAAgCrK,mBAASkK,EAAU,IAAnD,mBAAOI,EAAP,KAAiBC,EAAjB,KACA,EAA8BvK,wBAASI,GAAvC,mBAAO2H,EAAP,KAAgByC,EAAhB,KACA,EAAgDxK,mBAASJ,QAAsBQ,GAA/E,mBAAOqK,EAAP,KACA,GADA,KACgDzK,mBAASyK,QAAsCrK,IAA/F,mBAAOmB,EAAP,KAAyB1B,EAAzB,KACA,EAAoCG,wBAASI,GAA7C,mBAAO6H,EAAP,KAAeyC,EAAf,KAEA,EAAkC1K,mBAAS,IAA3C,mBAAOqB,EAAP,KAAkBC,EAAlB,KACA,EAAgCtB,mBAAS,IAAzC,mBAAO2K,EAAP,KAAiBC,EAAjB,KACA,EAA8B5K,mBAAS,IAAvC,mBAAO6K,EAAP,KAAgBC,EAAhB,KACA,EAAgC9K,mBAASuH,EAAU,IAAIF,OAAvD,oBAAO0D,GAAP,MAAiBC,GAAjB,MACA,GAA4BhL,mBAASuH,EAAU,IAAIF,MAAK,IAAIA,MAAOM,SAAQ,IAAIN,MAAOO,UAAU,OAAhG,qBAAOqD,GAAP,MAAeC,GAAf,MACA,GAA4BlL,mBAAS,IAArC,qBAAO4F,GAAP,MAAeuF,GAAf,MAEAhL,qBAAU,WACN,QAAuBC,IAApBgK,EACC,GAAuB,aAApBA,EAA+B,CAC9B,IAAMgB,EAAW,uCAAG,4BAAA3J,EAAA,sEACO4J,IAAc,GADrB,OACVV,EADU,OAEhBC,EAAYD,GAFI,2CAAH,qDAIjBS,QAEC,CACD,IAAMA,EAAW,uCAAG,4BAAA3J,EAAA,sEACO4J,IAAc,GADrB,OACVV,EADU,OAEhBC,EAAYD,GAFI,2CAAH,qDAIjBS,OAGV,CAAChB,IAEHjK,qBAAU,WACN,QAAeC,IAAZ2H,EACC,IAAkC,IAA/BA,EAAQuD,mBAA6B,CACpC,IAAMC,EAAU,uCAAG,4BAAA9J,EAAA,sEACO+J,KADP,OACTX,EADS,OAEfC,EAAWD,GACUY,SAASC,cAAc,YAC/BC,UAAW,EAJT,2CAAH,qDAMhBJ,QACC,CACoBE,SAASC,cAAc,YAC/BC,UAAW,KAIlC,CAAC5D,IAEH5H,qBAAU,WACN,QAAwBC,IAArBqK,EAA+B,CAE9B,GADA5K,EAAoB4K,IACmC,IAApDA,EAAiBpK,eAAeuL,gBAC/BvB,EAAmB,YACMoB,SAASC,cAAc,aAC/BG,SAAU,OAE3BxB,EAAmB,SACGoB,SAASC,cAAc,UAC/BG,SAAU,EAE5BrB,EAAWC,EAAiBpK,mBAGlC,CAACoK,IAEHtK,qBAAU,WACN,QAAwBC,IAArBmB,EAA+B,CAC9B,IAAuD,IAApDA,EAAiBlB,eAAeuL,gBAC/BvB,EAAmB,YACMoB,SAASC,cAAc,aAC/BG,SAAU,OAE3BxB,EAAmB,SACGoB,SAASC,cAAc,UAC/BG,SAAU,EAE5BrB,EAAWjJ,EAAiBlB,mBAGjC,CAACkB,IAIJpB,qBAAU,WACN,IAAMqB,EAAY,uCAAG,4BAAAC,EAAA,sEACOC,KADP,OACXL,EADW,OAEjBC,EAAaD,GAFI,2CAAH,qDAIlBG,MACD,IAGH,IAAME,GAAc,uCAAG,8BAAAD,EAAA,sEACDI,MAAM,GAAD,OAAIV,EAAJ,0BADJ,cACbW,EADa,gBAEAA,EAAIC,OAFJ,cAEbC,EAFa,yBAIZA,GAJY,2CAAH,qDAOdwJ,GAAY,uCAAG,8BAAA/J,EAAA,yDAED,WAAb6I,EAFc,gCAGDzI,MAAM,UAAGV,EAAH,mDAA4D4G,EAAQ/I,IAHzE,OAGb8C,EAHa,6CAKDD,MAAM,UAAGV,EAAH,mDAA4D4G,EAAQ/I,IALzE,OAKb8C,EALa,+BAQEA,EAAIC,OARN,eAQXC,EARW,yBAUVA,GAVU,4CAAH,qDAaZqJ,GAAa,uCAAG,WAAOjF,GAAP,iBAAA3E,EAAA,0DAEN,IAAT2E,EAFe,gCAGFvE,MAAM,GAAD,OAAIV,EAAJ,mCAHH,OAGdW,EAHc,6CAKFD,MAAM,GAAD,OAAIV,EAAJ,oCALH,OAKdW,EALc,+BAQCA,EAAIC,OARL,eAQZC,EARY,yBAUXA,GAVW,4CAAH,sDAiDnB,SAASyD,GAAa5E,GAClBA,EAAEC,iBAEF,IAAM8E,EAtCa,WACnB,IAAMkG,EAAY,GASlB,YARuB1L,IAApBgK,IACC0B,EAAUC,QAAU,kDAGT3L,IAAZ2H,IACC+D,EAAUE,YAAc,mDAGrBF,EA4BQG,GAEZC,OAAOC,KAAKvG,GAAQwG,OAAS,EAC5BjB,GAAUvF,GAIFuD,EAAgBiB,EAAiBE,EAAUvC,OAFrC3H,IAAX6H,EAEyDA,EAMA,KANQ8C,GAAUE,QADlD7K,IAArBmB,EAC+EA,EAEA,MAa9F,OACgB,eAACuE,EAAA,EAAD,CAAMtH,UAAU,qBAAhB,UACI,eAACsH,EAAA,EAAKG,MAAN,CAAYzH,UAAU,OAAtB,UACI,cAACsH,EAAA,EAAKI,MAAN,0BACA,cAACJ,EAAA,EAAKuG,MAAN,CAAYjG,KAAK,QAAQ9F,KAAK,OAAOtB,GAAG,WAAWsN,MAAM,gBAAa1L,QAAS,SAACC,GAC5EwJ,EAAmB,YACdzE,GAAM,SACPuF,GAAU,2BACHvF,IADE,kBAEJ,UAAW,SAErBW,YAAaX,GAAOmG,UACvB,cAACjG,EAAA,EAAKuG,MAAN,CAAYjG,KAAK,QAAQ9F,KAAK,OAAOtB,GAAG,QAAQsN,MAAM,aAAa1L,QAAS,SAACC,GACzEwJ,EAAmB,SACdzE,GAAM,SACPuF,GAAU,2BACHvF,IADE,kBAEJ,UAAW,SAErBW,YAAaX,GAAOmG,UACvB,cAACjG,EAAA,EAAKK,QAAQQ,SAAd,CAAuBP,KAAK,UAA5B,SAAuCR,GAAOmG,aAElD,eAAChG,EAAA,EAAD,CAAKvH,UAAU,0BAAf,UACI,cAACwH,EAAA,EAAD,UACI,eAACF,EAAA,EAAKG,MAAN,WACI,cAACH,EAAA,EAAKI,MAAN,0BACA,cAACJ,EAAA,EAAKyG,OAAN,CAAavN,GAAG,mBAAhB,SACKkL,EAAUjI,KAAI,SAACuK,GAAD,OACX,wBAAQ9F,MAAO8F,EAAM5L,QAAS,SAACC,GAAD,OAAK0J,EAAYiC,IAA/C,SAAuDA,cAKvE,cAACxG,EAAA,EAAD,UACI,eAACF,EAAA,EAAKG,MAAN,WACI,cAACH,EAAA,EAAKI,MAAN,2BACA,eAACJ,EAAA,EAAKyG,OAAN,CAAavN,GAAG,mBAAhB,UACI,iCAAUuC,EAAmBA,EAAiBhB,UAAY,4BACzDgB,GACD,wBAAQX,QAAS,SAAAC,IAtFrD,SAA6BA,GACzBA,EAAEC,iBACFjB,OAAoBO,GACpBiK,OAAmBjK,GACMqL,SAASC,cAAc,aAC/BG,SAAU,EACLJ,SAASC,cAAc,UAC/BG,SAAU,EACxBrB,OAAWpK,GACXwK,EAAY,IACZE,EAAW,IA4E0C2B,CAAoB5L,IAAzC,qCAECQ,EAAUY,KAAI,SAAChC,GAAD,OACX,wBAAQyG,MAAOzG,EAAKW,QAAS,SAACC,GAAD,OAAKhB,EAAoBI,IAAtD,SAA6DA,EAAIM,0BAMrF,eAACuF,EAAA,EAAKG,MAAN,CAAYzH,UAAU,OAAtB,UACI,cAACsH,EAAA,EAAKI,MAAN,2BACA,eAACJ,EAAA,EAAKyG,OAAN,CAAavN,GAAK,gBAAgBuH,YAAaX,GAAOoG,YAAtD,UACI,wBAAQpL,QAAS,SAAAC,GAAC,OArF9C,SAAsBA,QACMT,IAArBmB,IACCV,EAAEC,iBACF0J,OAAWpK,GACX0K,EAAW,KAiF6B4B,CAAa7L,IAAjC,SAAsCU,EAAkBA,EAAiBlB,eAAeC,KAAO,6BAC9FqK,EAAS1I,KAAI,SAAC0K,GAAD,OACV,wBAAQjG,MAAOiG,EAAIrM,KAAMM,QAAS,SAACC,GAC/B2J,EAAWmC,GACN/G,GAAM,aACPuF,GAAU,2BACHvF,IADE,kBAEJ,cAAe,SAL5B,SAOI+G,EAAIrM,aAGhB,cAACwF,EAAA,EAAKK,QAAQQ,SAAd,CAAuBP,KAAK,UAA5B,SAAuCR,GAAOoG,iBAElD,eAAClG,EAAA,EAAKG,MAAN,CAAYzH,UAAU,OAAtB,UACI,cAACsH,EAAA,EAAKI,MAAN,sBACA,eAACJ,EAAA,EAAKyG,OAAN,CAAavN,GAAG,UAAhB,UACI,wBAAQ0H,MAAM,IAAd,6BACCmE,EAAQ5I,KAAI,SAAC2K,GAAD,OACT,wBAAQlG,MAAOkG,EAAIvK,UAAY,IAAMuK,EAAInK,SAAU7B,QAAS,SAACC,GAAD,OAAK6J,EAAkBkC,IAAnF,SAA0FA,EAAIvK,UAAY,IAAMuK,EAAInK,oBAIhI,eAACsD,EAAA,EAAD,CAAKvH,UAAU,0BAAf,UACI,cAACwH,EAAA,EAAD,UACI,eAACF,EAAA,EAAKG,MAAN,WACI,cAACH,EAAA,EAAKI,MAAN,uBACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,OAAOC,YAAY,WAAWK,MAAOqE,GAAUvE,SAAU,SAAC3F,GAAD,OAAKmK,GAAYnK,EAAE4F,OAAOC,eAG9G,cAACV,EAAA,EAAD,UACI,eAACF,EAAA,EAAKG,MAAN,WACI,cAACH,EAAA,EAAKI,MAAN,uBACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,OAAOC,YAAY,WAAWK,MAAOuE,GAAQzE,SAAU,SAAC3F,GAAD,OAAKqK,GAAUrK,EAAE4F,OAAOC,kBAI9G,qBAAKjG,MAAO,CAACC,QAAQ,OAAQC,eAAgB,UAA7C,SACI,cAACiG,EAAA,EAAD,CAAQxI,QAAQ,UAAUwC,QAAS,SAAAC,GAAC,OAAE4E,GAAa5E,IAAnD,mCC9QbgM,EAzBc,SAAC,GAAwD,IAAvD/F,EAAsD,EAAtDA,YAAagG,EAAyC,EAAzCA,aAAcC,EAA2B,EAA3BA,uBAQtD,IAAI3F,EAAuC,KAAlC,IAAIC,MAAQC,oBACrB,OACI,sBAAK9I,UAAU,uBAAuBe,MAAO,sBAA7C,UACI,sBAAKf,UAAU,2BAAf,UACI,4BAAI,IAAI6I,KAAK,IAAIA,KAAKP,EAAYU,MAAMJ,GAAGK,cAAcC,MAAM,EAAE,MACjE,4BAAI,IAAIL,KAAK,IAAIA,KAAKP,EAAYU,MAAMJ,GAAGK,cAAcC,MAAM,GAAG,SAEtE,qBAAKlJ,UAAU,6BAAf,SACI,4BAAIsI,EAAYmB,OAAS,MAAMnB,EAAYmB,OAAO5F,UAAY,IAAKyE,EAAYmB,OAAOxF,SAAW,wBAErG,qBAAKjE,UAAU,0BAAf,SACI,wBAAQA,UAAU,eAAeoC,QAAS,SAACC,GAAD,OAjBtD,SAAqBA,GACjBA,EAAEC,iBACFiM,EAAuBjG,GACvBgG,GAAa,GAc0C5L,CAAYL,IAA3D,2BC0FDmM,EA1GU,SAAC,GAA2D,IAA1DC,EAAyD,EAAzDA,oBAAqBH,EAAoC,EAApCA,aAAcvL,EAAsB,EAAtBA,iBACpDzB,EAAUC,cAChB,EAAsCC,mBAASiN,GAA/C,mBAAOnG,EAAP,KAAoBG,EAApB,KACA,EAAgCjH,mBAASuB,GAAzC,mBAAO3B,EAAP,KAAiBsN,EAAjB,KAEA/M,qBAAU,gBACqBC,IAAxB6M,GACChG,EAAegG,KAGpB,CAACA,IAEJ9M,qBAAU,gBACkBC,IAArBmB,GACC2L,EAAY3L,KAElB,CAACA,IAEH,IAAI6F,EAAuC,KAAlC,IAAIC,MAAQC,oBAuCrB,IAAkBE,EAClB,OACI,qBAAKhJ,UAAU,kBAAf,SACI,sBAAKA,UAAU,iBAAf,UACI,qBAAKA,UAAU,gBAAf,SACI,wBAAQoC,QAAS,kBAAIkM,GAAa,IAAlC,mBAEJ,sBAAKtO,UAAU,aAAf,UACI,oEACA,0BAEJ,sBAAKA,UAAU,YAAf,UACI,sBAAKA,UAAU,eAAf,UACI,sCACA,4BAAI,IAAI6I,KAAK,IAAIA,KAAKP,EAAYU,MAAMJ,GAAGK,cAAcC,MAAM,EAAE,SAErE,sBAAKlJ,UAAU,eAAf,UACI,yCACA,4BAAI,IAAI6I,KAAK,IAAIA,KAAKP,EAAYU,MAAMJ,GAAGK,cAAcC,MAAM,GAAG,SAEtE,sBAAKlJ,UAAU,eAAf,UACI,4CACA,4BAAyB,aAArBsI,EAAYV,KAAsB,uBAAsB,kBAEhE,sBAAK5H,UAAU,eAAf,UACI,6CACA,4BAAIsI,EAAYiB,QAAQzH,UAE3BwG,EAAYmB,QAAW,sBAAKzJ,UAAU,eAAf,UACpB,wCACA,4BAAIsI,EAAYmB,OAAO5F,UAAY,IAAMyE,EAAYmB,OAAOxF,cAElD,OAAb7C,GAAqB,sBAAKpB,UAAU,eAAf,UAClB,0DACA,4BAAIoB,EAAW,MAAQ,WAEzB,IAAIyH,KAAK,IAAIA,KAAKP,EAAYU,MAAMJ,GAAGK,cAAcC,MAAM,EAAE,OApC7DF,EAoCgF,IAAIH,KApC5EG,EAAKC,cAAcC,MAAM,EAAG,MAoC6D,qBAAKlJ,UAAU,UAAf,SAC/F,6EAER,sBAAKA,UAAU,cAAf,UACI,wBAAQoC,QAAS,kBAAIkM,GAAa,IAAQtO,UAAU,eAApD,oBACA,wBAAQoC,QAAS,SAACC,GAAD,OA9EjC,SAA2BA,GAGvB,IACImB,EAHJnB,EAAEC,iBAKEkB,EADY,OAAbpC,EACQ,CACH0I,UAAY,EACZ6E,WAAavN,EAASZ,IAGnB,CACHsJ,UAAY,IAIP,IAAIjB,MAbcI,cAAcC,MAAM,EAAG,MAazB,IAAIL,KAAK,IAAIA,KAAKP,EAAYU,MAAMJ,GAAGK,cAAcC,MAAM,EAAE,MACtF1F,EAAI,2BACGA,GADH,IAEA6F,WAAY,KAIpBhG,MAAM,GAAD,OAAIV,EAAJ,yBAA4B8L,EAAoBjO,GAAhD,YAA6D,CAC9D0F,OAAQ,QACRC,QAAQ,CACJ,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU9C,KACtB+C,MAAK,SAACjD,GAAD,OAASA,EAAIC,UAChBgD,KAAKoD,OAAOC,MAAM,4BAClBrD,KAAKjF,EAAQiB,KAAK,CACfC,SAAW,aACXgE,OAAM,SAACC,GAAD,OAAQC,QAAQC,IAAIF,MA6CAmI,CAAkBvM,IAAxC,wCCrBLoJ,eAzEQ,WACnB,MAAwCjK,mBAAS,IAAjD,mBAAO2I,EAAP,KAAqBC,EAArB,KACA,EAA8C5I,wBAASI,GAAvD,mBAAOiN,EAAP,KAAwBC,EAAxB,KACA,EAAsDtN,wBAASI,GAA/D,mBAAO6M,EAAP,KAA4BF,EAA5B,KACA,EAAgD/M,wBAASI,GAAzD,mBAAOmB,EAAP,KAAyB1B,EAAzB,KACA,EAAkCG,oBAAS,GAA3C,mBAAOuN,EAAP,KAAkBT,EAAlB,KACA,EAAgC9M,wBAASI,GAAzC,mBAAO2K,EAAP,KAAiBC,EAAjB,KACA,EAA4BhL,wBAASI,GAArC,mBAAO6K,EAAP,KAAeC,EAAf,KACA,EAA4BlL,wBAASI,GAArC,mBAAO6H,EAAP,KAAeuF,EAAf,KACA,EAAgCxN,wBAASI,GAAzC,mBAAOkK,EAAP,KAAiBC,EAAjB,KAgBApK,qBAAU,WACN,QAAuBC,IAApBiN,EAA8B,CAC7B,IAAMI,EAAwB,uCAAG,4BAAAhM,EAAA,sEACV2H,IADU,OACvBC,EADuB,OAG7BT,EAAgBS,GAHa,2CAAH,qDAM9BoE,OAEN,CAACJ,IAEHlN,qBAAU,gBACmBC,IAAtB6M,GACCF,EAAuBE,KAE5B,CAACA,IAEJ,IAAM7D,EAAiB,uCAAG,8BAAA3H,EAAA,yDAEV,OAATwG,EAFmB,gCAGNpG,MAAM,GAAD,OAAIV,EAAJ,0CAA6CkM,EAAgBrO,GAA7D,qBAA4EiJ,EAAOjJ,GAAnF,qBAAkG+L,EAAlG,4BAA8HE,EAA9H,8BAA0JX,IAHzJ,OAGlBxI,EAHkB,6CAKND,MAAM,GAAD,OAAIV,EAAJ,0CAA6CkM,EAAgBrO,GAA7D,qBAA4E+L,EAA5E,4BAAwGE,EAAxG,8BAAoIX,IALnI,OAKlBxI,EALkB,+BAQHA,EAAIC,OARD,eAQhBC,EARgB,yBAUfA,GAVe,4CAAH,qDAavB,OACI,sBAAKxD,UAAU,YAAf,UACI,qBAAKA,UAAU,aAAf,SACI,+CAEA,cAAC,EAAD,CAAoB2K,gBAjDhC,SAAiCiB,EAAiBE,EAAUvC,EAASE,EAAQ8C,EAAUE,EAAQ1J,GAC3F+L,EAAmBvF,GACnBlI,EAAoB0B,GACpByJ,EAAYD,GACZG,EAAUD,GACVuC,EAAUvF,GAENsC,EADU,WAAXD,EACa,KAEA,SAyCX3B,EAAayD,OAAS,EAAI,oBAAI3L,MAAO,CAACiN,WAAa,0BAAzB,kCAA2E,GACrG/E,EAAayD,OAAS,EACnBzD,EAAa1G,KAAI,SAAC+E,GAAD,OACjB,cAAC,EAAD,CAAmCF,YAAaE,EAAK8F,aAAcA,EAAcC,uBAAwBA,GAA9E/F,EAAIhI,YACVoB,IAAnBiN,EAA+B,sEAAyD,GAE5FE,QAAqCnN,IAAxB6M,EAAqC,cAAC,EAAD,CAAkBA,oBAAqBA,EAAqBH,aAAcA,EAAcvL,iBAAkBA,IAAsB,S,gCCbjLoM,E,kDA5DX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAED3M,MAAM,CACPiG,MAAO,GAJI,E,+CAQnB,WACI2G,KAAKC,SAAS,CAAC5G,MAAQ2G,KAAK5M,MAAMiG,S,oBAGtC,WAAU,IAAD,OACC6G,EAAUF,KAAKD,MAAMG,QAC3B,OACI,sBAAKvP,UAAU,wBAAwBoC,QAAS,SAACC,GAAD,OAAM,EAAKiH,YAAYjH,IAAvE,UACI,sBAAKrC,UAAU,MAAf,UACI,mBAAGA,UAAU,8BAAb,SAA4CuP,EAAQC,qBACpD,sBAAKxP,UAAU,OAAf,UACI,sCACA,4BAAI,IAAI6I,KAAK0G,EAAQE,iBAAiBxG,cAAcC,MAAM,EAAE,MAC5D,4BAAI,IAAIL,KAAK0G,EAAQE,iBAAiBxG,cAAcC,MAAM,GAAG,YAGrE,gCACI,cAAC,IAAD,CAAWzJ,KAAM,KADrB,wBAKC4P,KAAK5M,MAAMiG,KACR,gCACI,uBAEA,sBAAK1I,UAAU,cAAf,UACI,cAAC,IAAD,CAASP,KAAM,KACf,mBAAGO,UAAU,SAAb,sBAEJ,6BACI,6BAAKuP,EAAQvE,WAEjB,uBAEA,sBAAKhL,UAAU,cAAf,UACI,cAAC,IAAD,CAAQP,KAAM,KACd,mBAAGO,UAAU,SAAb,kCAEJ,uBAEA,sBAAKA,UAAU,cAAf,UACI,cAAC,IAAD,CAASP,KAAM,KACf,mBAAGO,UAAU,SAAb,kCAEJ,qBAAKA,UAAU,cAAf,SACI,4BAAIuP,EAAQG,mBAEV,Y,GAxDRC,IAAMC,WCgCbC,EA/BK,WAEhB,MAAgCrO,mBAAS,IAAzC,mBAAOsO,EAAP,KAAiBC,EAAjB,KAEApO,qBAAU,WACN,IAAMqO,EAAW,uCAAG,4BAAA/M,EAAA,sEACOgN,IADP,OACVH,EADU,OAEhBC,EAAYD,GAFI,2CAAH,qDAIjBE,MACF,IAEF,IAAMC,EAAa,uCAAG,8BAAAhN,EAAA,sEACAI,MAAM,GAAD,OAAIV,EAAJ,gCADL,cACZW,EADY,gBAECA,EAAIC,OAFL,cAEZC,EAFY,yBAIXA,GAJW,2CAAH,qDAOnB,OACI,sBAAKxD,UAAU,YAAf,UACI,qBAAKA,UAAU,aAAf,SACI,iDAEC8P,EAASrM,KAAI,SAAC8L,GAAD,OACV,cAAC,EAAD,CAA0BA,QAASA,GAArBA,EAAQ/O,WCA3B0P,EA3BkB,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,aAE/B,OACI,+BACI,6BAAKA,EAAaC,eAClB,6BACMD,EAAaE,YACX,6BACCF,EAAaE,YAAY5M,KAAI,SAAC6M,GAAD,OAC1B,6BAAuBA,EAASxO,MAAvBwO,EAAS9P,SAEd,KAEhB,6BACM2P,EAAaE,YACX,6BACCF,EAAaE,YAAY5M,KAAI,SAAC6M,GAAD,OAC1B,6BAAuBA,EAASC,kBAAvBD,EAAS9P,SAEd,KAEhB,wCACA,6BAAK2P,EAAaK,eAnBbL,EAAa3P,KCqBfiQ,MAvBf,YAAmD,IAAnBC,EAAkB,EAAlBA,iBAG5B,OACI,wBAAO1Q,UAAU,oBAAoBiC,MAAO,CAAC0O,gBAAgB,QAASC,MAAQ,OAA9E,UACI,gCACI,+BACI,yDACA,sCACA,+DACA,gDACA,oDAGR,gCACCF,EAAiBjN,KAAI,SAAC0M,GAAD,OAClB,cAAC,EAAD,CAA0BA,aAAcA,GAAmBA,EAAa3P,aC0BzEqQ,EAxCU,WAErB,MAA0CrP,mBAAS,IAAnD,mBAAOyI,EAAP,KAAsB6G,EAAtB,KACIxP,EAAUC,cAEdI,qBAAU,WACN,IAAMoP,EAAgB,uCAAG,4BAAA9N,EAAA,sEACO+N,IADP,OACf/G,EADe,OAErB6G,EAAiB7G,GAFI,2CAAH,qDAKtB8G,MACF,IAGF,IAAMC,EAAkB,uCAAG,8BAAA/N,EAAA,sEACLI,MAAM,GAAD,OAAIV,EAAJ,8BADA,cACjBW,EADiB,gBAEJA,EAAIC,OAFA,cAEjBC,EAFiB,yBAIhBA,GAJgB,2CAAH,qDAWxB,OACI,sBAAKxD,UAAU,YAAf,UACI,sBAAKA,UAAU,aAAf,UACI,+CACA,wBAAQ4H,KAAK,SAAS5H,UAAU,eAAeoC,QAR3D,WACId,EAAQiB,KAAK,kBAOL,sCAEJ,qBAAKvC,UAAU,kBAAf,SACI,cAAC,EAAD,CAAuB0Q,iBAAkBzG,U,QCvB1CgH,EAbI,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,WAEjB,OACI,+BACI,6BAAI,uBAAOlR,UAAU,mBAAmB4H,KAAK,WAAWpH,GAAI0Q,EAAW1Q,OACvE,6BAAK0Q,EAAWpP,OAChB,6BAAKoP,EAAWX,mBAChB,6BAAKW,EAAWd,eAChB,6BAAKc,EAAWzH,WALXyH,EAAW1Q,KCiEb2Q,EAlEa,WAExB,MAAkC3P,mBAAS,IAA3C,mBAAO4P,EAAP,KAAkBC,EAAlB,KAEA1P,qBAAU,WACN,IAAM2P,EAAY,uCAAG,4BAAArO,EAAA,sEACO+N,IADP,OACXI,EADW,OAEjBC,EAAaD,GAFI,2CAAH,qDAKlBE,MACF,IAIF,IAAMN,EAAkB,uCAAG,gCAAA/N,EAAA,sEACLI,MAAM,GAAD,OAAIV,EAAJ,8BADA,cACjBW,EADiB,gBAEJA,EAAIC,OAFA,cAEjBC,EAFiB,OAGnB4N,EAAY,GAEhB5N,EAAKC,KAAI,SAAC0M,GACNA,EAAaE,YAAY5M,KAAI,SAAC8N,GAC1B,IAAsB,IAAnBA,EAAIC,WAAoB,CACvB,IAAMlB,EAAQ,2BACPiB,GADO,IAEVnB,aAAeD,EAAaC,aAC5B3G,OAAS0G,EAAasB,gBAAkB,IAAMtB,EAAauB,iBAE/DN,EAAU7O,KAAK+N,UAbJ,kBAiBhBc,GAjBgB,2CAAH,qDAqBxB,OACI,sBAAKpR,UAAU,YAAf,UACI,sBAAKA,UAAU,aAAf,UACI,oDACA,wBAAQ4H,KAAK,SAAS5H,UAAU,eAAhC,sCAEJ,sBAAKA,UAAU,sBAAf,UACI,8CACA,uHACA,wBAAOA,UAAU,sBAAjB,UACI,gCACA,+BACI,0CACA,4CACA,iDACA,6DACA,yDAGJ,gCACCoR,EAAU3N,KAAI,SAAC6M,GAAD,OACX,cAAC,EAAD,CAAYY,WAAYZ,GAAeA,EAAS9P,mBCpDzDmR,OAPf,WACI,OACI,4FCmCOC,OAtBf,WACE,OACI,cAAC,gBAAD,UACI,sBAAK3P,MAAO,CAAC4P,SAAU,WAAYC,cAAc,QAAjD,UACI,cAAC,EAAD,IACA,qBAAK9R,UAAU,UAAf,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOa,OAAK,EAACkR,KAAK,cAAcC,UAAWrN,IAC3C,cAAC,IAAD,CAAO9D,OAAK,EAACkR,KAAK,UAAUC,UAAW9H,IACvC,cAAC,IAAD,CAAOrJ,OAAK,EAACkR,KAAK,eAAeC,UAAWC,IAC5C,cAAC,IAAD,CAAOpR,OAAK,EAACkR,KAAK,eAAeC,UAAWpP,IAC5C,cAAC,IAAD,CAAO/B,OAAK,EAACkR,KAAK,WAAWC,UAAWnC,IACxC,cAAC,IAAD,CAAOhP,OAAK,EAACkR,KAAK,WAAWC,UAAWnB,IACxC,cAAC,IAAD,CAAOhQ,OAAK,EAACkR,KAAK,gBAAgBC,UAAWb,SAGrD,cAAC,GAAD,U,cC3Bde,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFnF,SAASoF,eAAe,W","file":"static/js/main.ad09289a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.cdf2223c.png\";","import React from \"react\";\r\nimport logo from '../../logo.png';\r\nimport {Navbar, Nav, NavDropdown, Container} from \"react-bootstrap\";\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\nimport {BsPerson} from 'react-icons/bs'\r\n\r\nfunction Navigation(){\r\n    const profileTitle = (<BsPerson size={42}/>);\r\n    return(\r\n            <Navbar bg=\"light\" variant=\"light\" expand=\"lg\" collapseOnSelect=\"true\" sticky=\"top\" className=\"navContainer\">\r\n                <Container fluid>\r\n                    <Navbar.Brand className=\"navbar-brand\"><img src={logo} /></Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\r\n                    <Navbar.Collapse id=\"navbarToggleExternalContent\" className=\"navCollapse\">\r\n                        <Nav className=\"navNav\">\r\n                            <LinkContainer to=\"/wizyty\" activeHref=\"active\">\r\n                                <Nav.Link exact className=\"navItemLink\">Wizyty</Nav.Link>\r\n                            </LinkContainer>\r\n                            <LinkContainer to=\"/skierowania\" activeHref=\"active\">\r\n                                <Nav.Link  exact className=\"navItemLink\">Skierowania</Nav.Link>\r\n                            </LinkContainer>\r\n                            <LinkContainer to=\"/grafik\" activeHref=\"active\">\r\n                                <Nav.Link  exact className=\"navItemLink\">Grafik lekarzy</Nav.Link>\r\n                            </LinkContainer>\r\n                            <LinkContainer to=\"/badania\" activeHref=\"active\">\r\n                                <Nav.Link  exact className=\"navItemLink\">Badania</Nav.Link>\r\n                            </LinkContainer>\r\n                            <LinkContainer to=\"/recepty\" activeHref=\"active\">\r\n                                <Nav.Link exact className=\"navItemLink\">Recepty</Nav.Link>\r\n                            </LinkContainer>\r\n                        </Nav>\r\n                        <NavDropdown className=\"navItemLanguages\" title={profileTitle} id=\"basic-nav-dropdown\">\r\n                            <NavDropdown.Item href=\"/moje-konto\">Moje konto</NavDropdown.Item>\r\n                            <NavDropdown title=\"Język\" id=\"basic-nav-dropdown\">\r\n                                <NavDropdown.Item href=\"#angielski\" >Angielski</NavDropdown.Item>\r\n                                <NavDropdown.Item href=\"#polski\">Polski</NavDropdown.Item>\r\n                            </NavDropdown>\r\n                            <NavDropdown.Divider />\r\n                            <NavDropdown.Item href=\"#wyloguj\">Wyloguj</NavDropdown.Item>\r\n                        </NavDropdown>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n    )\r\n}\r\n\r\nexport default Navigation;","import React from \"react\";\r\nimport {useHistory} from 'react-router';\r\nimport {useState, useEffect} from \"react\";\r\n\r\nconst Referral = ({referral, setSelectedReferral}) =>{\r\n    const history = useHistory();\r\n    const [ref, setRef] = useState(referral);\r\n\r\n    useEffect(()=>{\r\n        if(referral !== undefined){\r\n            setRef(referral);\r\n        }\r\n    },[referral])\r\n\r\n    const handleClick = (e)=>{\r\n        e.preventDefault();\r\n        setSelectedReferral(referral);\r\n\r\n        history.push({\r\n            pathname: '/nowa-wizyta',\r\n            state: ref\r\n        });\r\n    }\r\n\r\nreturn(\r\n    <div className=\"referral\">\r\n        <div className=\"referralDiv1\">\r\n            <p className=\"referralHeader\">{ref.medicalService.name}</p>\r\n            {/*<label className=\"serviceType\">{ref.medicalServiceDTO.name}</label>*/}\r\n        </div>\r\n        <div className=\"referralDiv2\">\r\n            <p>Data wystawienia: {ref.issueDate}</p>\r\n            <p>Skierowanie ważne do: {ref.expiryDate}</p>\r\n        </div>\r\n        <hr/>\r\n        <div style={{display: 'flex' ,justifyContent: 'flex-end'}}>\r\n            {/*{((new Date(ref.expiryDate).getDate()) >= (new Date().getDate()))  &&*/}\r\n            <button className=\"actionButton\" onClick={(e)=>handleClick(e)}>UMÓW WIZYTĘ</button>\r\n        </div>\r\n    </div>\r\n)}\r\n\r\nexport default Referral","export const baseUrl = process.env.NODE_ENV === 'development' ? 'http://localhost:8080' : 'https://medical-center.herokuapp.com'","import React, {useState, useEffect} from \"react\";\r\nimport Referral from \"./Referral\";\r\nimport {baseUrl} from \"../../config/config\";\r\n\r\n\r\nconst ReferralList = () =>{\r\n    const [referrals, setReferrals] = useState([]);\r\n    const [selectedReferral, setSelectedReferral] = useState(undefined);\r\n\r\n    useEffect(() =>{\r\n        const getReferrals = async () =>{\r\n                const referrals = await fetchReferrals()\r\n                setReferrals(referrals);\r\n        }\r\n\r\n        getReferrals()\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        if(selectedReferral!==undefined) {\r\n            setReferrals(referrals.filter(filterReferrals));\r\n\r\n        }\r\n    },[selectedReferral])\r\n\r\n\r\n    const fetchReferrals = async() => {\r\n        const res = await fetch(`${baseUrl}/patients/1/referrals`)\r\n        const data = await res.json()\r\n\r\n        return data\r\n    }\r\n\r\n    function filterReferrals(referral){\r\n        if(referral.id !== selectedReferral.id){\r\n            return referral;\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"itemsList\">\r\n            <div className=\"listHeader\">\r\n                <h2>Twoje skierowania</h2>\r\n            </div>\r\n            {referrals.map((referral) =>(\r\n                <Referral key={referral.id} referral={referral} setSelectedReferral={setSelectedReferral}/>\r\n                ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReferralList","import React, {useState, useEffect} from \"react\";\r\nimport {Col, Row} from \"react-bootstrap\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport {Formik} from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport {baseUrl} from \"../../config/config\";\r\n\r\nconst schema = yup.object().shape({\r\n    firstName: yup.string().min(2, 'Imię powinno zawierać min. 2 znaki').max(50, 'Imię powinno zawierać maks. 50 znaków').required('Pole wymagane!'),\r\n    lastName: yup.string().min(2, 'Nazwisko powinno zawierać min. 2 znaki').max(50, 'Nazwisko powinno zawierać maks. 50 znaków').required('Pole wymagane!'),\r\n    pesel: yup.string().min(11, 'Pesel powinien zawierać 11 cyfr').max(11, 'Pesel powinien zawierać 11 cyfr').required('Pole wymagane!'),\r\n    birthDate: yup.date().required('Pole wymagane!'),\r\n    phoneNumber: yup.string().min(9, 'Numer telefonu powinien miec min. 9 cyfr').required('Pole wymagane!'),\r\n    email: yup.string().email('Nieprawidłowy adres email').required('Pole wymagane!'),\r\n    street: yup.string().min(2).required('Pole wymagane!'),\r\n    streetNumber: yup.string().required('Pole wymagane!'),\r\n    city: yup.string().required('Pole wymagane!'),\r\n    postCode: yup.string().required('Pole wymagane!'),\r\n    country: yup.string().required('Pole wymagane!')\r\n});\r\n\r\nconst HomePage = () => {\r\n\r\n    const [data, setPatient] = useState([]);\r\n    const [firstName, setFirstName] = useState(undefined);\r\n    const [lastName, setLastName] = useState(undefined);\r\n    const [pesel, setPesel] = useState(undefined);\r\n    const [birthDate, setBirthDate] = useState(undefined);\r\n    const [phoneNumber, setPhone] = useState(undefined);\r\n    const [email, setEmail] = useState(undefined);\r\n    const [patientsFiles, setPatientFiles] = useState(undefined);\r\n\r\n    const [street, setStreet] = useState(undefined);\r\n    const [streetNumber, setStreetNumber] = useState(undefined);\r\n    const [city, setCity] = useState(undefined);\r\n    const [postCode, setPostCode] = useState(undefined);\r\n    const [country, setCountry] = useState(undefined);\r\n\r\n\r\n    useEffect(() => {\r\n        const getPatient = async () =>{\r\n            const patient = await fetchPatient()\r\n            setPatient(patient);\r\n        }\r\n\r\n        getPatient()\r\n    }, [])\r\n\r\n    useEffect(()=>{\r\n        if(data !== undefined){\r\n            setFirstName(data.firstName);\r\n            setLastName(data.lastName);\r\n            setPesel(data.pesel);\r\n            setBirthDate(data.birthDate);\r\n            setPhone(data.phoneNumber);\r\n            setEmail(data.email);\r\n            setPatientFiles(data.patientsFiles);\r\n            data.address ? setStreet(data.address.street) : setStreet(undefined);\r\n            data.address ? setStreetNumber(data.address.streetNumber) : setStreetNumber(undefined);\r\n            data.address ? setCity(data.address.city) : setCity(undefined);\r\n            data.address ? setPostCode(data.address.postCode) : setPostCode(undefined);\r\n            data.address ? setCountry(data.address.country) : setCountry(undefined);\r\n        }\r\n    },[data])\r\n\r\n    const fetchPatient = async () => {\r\n        const res = await fetch(`${baseUrl}/patients/1`)\r\n        const data = await res.json()\r\n\r\n        return data\r\n    }\r\n\r\n    function handleSubmit(){\r\n        const newObj = {\r\n            \"id\": 1,\r\n            address: {\r\n                street,\r\n                streetNumber,\r\n                postCode,\r\n                city,\r\n                country\r\n            },\r\n            phoneNumber,\r\n            firstName,\r\n            lastName,\r\n            email,\r\n            birthDate,\r\n            pesel,\r\n            patientsFiles,\r\n            };\r\n\r\n        fetch(`${baseUrl}/patients`,{\r\n            method: 'PUT',\r\n            headers: {'Access-Control-Allow-Origin': `${baseUrl}`,\r\n                'Content-Type': 'application/json;charset=UTF-8'},\r\n            body: JSON.stringify(newObj)\r\n        }).then((res)=>res.json())\r\n            .catch((err)=>console.log(err));\r\n        console.log(firstName);\r\n    }\r\n\r\n    if(!data) {\r\n        return null;\r\n    }else{\r\n        return(\r\n                <div className=\"itemsList\">\r\n                    <div className=\"listHeader\">\r\n                        <h2>Twoje dane</h2>\r\n                    </div>\r\n                    <Formik validationSchema={schema}\r\n                            enableReinitialize={true}\r\n                            onSubmit={handleSubmit}\r\n                            initialErrors={{}}\r\n                            validateOnChange={true}\r\n                            validateOnMount={true}\r\n                            initialValues={{\r\n                        firstName : firstName,\r\n                        lastName : lastName,\r\n                        pesel : pesel,\r\n                        birthDate : birthDate,\r\n                        phoneNumber : phoneNumber,\r\n                        email : email,\r\n                        street : street,\r\n                        streetNumber : streetNumber,\r\n                        city: city,\r\n                        postCode : postCode,\r\n                        country : country\r\n                    }} >\r\n                        {({\r\n                            handleChange,\r\n                            handleSubmit,\r\n                            values,\r\n                            touched,\r\n                            isValid,\r\n                            errors\r\n                        })=>(\r\n                            <Form className=\"newAppointmentForm\" onSubmit={handleSubmit}>\r\n                                <Row className=\"align-items-center mb-3\">\r\n                                    <Col>\r\n                                        <Form.Group>\r\n                                            <Form.Label>Imię:</Form.Label>\r\n                                            <Form.Control type=\"text\" name=\"firstName\" placeholder=\"Imię\" size=\"lg\" defaultValue={values.firstName} isInvalid={!!errors.firstName} isValid={touched.firstName && !errors.firstName} onChange={(e)=>{setFirstName(e.target.value)}}/>\r\n                                            <Form.Control.Feedback type=\"invalid\">{errors.firstName}</Form.Control.Feedback>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Form.Group>\r\n                                            <Form.Label>Nazwisko:</Form.Label>\r\n                                            <Form.Control type=\"text\" name=\"lastName\" placeholder=\"Nazwisko\" size=\"lg\"  defaultValue={values.lastName} isInvalid={!!errors.lastName} isValid={touched.lastName && !errors.lastName} onChange={(e)=>{setLastName(e.target.value)}}/>\r\n                                            <Form.Control.Feedback type=\"invalid\">{errors.lastName}</Form.Control.Feedback>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"align-items-center mb-3\">\r\n                                    <Col>\r\n                                        <Form.Group>\r\n                                            <Form.Label>Pesel:</Form.Label>\r\n                                            <Form.Control type=\"text\" name=\"pesel\" placeholder=\"PESEL\" size=\"lg\" defaultValue={values.pesel} isInvalid={!!errors.pesel} isValid={touched.pesel && !errors.pesel} onChange={(e)=>setPesel(e.target.value)}/>\r\n                                            <Form.Control.Feedback type=\"invalid\">{errors.pesel}</Form.Control.Feedback>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Form.Group>\r\n                                            <Form.Label>Data urodzenia:</Form.Label>\r\n                                            <Form.Control type=\"date\" name=\"birthDate\" placeholder=\"Data urodzenia\" size=\"lg\" defaultValue={values.birthDate} isInvalid={!!errors.birthDate} isValid={touched.birthDate && !errors.birthDate} onChange={(e)=>setBirthDate(e.target.value)}/>\r\n                                            <Form.Control.Feedback type=\"invalid\">{errors.birthDate}</Form.Control.Feedback>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"align-items-center mb-3\">\r\n                                    <Col>\r\n                                        <Form.Group>\r\n                                            <Form.Label>Telefon:</Form.Label>\r\n                                            <Form.Control type=\"text\" name=\"phoneNumber\" placeholder=\"Telefon\" size=\"lg\" defaultValue={values.phoneNumber} isInvalid={!!errors.phoneNumber} isValid={touched.phoneNumber && !errors.phoneNumber} onChange={(e)=>setPhone(e.target.value)}/>\r\n                                            <Form.Control.Feedback type=\"invalid\">{errors.phoneNumber}</Form.Control.Feedback>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Form.Group>\r\n                                            <Form.Label>Email:</Form.Label>\r\n                                            <Form.Control type=\"email\" name=\"email\" placeholder=\"Email\" size=\"lg\" defaultValue={values.email} isInvalid={!!errors.email} isValid={touched.email && !errors.email} onChange={(e)=>setEmail(e.target.value)}/>\r\n                                            <Form.Control.Feedback type=\"invalid\">{errors.email}</Form.Control.Feedback>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                </Row>\r\n                                <br/>\r\n                                <Row className=\"align-items-center mb-3\">\r\n                                    <Col>\r\n                                        <Form.Group>\r\n                                            <Form.Label>Ulica:</Form.Label>\r\n                                            <Form.Control type=\"text\" name=\"street\" placeholder=\"Ulica\" size=\"lg\" defaultValue={values.street} isInvalid={!!errors.street} isValid={touched.street && !errors.street} onChange={(e)=>setStreet(e.target.value)}/>\r\n                                            <Form.Control.Feedback type=\"invalid\">{errors.street}</Form.Control.Feedback>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Form.Group>\r\n                                            <Form.Label>Numer:</Form.Label>\r\n                                            <Form.Control type=\"text\" name=\"streetNumber\" placeholder=\"Numer\" size=\"lg\" defaultValue={values.streetNumber} isInvalid={!!errors.streetNumber} isValid={touched.streetNumber && !errors.streetNumber} onChange={(e)=>setStreetNumber(e.target.value)}/>\r\n                                            <Form.Control.Feedback type=\"invalid\">{errors.streetNumber}</Form.Control.Feedback>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"align-items-center mb-3\">\r\n                                    <Col>\r\n                                        <Form.Group>\r\n                                            <Form.Label>Miasto:</Form.Label>\r\n                                            <Form.Control type=\"text\" name=\"city\" placeholder=\"Miasto\" size=\"lg\" defaultValue={values.city} isInvalid={!!errors.city} isValid={touched.city && !errors.city} onChange={handleChange}/>\r\n                                            <Form.Control.Feedback type=\"invalid\">{errors.city}</Form.Control.Feedback>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Form.Group>\r\n                                            <Form.Label>Kod pocztowy:</Form.Label>\r\n                                            <Form.Control type=\"text\" name=\"postCode\" placeholder=\"Kod pocztowy\" size=\"lg\" defaultValue={values.postCode} isInvalid={!!errors.postCode} isValid={touched.postCode && !errors.postCode} onChange={(e)=>setPostCode(e.target.value)}/>\r\n                                            <Form.Control.Feedback type=\"invalid\">{errors.postCode}</Form.Control.Feedback>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"align-items-center mb-3\">\r\n                                    <Col>\r\n                                        <Form.Group>\r\n                                            <Form.Label>Państwo:</Form.Label>\r\n                                            <Form.Control type=\"text\" name=\"country\" placeholder=\"Państwo\" size=\"lg\" defaultValue={values.country} isInvalid={!!errors.country} isValid={touched.country && !errors.country} onChange={(e)=>setCountry(e.target.value)}/>\r\n                                            <Form.Control.Feedback type=\"invalid\">{errors.country}</Form.Control.Feedback>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Form.Group/>\r\n                                    </Col>\r\n                                </Row>\r\n                                <div style={{display:\"flex\", justifyContent: 'center'}}>\r\n                                    <Button variant=\"primary\" size=\"lg\" type=\"submit\">Edytuj</Button>\r\n                                </div>\r\n                            </Form>\r\n                        )}\r\n                    </Formik>\r\n                </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HomePage;","import React from \"react\";\r\nimport {useState, useEffect} from \"react\";\r\nimport {FaRegUser, FaCheck, FaFile} from 'react-icons/fa'\r\nimport {GiMedicines} from 'react-icons/gi'\r\nimport {Button} from \"react-bootstrap\";\r\nimport {baseUrl} from \"../../config/config\";\r\n\r\n\r\nconst Appointment = ({appointment, setCancelledAppointment}) =>{\r\n    const [app, setAppointment] = useState(appointment);\r\n    const [open, setOpen] = useState(false);\r\n\r\n    useEffect(()=>{\r\n        if(appointment!==undefined){\r\n            setAppointment(appointment);\r\n\r\n        }\r\n    }, [appointment])\r\n\r\n    function togglePanel(e){\r\n        e.preventDefault();\r\n        setOpen(!open);\r\n    }\r\n\r\n    function handleConfirmation(e){\r\n        e.preventDefault();\r\n        let updatedApp = app;\r\n        updatedApp.confirmed = true;\r\n        setAppointment(updatedApp);\r\n\r\n        fetch(`${baseUrl}/appointments/${appointment.id}/confirm`, {\r\n            method: 'PATCH',\r\n            headers:{\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                confirmed : true\r\n            }),\r\n        }).then((res)=>res.json())\r\n            .then(window.alert('wizyta została potwierdzona'))\r\n            .catch((err)=>console.log(err));\r\n    }\r\n\r\n    function handleCancellation(e){\r\n        e.preventDefault();\r\n        let updatedApp = app;\r\n        updatedApp.patientId = null;\r\n        setCancelledAppointment(updatedApp);\r\n        setAppointment(updatedApp);\r\n\r\n\r\n        fetch(`${baseUrl}/appointments/${appointment.id}/cancel`,{\r\n            method: 'PATCH',\r\n            headers:{\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                patientId : null\r\n            }),\r\n        }).then((res)=>res.json())\r\n            .then(window.alert('wizyta została odwołana'))\r\n            .catch((err)=>console.log(err));\r\n    }\r\n\r\n    var x = (new Date()).getTimezoneOffset() * 60000;\r\n    const formatYmd = date => date.toISOString().slice(0, 10);\r\n        return(\r\n            <div className={app.date ? (new Date(new Date().setDate(new Date().getDate()+1)) < (new Date(app.date.slice(0,10)))) ? 'appointmentAndCheckup incomingApp'  :\r\n                (((new Date(new Date().setDate(new Date().getDate()+1))).getDate() === (new Date(app.date.slice(0,10))).getDate()) && app.confirmed === false) ? 'appointmentAndCheckup appToConfirm' :\r\n                ((formatYmd(new Date()) === app.date.slice(0,10)) || (((new Date(new Date().setDate(new Date().getDate()+1))).getDate() === (new Date(app.date.slice(0,10))).getDate()) && app.confirmed === true) ? 'appointmentAndCheckup todayApp' :\r\n                'appointmentAndCheckup archivalApp') : ''} onClick={e=>togglePanel(e)}>\r\n                <div className=\"top\">\r\n                    <p className=\"appointmentAndCheckupHeader\">{(app.service ? (app.service.name) : app.serviceName)}</p>\r\n                    <div className=\"data\">\r\n                        <p>Data:</p>\r\n                        <p>{appointment.date ? new Date(new Date(appointment.date)-x).toISOString().slice(0,10) : ''}</p>\r\n                        <p>{appointment.date ? new Date(new Date(appointment.date)-x).toISOString().slice(11,16) : ''}</p>\r\n                    </div>\r\n                </div>\r\n                {app.date? <div style={{display: 'flex', justifyContent:'space-between'}}>\r\n                    <div>\r\n                        <FaRegUser size={42}/>\r\n                        lek.med. {(app.doctor? (app.doctor.firstName + ' ' + app.doctor.lastName) : '')}\r\n                    </div>\r\n                    {(((new Date(new Date().setDate(new Date().getDate()+1))).getDate() === (new Date(app.date.slice(0,10))).getDate())  && (app.confirmed === false))&&\r\n                        <Button variant='danger' size=\"lg\" onClick={e=>handleConfirmation(e)}>Potwierdź wizytę</Button>\r\n                    }\r\n                    {((formatYmd(new Date()) < formatYmd(new Date(new Date(app.date)-x)))&&(app.confirmed === true)) &&\r\n                        <Button variant='primary' size='lg' onClick={e=>handleCancellation(e)}>Odwołaj wizytę</Button>\r\n                    }\r\n                </div> : ''}\r\n                {app.recommendations  ? <>\r\n                    {open ? (\r\n                        <div>\r\n                            <hr/>\r\n                            <div className=\"subsections\">\r\n                                <FaCheck size={42}/>\r\n                                <p className=\"header\">Zalecenia</p>\r\n                            </div>\r\n                            <ol>\r\n                                <li>{app.recommendations}</li>\r\n                            </ol>\r\n                            <hr/>\r\n\r\n                            <div className=\"subsections\">\r\n                                <FaFile size={42}/>\r\n                                <p className=\"header\">Zrealizowane badania</p>\r\n                            </div>\r\n                            <p>{app.serviceName}</p>\r\n                            <hr/>\r\n\r\n                            <div className=\"subsections\">\r\n                                <GiMedicines size={42}/>\r\n                                <p className=\"header\">e-Recepty</p>\r\n                            </div>\r\n                            <p>{app.prescriptions ? 'Wystawiono elektroniczną receptę': 'Brak recept'}</p>\r\n\r\n                        </div>) : null}\r\n                    </> : null}\r\n\r\n            </div>);\r\n}\r\n\r\nexport default Appointment;","import React, {useState, useEffect} from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Appointment from \"./Appointment\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport \"react-datepicker/dist/react-datepicker.css\"\r\nimport {baseUrl} from \"../../config/config\";\r\n\r\n\r\nconst AppointmentList = () =>{\r\n    const formatYmd = date => date.toISOString().slice(0,10);\r\n    const facility = 'FACILITY';\r\n    const phone = 'TELEPHONE';\r\n    const [appointments, setAppointments] = useState([]);\r\n    const [appDate, setAppDate] = useState(formatYmd(new Date()));\r\n    const [filteredAppointments, setFilteredAppointments] = useState([appointments]);\r\n    const [canceledAppointment, setCancelledAppointment] = useState(undefined);\r\n    let history = useHistory();\r\n\r\n    useEffect(() =>{\r\n        const getAppointments = async () =>{\r\n            const appointments = await fetchAppointments()\r\n                .then(apps=>apps.sort((a,b)=>new Date(b.date) - new Date(a.date)))\r\n            setAppointments(appointments)\r\n            setFilteredAppointments(appointments)\r\n        }\r\n\r\n        getAppointments()\r\n    }, [canceledAppointment])\r\n\r\n\r\n    function checkAppId(app){\r\n        return app.patientId !=null;\r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n        if(canceledAppointment!==undefined){\r\n            const result = appointments.filter(checkAppId);\r\n            setAppointments(result);\r\n        }\r\n    },[canceledAppointment])\r\n\r\n\r\n    const fetchAppointments = async () =>{\r\n        const res1 = await fetch(`${baseUrl}/patients/1/doneAppointments`)\r\n        const data1 = await res1.json();\r\n        const res2 = await fetch(`${baseUrl}/patients/1/plannedAppointments`)\r\n        const data2 = await res2.json();\r\n        const data = data2.concat(data1);\r\n\r\n        return data;\r\n\r\n    }\r\n\r\n    const handleFacilityFilter = () =>{\r\n        let facilityAppointments = appointments.filter(appointment => (appointment.type === facility));\r\n        setFilteredAppointments(facilityAppointments);\r\n    }\r\n\r\n    const handlePhoneFilter = () =>{\r\n        let phoneAppointments = appointments.filter(appointment => (appointment.type === phone));\r\n        setFilteredAppointments(phoneAppointments);\r\n    }\r\n\r\n    const handleShowAll = () =>{\r\n        setFilteredAppointments(appointments);\r\n    }\r\n\r\n    const handleClick = () =>{\r\n        history.push(\"/nowa-wizyta\");\r\n    }\r\n\r\n    return(\r\n        <div className=\"itemsList\">\r\n            <div className=\"listHeader\">\r\n                <h2>Twoje wizyty</h2>\r\n            </div>\r\n            <div className=\"appointmentListHeader\">\r\n                <div className=\"checkBoxesAndButton\">\r\n                    <div className=\"checkboxes\">\r\n                        <div className=\"checkbox\">\r\n                            <input type=\"radio\" id=\"all\" name=\"box\" value=\"all\" onChange={handleShowAll}/>\r\n                            <label htmlFor=\"all\">Wszystkie</label>\r\n                        </div>\r\n                        <div className=\"checkbox\">\r\n                            <input type=\"radio\" id=\"normal\" name=\"box\" value=\"normal\" onChange={handleFacilityFilter}/>\r\n                            <label htmlFor=\"normal\">Wizyta w placówce</label>\r\n                        </div>\r\n                        <div className=\"checkbox\">\r\n                            <input type=\"radio\" id=\"tele\" name=\"box\" value=\"tele\" onChange={handlePhoneFilter}/>\r\n                            <label htmlFor=\"tele\">Teleporada</label>\r\n                        </div>\r\n                    </div>\r\n                    <div >\r\n                        <button className=\"actionButton\" onClick={handleClick}>UMÓW WIZYTĘ</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"appDate\">\r\n                    <Form>\r\n                        <Form.Group>\r\n                            <Form.Label>Data:</Form.Label>\r\n                            <Form.Control type='date' onChange={(e) => setAppDate(e.target.value)} value={appDate}/>\r\n                        </Form.Group>\r\n                    </Form>\r\n            </div>\r\n            <div className=\"appointmentList\">\r\n                {filteredAppointments.map((appointment)=>(\r\n                    <Appointment key={appointment.id} appointment={appointment} setCancelledAppointment={setCancelledAppointment}/>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppointmentList;","import React from \"react\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {useState, useEffect} from 'react';\r\nimport {useHistory} from 'react-router';\r\nimport {Col, Row} from \"react-bootstrap\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport {baseUrl} from \"../../config/config\";\r\n\r\n\r\nconst NewAppointmentForm = ({getAppointments}) =>{\r\n\r\n    let history = useHistory();\r\n    const formatYmd = date => date.toISOString().slice(0,10);\r\n\r\n    const languages = [\"polski\", \"angielski\"];\r\n\r\n    const referral = history.location.state;\r\n\r\n    const [appointmentType, setAppointmentType] = useState(undefined);\r\n    const [language, setLanguage] = useState(languages[0]);\r\n    const [service, setService] = useState(undefined);\r\n    const [receivedReferral, setReceivedReferral] = useState(referral ? referral : undefined);\r\n    const [selectedReferral, setSelectedReferral] = useState(receivedReferral ? receivedReferral : undefined);\r\n    const [doctor, setSelectedDoctor] = useState(undefined);\r\n\r\n    const [referrals, setReferrals] = useState([]);\r\n    const [services, setServices] = useState([]);\r\n    const [doctors, setDoctors] = useState([]);\r\n    const [dateFrom, setDateFrom] = useState(formatYmd(new Date()));\r\n    const [dateTo, setDateTo] = useState(formatYmd(new Date(new Date().setDate(new Date().getDate()+14))));\r\n    const [errors, setErrors] = useState({});\r\n\r\n    useEffect(()=>{\r\n        if(appointmentType !== undefined){\r\n            if(appointmentType === 'facility'){\r\n                const getServices = async () =>{\r\n                    const services = await fetchServices(true)\r\n                    setServices(services)\r\n                }\r\n                getServices();\r\n\r\n            }else{\r\n                const getServices = async () =>{\r\n                    const services = await fetchServices(false)\r\n                    setServices(services)\r\n                }\r\n                getServices();\r\n            }\r\n        }\r\n    },[appointmentType])\r\n\r\n    useEffect(()=>{\r\n        if(service !== undefined){\r\n            if(service.doneByMedicalStaff === false){\r\n                const getDoctors = async () =>{\r\n                    const doctors = await fetchDoctors()\r\n                    setDoctors(doctors)\r\n                    const doctorSelect = document.querySelector('#doctorr');\r\n                    doctorSelect.disabled = false;\r\n                }\r\n                getDoctors()\r\n            }else{\r\n                const doctorSelect = document.querySelector('#doctorr');\r\n                doctorSelect.disabled = true;\r\n            }\r\n        }\r\n\r\n    },[service])\r\n\r\n    useEffect(()=>{\r\n        if(receivedReferral !== undefined){\r\n            setSelectedReferral(receivedReferral);\r\n            if(receivedReferral.medicalService.facilityService === true){\r\n                setAppointmentType('facility');\r\n                const radioBtnFacility = document.querySelector('#facility');\r\n                radioBtnFacility.checked = true;\r\n            }else{\r\n                setAppointmentType('phone');\r\n                const radioBtnPhone = document.querySelector('#phone');\r\n                radioBtnPhone.checked = true;\r\n            }\r\n            setService(receivedReferral.medicalService);\r\n        }\r\n\r\n    },[receivedReferral])\r\n\r\n    useEffect(()=>{\r\n        if(selectedReferral !== undefined){\r\n            if(selectedReferral.medicalService.facilityService === true){\r\n                setAppointmentType('facility');\r\n                const radioBtnFacility = document.querySelector('#facility');\r\n                radioBtnFacility.checked = true;\r\n            }else{\r\n                setAppointmentType('phone');\r\n                const radioBtnPhone = document.querySelector('#phone');\r\n                radioBtnPhone.checked = true;\r\n            }\r\n            setService(selectedReferral.medicalService);\r\n        }\r\n\r\n    }, [selectedReferral])\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n        const getReferrals = async () =>{\r\n            const referrals = await fetchReferrals()\r\n            setReferrals(referrals)\r\n        }\r\n        getReferrals()\r\n    }, [])\r\n\r\n\r\n    const fetchReferrals = async () =>{\r\n        const res = await fetch(`${baseUrl}/patients/1/referrals`);\r\n        const data = await res.json();\r\n\r\n        return data;\r\n    }\r\n\r\n    const fetchDoctors = async () =>{\r\n        let res;\r\n        if(language === 'polski'){\r\n            res = await fetch(`${baseUrl}/doctors/services?language=PL&medicalServiceId=`+service.id);\r\n        }else{\r\n            res = await fetch(`${baseUrl}/doctors/services?language=EN&medicalServiceId=`+service.id);\r\n        }\r\n\r\n        const data = await res.json();\r\n\r\n        return data;\r\n    }\r\n\r\n    const fetchServices = async (type) =>{\r\n        let res;\r\n        if(type === true){\r\n            res = await fetch(`${baseUrl}/medicalServices?type=FACILITY`);\r\n        }else{\r\n            res = await fetch(`${baseUrl}/medicalServices?type=TELEPHONE`);\r\n        }\r\n\r\n        const data = await res.json();\r\n\r\n        return data;\r\n    }\r\n\r\n\r\n    const findFormErrors = () =>{\r\n        const newErrors = {};\r\n        if(appointmentType === undefined){\r\n            newErrors.appType = 'Należy określić typ wizyty';\r\n        }\r\n\r\n        if(service === undefined){\r\n            newErrors.serviceMess = 'Należy określić usługę';\r\n        }\r\n\r\n        return newErrors;\r\n    }\r\n\r\n    function clearReferralFields(e){\r\n        e.preventDefault();\r\n        setSelectedReferral(undefined);\r\n        setAppointmentType(undefined);\r\n        const radioBtnFacility = document.querySelector('#facility');\r\n        radioBtnFacility.checked = false;\r\n        const radioBtnPhone = document.querySelector('#phone');\r\n        radioBtnPhone.checked = false;\r\n        setService(undefined);\r\n        setServices([]);\r\n        setDoctors([]);\r\n    }\r\n\r\n    function clearService(e){\r\n        if(selectedReferral === undefined){\r\n            e.preventDefault();\r\n            setService(undefined);\r\n            setDoctors([]);\r\n        }\r\n    }\r\n\r\n\r\n    function handleSubmit(e){\r\n        e.preventDefault();\r\n\r\n        const errors = findFormErrors();\r\n\r\n        if(Object.keys(errors).length > 0){\r\n            setErrors(errors)\r\n        }else{\r\n            if(doctor !== undefined){\r\n                if(selectedReferral !== undefined){\r\n                    getAppointments(appointmentType, language, service, doctor, dateFrom, dateTo, selectedReferral);\r\n                }else{\r\n                    getAppointments(appointmentType, language, service, doctor, dateFrom, dateTo, null);\r\n                }\r\n            }else{\r\n                if(selectedReferral !== undefined){\r\n                    getAppointments(appointmentType, language, service, null,  dateFrom, dateTo, selectedReferral);\r\n                }else{\r\n                    getAppointments(appointmentType, language, service, null,  dateFrom, dateTo, null);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    return(\r\n                    <Form className=\"newAppointmentForm\">\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Label >Typ wizyty:</Form.Label>\r\n                            <Form.Check type=\"radio\" name=\"type\" id=\"facility\" label=\"W placówce\" onClick={(e)=>{\r\n                                setAppointmentType('facility');\r\n                                if(!!errors['appType'])\r\n                                    setErrors({\r\n                                        ...errors,\r\n                                        ['appType']:null\r\n                                    })\r\n                            }} isInvalid={!!errors.appType}/>\r\n                            <Form.Check type=\"radio\" name=\"type\" id=\"phone\" label=\"Teleporada\" onClick={(e)=>{\r\n                                setAppointmentType('phone');\r\n                                if(!!errors['appType'])\r\n                                    setErrors({\r\n                                        ...errors,\r\n                                        ['appType']:null\r\n                                    })\r\n                            }} isInvalid={!!errors.appType}/>\r\n                            <Form.Control.Feedback type='invalid'>{errors.appType}</Form.Control.Feedback>\r\n                        </Form.Group>\r\n                        <Row className=\"align-items-center mb-3\">\r\n                            <Col>\r\n                                <Form.Group>\r\n                                    <Form.Label>Język:</Form.Label>\r\n                                    <Form.Select id='selectedLanguage'>\r\n                                        {languages.map((lang)=>(\r\n                                            <option value={lang} onClick={(e)=>setLanguage(lang)}>{lang}</option>\r\n                                        ))}\r\n                                    </Form.Select>\r\n                                </Form.Group>\r\n                            </Col>\r\n                            <Col>\r\n                                <Form.Group>\r\n                                    <Form.Label>Skierowanie:</Form.Label>\r\n                                    <Form.Select id='selectedReferral'>\r\n                                        <option>{ selectedReferral ? selectedReferral.issueDate : 'Wykorzystaj skierowanie'}</option>\r\n                                        {selectedReferral &&\r\n                                        <option onClick={e=>{clearReferralFields(e)}}>Wykorzystaj skierowanie</option>\r\n                                        }\r\n                                        {referrals.map((ref) => (\r\n                                            <option value={ref} onClick={(e)=>setSelectedReferral(ref)}>{ref.issueDate}</option>\r\n                                        ))}\r\n                                    </Form.Select>\r\n                                </Form.Group>\r\n                            </Col>\r\n                        </Row>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Label>Usługa:</Form.Label>\r\n                            <Form.Select id = 'selectService' isInvalid={!!errors.serviceMess}>\r\n                                <option onClick={e=>clearService(e)}>{selectedReferral? selectedReferral.medicalService.name : \"Wybierz usługę\"}</option>\r\n                                {services.map((ser)=>(\r\n                                    <option value={ser.name} onClick={(e)=>{\r\n                                        setService(ser);\r\n                                        if(!!errors['serviceMess'])\r\n                                            setErrors({\r\n                                                ...errors,\r\n                                                ['serviceMess']:null\r\n                                            })\r\n                                    }}>{ser.name}</option>\r\n                                ))}\r\n                            </Form.Select>\r\n                            <Form.Control.Feedback type='invalid'>{errors.serviceMess}</Form.Control.Feedback>\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Label>Lekarz:</Form.Label>\r\n                            <Form.Select id='doctorr'>\r\n                                <option value=\"0\">Wybierz lekarza</option>\r\n                                {doctors.map((doc) =>(\r\n                                    <option value={doc.firstName + ' ' + doc.lastName} onClick={(e)=>setSelectedDoctor(doc)}>{doc.firstName + ' ' + doc.lastName}</option>\r\n                                ))}\r\n                            </Form.Select>\r\n                        </Form.Group>\r\n                        <Row className=\"align-items-center mb-3\">\r\n                            <Col>\r\n                                <Form.Group>\r\n                                    <Form.Label>Data od:</Form.Label>\r\n                                    <Form.Control type='date' placeholder='Data od:' value={dateFrom} onChange={(e)=>setDateFrom(e.target.value)}/>\r\n                                </Form.Group>\r\n                            </Col>\r\n                            <Col>\r\n                                <Form.Group>\r\n                                    <Form.Label>Data do:</Form.Label>\r\n                                    <Form.Control type='date' placeholder='Data do:' value={dateTo} onChange={(e)=>setDateTo(e.target.value)}/>\r\n                                </Form.Group>\r\n                            </Col>\r\n                        </Row>\r\n                        <div style={{display:\"flex\", justifyContent: 'center'}}>\r\n                            <Button variant='primary' onClick={e=>handleSubmit(e)}>Szukaj wizyty</Button>\r\n                        </div>\r\n                    </Form>\r\n    )\r\n}\r\n\r\nexport default withRouter(NewAppointmentForm);\r\n","import React from \"react\";\r\n\r\nconst AvailableAppointment = ({appointment, setOpenModal, setSelectedAppointment}) =>{\r\n\r\n    function handleClick(e){\r\n        e.preventDefault();\r\n        setSelectedAppointment(appointment);\r\n        setOpenModal(true);\r\n    }\r\n\r\n    var x = (new Date()).getTimezoneOffset() * 60000;\r\n    return(\r\n        <div className='availableAppointment' title={'Wybierz wizytę'}>\r\n            <div className=\"availableAppointmentDate\">\r\n                <p>{new Date(new Date(appointment.date)-x).toISOString().slice(0,10)}</p>\r\n                <p>{new Date(new Date(appointment.date)-x).toISOString().slice(11,16)}</p>\r\n            </div>\r\n            <div className=\"availableAppointmentDoctor\">\r\n                <p>{appointment.doctor ? 'dr '+appointment.doctor.firstName + ' '+ appointment.doctor.lastName : 'Personel medyczny'}</p>\r\n            </div>\r\n            <div className=\"availableAppointmentBtn\">\r\n                <button className=\"actionButton\" onClick={(e)=>handleClick(e)}>Umów</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AvailableAppointment;","import React from 'react';\r\nimport {useState, useEffect} from \"react\";\r\nimport {useHistory} from 'react-router';\r\nimport {baseUrl} from \"../../config/config\";\r\n\r\nconst AppointmentModal = ({selectedAppointment, setOpenModal, selectedReferral}) => {\r\n    const history = useHistory();\r\n    const [appointment, setAppointment] = useState(selectedAppointment);\r\n    const [referral, setReferral] = useState(selectedReferral);\r\n\r\n    useEffect(()=>{\r\n        if(selectedAppointment !== undefined){\r\n            setAppointment(selectedAppointment);\r\n\r\n        }\r\n    }, [selectedAppointment])\r\n\r\n    useEffect(()=>{\r\n        if(selectedReferral !== undefined){\r\n            setReferral(selectedReferral);\r\n        }\r\n    },[selectedReferral])\r\n\r\n    var x = (new Date()).getTimezoneOffset() * 60000;\r\n\r\n    function bookAnAppointment(e){\r\n        e.preventDefault();\r\n\r\n        const formatYmd = date => date.toISOString().slice(0, 10);\r\n        let data;\r\n        if(referral !== null){\r\n            data = {\r\n                patientId : 1,\r\n                referralId : referral.id\r\n            }\r\n        }else{\r\n            data = {\r\n                patientId : 1\r\n            }\r\n        }\r\n\r\n        if(formatYmd(new Date()) === new Date(new Date(appointment.date)-x).toISOString().slice(0,10)){\r\n            data = {\r\n                ...data,\r\n                confirmed : true\r\n            };\r\n        }\r\n\r\n        fetch(`${baseUrl}/appointments/${selectedAppointment.id}/reserve`,{\r\n            method: 'PATCH',\r\n            headers:{\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(data),\r\n        }).then((res) => res.json())\r\n            .then(window.alert('Umówiono wizytę'))\r\n            .then(history.push({\r\n                pathname : '/wizyty'\r\n            })).catch((err)=> console.log(err));\r\n    }\r\n\r\n\r\n    const formatYmd = date => date.toISOString().slice(0, 10);\r\n    return (\r\n        <div className=\"modalBackground\">\r\n            <div className='modalContainer'>\r\n                <div className=\"titleCloseBtn\">\r\n                    <button onClick={()=>setOpenModal(false)}> X </button>\r\n                </div>\r\n                <div className=\"modalTitle\">\r\n                    <h2>Potwierdź umówienie wizyty</h2>\r\n                    <hr/>\r\n                </div>\r\n                <div className=\"modalBody\">\r\n                    <div className=\"modalSection\">\r\n                        <p>Data:</p>\r\n                        <p>{new Date(new Date(appointment.date)-x).toISOString().slice(0,10)}</p>\r\n                    </div>\r\n                    <div className=\"modalSection\">\r\n                        <p>Godzina:</p>\r\n                        <p>{new Date(new Date(appointment.date)-x).toISOString().slice(11,16)}</p>\r\n                    </div>\r\n                    <div className=\"modalSection\">\r\n                        <p>Typ wizyty:</p>\r\n                        <p>{appointment.type === 'FACILITY' ? 'Wizyta w placówce' : 'Teleporada'}</p>\r\n                    </div>\r\n                    <div className=\"modalSection\">\r\n                        <p>Usługa:</p>\r\n                        <p>{appointment.service.name}</p>\r\n                    </div>\r\n                    {appointment.doctor &&  <div className=\"modalSection\">\r\n                        <p>Doktor:</p>\r\n                        <p>{appointment.doctor.firstName + ' ' + appointment.doctor.lastName}</p>\r\n                    </div>}\r\n                    {referral !== null && <div className=\"modalSection\">\r\n                        <p>Wykorzystane skierowanie:</p>\r\n                        <p>{referral ? 'tak' : 'nie'}</p>\r\n                    </div>}\r\n                    {(new Date(new Date(appointment.date)-x).toISOString().slice(0,10) === (formatYmd(new Date()))) && <div className=\"warning\">\r\n                        <p>Wizyta zostanie automatycznie potwierdzona</p>\r\n                    </div>}\r\n                <div className=\"modalFooter\">\r\n                    <button onClick={()=>setOpenModal(false)} className=\"cancelButton\">Anuluj</button>\r\n                    <button onClick={(e)=>bookAnAppointment(e)}>Potwierdź</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AppointmentModal;\r\n","import React from \"react\";\r\nimport {useState, useEffect} from \"react\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport \"react-datepicker/dist/react-datepicker.css\"\r\nimport NewAppointmentForm from \"./NewAppointmentForm\";\r\nimport AvailableAppointment from \"./AvailableAppointment\";\r\nimport AppointmentModal from \"./AppointmentModal\";\r\nimport {baseUrl} from \"../../config/config\";\r\n\r\nconst NewAppointment = () =>{\r\n    const [appointments, setAppointments] = useState([]);\r\n    const [receivedService, setReceivedService] = useState(undefined);\r\n    const [selectedAppointment, setSelectedAppointment] = useState(undefined);\r\n    const [selectedReferral, setSelectedReferral] = useState(undefined);\r\n    const [openModal, setOpenModal] = useState(false);\r\n    const [dateFrom, setDateFrom] = useState(undefined);\r\n    const [dateTo, setDateTo] = useState(undefined);\r\n    const [doctor, setDoctor] = useState(undefined);\r\n    const [language, setLanguage] = useState(undefined);\r\n\r\n\r\n    function handleAppointmentSearch(appointmentType, language, service, doctor, dateFrom, dateTo, selectedReferral){\r\n        setReceivedService(service);\r\n        setSelectedReferral(selectedReferral);\r\n        setDateFrom(dateFrom);\r\n        setDateTo(dateTo);\r\n        setDoctor(doctor);\r\n        if(language==='polski'){\r\n            setLanguage(\"PL\");\r\n        }else{\r\n            setLanguage(\"EN\");\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(receivedService !== undefined){\r\n            const getAvailableAppointments = async () =>{\r\n                const apps = await fetchAppointments();\r\n\r\n                setAppointments(apps)\r\n            }\r\n\r\n            getAvailableAppointments()\r\n        }\r\n    },[receivedService])\r\n\r\n    useEffect(()=>{\r\n        if(selectedAppointment!==undefined){\r\n            setSelectedAppointment(selectedAppointment)\r\n        }\r\n    }, [selectedAppointment])\r\n\r\n    const fetchAppointments = async ()=>{\r\n        let res;\r\n        if(doctor!==null){\r\n            res = await fetch(`${baseUrl}/appointments?medicalServiceId=${receivedService.id}&doctorId=${doctor.id}&dateFrom=${dateFrom}T00:00:00&dateTo=${dateTo}T00:00:00&language=${language}`);\r\n        }else{\r\n            res = await fetch(`${baseUrl}/appointments?medicalServiceId=${receivedService.id}&dateFrom=${dateFrom}T00:00:00&dateTo=${dateTo}T00:00:00&language=${language}`);\r\n        }\r\n\r\n        const data = await res.json();\r\n\r\n        return data;\r\n    }\r\n\r\n    return(\r\n        <div className=\"itemsList\">\r\n            <div className=\"listHeader\">\r\n                <h2>Nowa wizyta</h2>\r\n            </div>\r\n                <NewAppointmentForm getAppointments={handleAppointmentSearch}/>\r\n            {appointments.length > 0 ? <h3 style={{fontFamily : 'Montserrat, sans-serif'}}>Dostępne wizyty</h3> : ''}\r\n            {appointments.length > 0 ?\r\n                appointments.map((app)=>(\r\n                <AvailableAppointment key={app.id} appointment={app} setOpenModal={setOpenModal} setSelectedAppointment={setSelectedAppointment}/>\r\n            )) : (receivedService!== undefined ? 'Brak dostępnych wizyt spełniających wybrane kryteria' : '')}\r\n\r\n            {(openModal && selectedAppointment !== undefined) ? <AppointmentModal selectedAppointment={selectedAppointment} setOpenModal={setOpenModal} selectedReferral={selectedReferral}/> : ''}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(NewAppointment);","import React from \"react\";\r\nimport {FaRegUser, FaCheck, FaFile, FaShare} from 'react-icons/fa'\r\n\r\nclass CheckUp extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state={\r\n            open : false\r\n        }\r\n\r\n    }\r\n    togglePanel(){\r\n        this.setState({open : !this.state.open})\r\n    }\r\n\r\n    render() {\r\n        const checkup = this.props.checkup;\r\n        return(\r\n            <div className=\"appointmentAndCheckup\" onClick={(e)=> this.togglePanel(e)}>\r\n                <div className=\"top\">\r\n                    <p className=\"appointmentAndCheckupHeader\">{checkup.diagnosticTestName}</p>\r\n                    <div className=\"data\">\r\n                        <p>Data:</p>\r\n                        <p>{new Date(checkup.appointmentDate).toISOString().slice(0,10)}</p>\r\n                        <p>{new Date(checkup.appointmentDate).toISOString().slice(11,16)}</p>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <FaRegUser size={42}/>\r\n                    Pracownik medyczny\r\n                </div>\r\n\r\n                {this.state.open ? (\r\n                    <div>\r\n                        <hr/>\r\n\r\n                        <div className=\"subsections\">\r\n                            <FaCheck size={42}/>\r\n                            <p className=\"header\">Wynik</p>\r\n                        </div>\r\n                        <ol>\r\n                            <li>{checkup.result}</li>\r\n                        </ol>\r\n                        <hr/>\r\n\r\n                        <div className=\"subsections\">\r\n                            <FaFile size={42}/>\r\n                            <p className=\"header\">Pobierz wynik PDF</p>\r\n                        </div>\r\n                        <hr/>\r\n\r\n                        <div className=\"subsections\">\r\n                            <FaShare size={42}/>\r\n                            <p className=\"header\">Komentarz lekarza</p>\r\n                        </div>\r\n                        <div className=\"subsections\">\r\n                            <p>{checkup.description}</p>\r\n                        </div>\r\n                    </div>) : null}\r\n            </div>);\r\n    }\r\n}\r\n\r\nexport default CheckUp;","import React, {useState, useEffect} from \"react\";\r\nimport CheckUp from \"./CheckUp\";\r\nimport {baseUrl} from \"../../config/config\";\r\n\r\nconst CheckUpList = () =>{\r\n\r\n    const [checkups, setCheckups] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        const getCheckups = async () =>{\r\n            const checkups = await fetchCheckups()\r\n            setCheckups(checkups)\r\n        }\r\n        getCheckups()\r\n    },[])\r\n\r\n    const fetchCheckups = async () =>{\r\n        const res = await fetch(`${baseUrl}/patients/1/diagnosticTests`)\r\n        const data = await res.json();\r\n\r\n        return data;\r\n    }\r\n\r\n    return(\r\n        <div className=\"itemsList\">\r\n            <div className=\"listHeader\">\r\n                <h2>Twoje badania</h2>\r\n            </div>\r\n                {checkups.map((checkup) =>(\r\n                    <CheckUp key={checkup.id} checkup={checkup}/>\r\n                ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CheckUpList;","import React from \"react\";\r\n\r\nconst PrescriptionListTableRow = ({prescription}) =>{\r\n\r\n    return(\r\n        <tr key={prescription.id}>\r\n            <td>{prescription.creationDate}</td>\r\n            <td>\r\n                {(prescription.medications ?\r\n                    <ul>\r\n                    {prescription.medications.map((medicine)=>(\r\n                        <li key={medicine.id}>{medicine.name}</li>\r\n                    ))}\r\n                    </ul> : '')}\r\n            </td>\r\n            <td>\r\n                {(prescription.medications ?\r\n                    <ul>\r\n                    {prescription.medications.map((medicine)=>(\r\n                        <li key={medicine.id}>{medicine.numberOfPackages}</li>\r\n                    ))}\r\n                    </ul> : '')}\r\n            </td>\r\n            <td>Status</td>\r\n            <td>{prescription.accessCode}</td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default PrescriptionListTableRow;\r\n","import React from \"react\";\r\nimport PrescriptionListTableRow from \"./PrescriptionListTableRow\";\r\n\r\nfunction PrescriptionListTable({prescriptionData}){\r\n\r\n\r\n    return(\r\n        <table className=\"table table-hover\" style={{backgroundColor:\"white\", width : '90%'}}>\r\n            <thead>\r\n                <tr>\r\n                    <th>Data złożenia</th>\r\n                    <th>Leki</th>\r\n                    <th>Ilość opakowań</th>\r\n                    <th>Status recepty</th>\r\n                    <th>Kod e-Recepty</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n            {prescriptionData.map((prescription) =>\r\n                <PrescriptionListTableRow prescription={prescription} key={prescription.id}/>\r\n            )}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default PrescriptionListTable;","import React, {useState, useEffect} from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport PrescriptionListTable from \"./PrescriptionListTable\";\r\nimport {baseUrl} from \"../../config/config\";\r\n\r\nconst PrescriptionList = () =>{\r\n\r\n    const [prescriptions, setPrescriptions] = useState([]);\r\n    let history = useHistory();\r\n\r\n    useEffect(()=>{\r\n        const getPrescriptions = async () =>{\r\n            const prescriptions = await fetchPrescriptions()\r\n            setPrescriptions(prescriptions)\r\n        }\r\n\r\n        getPrescriptions()\r\n    },[])\r\n\r\n\r\n    const fetchPrescriptions = async () =>{\r\n        const res = await fetch(`${baseUrl}/patients/1/prescriptions`)\r\n        const data = await res.json();\r\n\r\n        return data;\r\n    }\r\n\r\n    function handleClick(){\r\n        history.push(\"/nowa-recepta\")\r\n    }\r\n\r\n    return(\r\n        <div className=\"itemsList\">\r\n            <div className=\"listHeader\">\r\n                <h2>Twoje recepty</h2>\r\n                <button type=\"button\" className=\"actionButton\" onClick={handleClick}>ODNÓW RECEPTĘ</button>\r\n            </div>\r\n            <div className=\"appointmentList\">\r\n                <PrescriptionListTable prescriptionData={prescriptions}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default PrescriptionList;","import React from 'react'\r\n\r\nconst Medication = ({medication}) =>{\r\n\r\n    return(\r\n        <tr key={medication.id}>\r\n            <td><input className=\"form-check-input\" type=\"checkbox\" id={medication.id}/></td>\r\n            <td>{medication.name}</td>\r\n            <td>{medication.numberOfPackages}</td>\r\n            <td>{medication.creationDate}</td>\r\n            <td>{medication.doctor}</td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default Medication;","import React, {useState, useEffect} from \"react\";\r\nimport Medication from \"../medication/Medication\";\r\nimport {baseUrl} from \"../../config/config\";\r\n\r\nconst PrescriptionRenewal = () =>{\r\n\r\n    const [medicines, setMedicines] = useState([]);\r\n\r\n    useEffect(() =>{\r\n        const getMedicines = async () => {\r\n            const medicines = await fetchPrescriptions()\r\n            setMedicines(medicines)\r\n        }\r\n\r\n        getMedicines()\r\n    },[])\r\n\r\n\r\n\r\n    const fetchPrescriptions = async () =>{\r\n        const res = await fetch(`${baseUrl}/patients/1/prescriptions`)\r\n        const data = await res.json()\r\n        let medicines = [];\r\n\r\n        data.map((prescription) =>{\r\n            prescription.medications.map((med)=>{\r\n                if(med.extendable === true){\r\n                    const medicine = {\r\n                        ...med,\r\n                        creationDate : prescription.creationDate,\r\n                        doctor : prescription.doctorFirstName + ' ' + prescription.doctorLastName\r\n                    };\r\n                    medicines.push(medicine);\r\n                }\r\n            })\r\n        })\r\n        return medicines;\r\n    }\r\n\r\n\r\n    return(\r\n        <div className=\"itemsList\">\r\n            <div className=\"listHeader\">\r\n                <h2>Odnowienie recepty</h2>\r\n                <button type=\"button\" className=\"actionButton\">ODNÓW RECEPTĘ</button>\r\n            </div>\r\n            <div className=\"prescriptionRenewal\">\r\n                <h4>Wybierz leki</h4>\r\n                <h5>Poniżej znajdują się leki, które możesz zamówić online</h5>\r\n                <table className=\"table table-striped\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th>Zamów</th>\r\n                        <th>Nazwa leku</th>\r\n                        <th>Ilość</th>\r\n                        <th>Data ostatniego przepisania</th>\r\n                        <th>Pracownik medyczny</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {medicines.map((medicine)=>\r\n                        <Medication medication={medicine} key={medicine.id}/>\r\n                    )}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PrescriptionRenewal;","import React from \"react\";\r\n\r\nfunction Footer(){\r\n    return(\r\n        <footer>\r\n            Wszelkie prawa zastrzeżone przez Portal Pacjenta\r\n        </footer>\r\n    )\r\n}\r\nexport default Footer;","import Navigation from \"./components/fragments/Navigation\";\r\nimport ReferralList from \"./components/referral/ReferralList\";\r\nimport HomePage from \"./components/patient/HomePage\";\r\nimport AppointmentList from \"./components/appointment/AppointmentList\";\r\nimport NewAppointment from \"./components/appointment/NewAppointment\";\r\nimport CheckUpList from \"./components/checkup/CheckUpList\";\r\nimport PrescriptionList from \"./components/prescription/PrescriptionList\";\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route\r\n} from \"react-router-dom\";\r\nimport PrescriptionRenewal from \"./components/prescription/PrescriptionRenewal\";\r\nimport Footer from \"./components/fragments/Footer\";\r\n\r\n\r\nfunction App() {\r\n  return (\r\n      <Router>\r\n          <div style={{position: 'relative', paddingBottom:'50px'}}>\r\n              <Navigation/>\r\n              <div className=\"content\">\r\n                  <Switch>\r\n                      <Route exact path=\"/moje-konto\" component={HomePage}/>\r\n                      <Route exact path=\"/wizyty\" component={AppointmentList}/>\r\n                      <Route exact path=\"/nowa-wizyta\" component={NewAppointment}/>\r\n                      <Route exact path=\"/skierowania\" component={ReferralList}/>\r\n                      <Route exact path=\"/badania\" component={CheckUpList}/>\r\n                      <Route exact path=\"/recepty\" component={PrescriptionList}/>\r\n                      <Route exact path=\"/nowa-recepta\" component={PrescriptionRenewal}/>\r\n                  </Switch>\r\n              </div>\r\n              <Footer/>\r\n          </div>\r\n      </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}