{"version":3,"sources":["logo.png","components/fragments/Navigation.js","components/fragments/Footer.js","config/config.js","components/patient/PatientData.js","components/patientFiles/UploadNewFile.js","components/appointment/Appointment.js","components/appointment/AppointmentList.js","components/appointment/NewAppointmentForm.js","components/appointment/AvailableAppointment.js","components/appointment/AppointmentModal.js","components/appointment/NewAppointment.js","components/referral/Referral.js","components/referral/ReferralList.js","components/schedule/Schedule.js","components/schedule/ScheduleForm.js","components/checkup/CheckUp.js","components/appointment/doctor/AppointmentDetailsButtonPanel.js","components/checkup/CheckUpList.js","components/prescription/PrescriptionListTableRow.js","components/prescription/PrescriptionListTable.js","components/prescription/PrescriptionList.js","components/login/LoginForm.js","components/login/RegisterForm.js","components/appointment/doctor/DoctorAppointment.js","components/appointment/doctor/TodayAppointmentList.js","components/fragments/doctor/DoctorNavigation.js","components/appointment/doctor/AppointmentDetailsForm.js","components/appointment/doctor/AppointmentDetails.js","components/appointment/doctor/visitsHistory/ArchivalVisit.js","components/appointment/doctor/visitsHistory/VisitsHistoryList.js","components/appointment/doctor/files/FilesTable.js","components/checkup/doctor/DoctorCheckUp.js","components/checkup/doctor/DoctorCheckUpList.js","stetoscope.jpg","App.js","i18n.js","index.js"],"names":["Navigation","changeLanguage","t","profileTitle","size","pathname","useLocation","Navbar","bg","variant","expand","collapseOnSelect","sticky","className","Container","fluid","Brand","alt","src","logo","Toggle","Collapse","id","Nav","to","activeHref","Link","exact","NavDropdown","title","Item","onClick","Divider","href","Footer","baseUrl","today","Date","PatientData","schema","yup","shape","firstName","min","max","required","lastName","pesel","test","digits","split","parseInt","substring","checksum","birthDate","phoneNumber","email","street","streetNumber","city","postCode","country","useState","data","setPatient","undefined","setFirstName","setLastName","setPesel","setBirthDate","setPhone","setEmail","patientsFiles","setPatientFiles","setStreet","setStreetNumber","setCity","setPostCode","setCountry","useEffect","getPatient","a","fetchPatient","patient","address","fetch","res","json","validationSchema","enableReinitialize","onSubmit","newObj","method","headers","body","JSON","stringify","then","catch","err","console","log","initialErrors","validateOnChange","validateOnMount","initialValues","handleChange","handleSubmit","values","touched","errors","isValid","Form","Row","Col","Group","Label","Control","type","name","placeholder","defaultValue","isInvalid","onChange","e","target","value","Feedback","style","display","justifyContent","Button","UploadNewFile","files","setFiles","selectedFile","setSelectedFile","deletedFile","setDeletedFile","fileDescription","setFileDescription","setErrors","ref","useRef","getPatientFiles","fetchPatientFiles","patientFiles","convertToBase64","file","Promise","resolve","reject","fileReader","FileReader","readAsDataURL","onload","result","onerror","error","handleFileUpload","base64","binaryData","atob","byteNumbers","Array","length","i","charCodeAt","Uint8Array","array","from","date","getFullYear","getMonth","getDate","fileToUpload","preventDefault","findFormErrors","Object","keys","current","newErrors","description","includes","controlId","as","Table","width","backgroundColor","map","uploadDate","window","document","createElement","byteArr","URL","createObjectURL","Blob","download","appendChild","click","removeChild","handleFileDownload","handleFileDeletion","Appointment","appointment","setCancelledAppointment","app","setAppointment","open","setOpen","x","getTimezoneOffset","formatYmd","toISOString","slice","setDate","state","togglePanel","service","serviceName","color","doctor","confirmedApp","alert","handleConfirmation","cancelledApp","handleCancellation","recommendations","diagnosticTests","diagnosticTestName","prescriptions","AppointmentList","pageSizes","reserved","appointments","setAppointments","appDate","setAppDate","filteredAppointments","setFilteredAppointments","canceledAppointment","page","setPage","count","setCount","pageSize","setPageSize","history","useHistory","getRequestParams","params","checkAppId","patientId","getAppointments","todaysVisits","visitToConfirm","futureVisits","pastVisits","finalApps","fetchAppointments","totalPages","push","sort","b","filter","htmlFor","facilityAppointments","phoneAppointments","appointmentsFilteredByDate","handleDateFilter","height","event","Pagination","siblingCount","boundaryCount","withRouter","languages","referral","location","appointmentType","setAppointmentType","language","setLanguage","setService","receivedReferral","setReceivedReferral","selectedReferral","setSelectedReferral","setSelectedDoctor","referrals","setReferrals","services","setServices","doctors","setDoctors","dateFrom","setDateFrom","dateTo","setDateTo","getServices","fetchServices","doneByMedicalStaff","getDoctors","fetchDoctors","querySelector","disabled","getElementById","medicalService","facilityService","checked","radioBtnFacility","radioBtnPhone","getReferrals","fetchReferrals","availableReferrals","expiryDate","clearReferralFields","appType","serviceMess","Check","label","Select","lang","clearService","ser","doc","AvailableAppointment","setOpenModal","setSelectedAppointment","setApp","handleClick","AppointmentModal","selectedAppointment","setReferral","referralId","confirmed","bookAnAppointment","receivedService","setReceivedService","openModal","setDoctor","getAvailableAppointments","apps","time","toString","fontFamily","Referral","setRef","issueDate","ReferralList","filterReferrals","useStyles","makeStyles","theme","todayCell","fade","palette","primary","main","weekendCell","action","disabledBackground","weekend","TimeTableCell","props","classes","startDate","getDay","DayScaleCell","Schedule","schedule","convertDate","year","month","day","hours","minutes","processedAppointments","properAppointments","entries","forEach","endDate","convertAppointments","Paper","firstDayOfWeek","locale","startDayHour","endDayHour","timeTableCellComponent","dayScaleCellComponent","ScheduleForm","specializations","setSpecializations","selectedSpecialization","setSelectedSpecialization","selectedDoctor","setSchedule","getSpecializations","fetchSpecializations","specialization","obj","spec","CheckUp","checkup","setState","checkUp","setChekup","appointmentDate","doctorsDescription","appointmentId","checkUpId","String","AppointmentDetailsButtonPanel","button","detail","indexOf","CheckUpList","checkups","setCheckups","setPatientId","getCheckups","fetchCheckups","checkUps","PrescriptionListTableRow","prescription","creationDate","medications","medicine","numberOfPackages","accessCode","PrescriptionListTable","prescriptionData","PrescriptionList","setPrescriptions","getPrescriptions","fetchPrescriptions","password","LoginForm","marginTop","marginBottom","xs","md","fontSize","confirmPassword","oneOf","RegisterForm","newPerson","DoctorAppointment","moment","now","medicalServiceName","diff","TodayAppointmentList","DoctorNavigation","AppointmentDetailsForm","setCheckUps","setMedications","sessionStorage","getItem","setDescription","setRecommendations","referralExpiryDate","setReferralExpiryDate","referralToDelete","setReferralToDelete","saved","parse","medication","setMedication","medicationDosage","setMedicationDosage","medicationQuantity","setMedicationQuantity","medicationToDelete","setMedicationToDelete","medicationsToAdd","setMedicationsToAdd","selectedCheckup","setSelectedCheckup","checkupDescription","setCheckupDescription","checkupResult","setCheckupResult","checkupResultFile","setCheckupResultFile","checkupToDelete","setCheckupToDelete","checkUpsToAdd","setCheckUpsToAdd","getCheckUps","fetchCheckUps","getMedications","fetchMedications","handleCheckupAddition","addedCheckup","setItem","rows","column","overflow","handleReferralAddition","refIndex","splice","handleReferralDeletion","medicationId","handleMedicationAddition","medIndex","handleMedicationDeletion","checkupIndex","handleCheckupDeletion","marginLeft","marginRight","clear","Math","floor","random","fetchBody","AppointmentDetails","ArchivalVisit","VisitsHistoryList","patientsAppointments","setPatientsAppointments","patientAppointment","FilesTable","getFiles","fetchFiles","DoctorCheckUp","setShowAll","setCheckUp","setResult","setFile","setDoctorsDescription","showForm","handleRealization","setTimeout","toUpperCase","DoctorCheckUpList","filterCheckups","App","logged","patientMode","setPatientMode","useTranslation","i18n","backgroundImage","background","path","component","use","Backend","LanguageDetector","initReactI18next","init","fallbackLng","debug","detection","order","cache","interpolation","escapeValue","ReactDOM","render","StrictMode","fallback"],"mappings":"mNAAe,MAA0B,iC,oECsD1BA,MA/Cf,YAAyC,IAApBC,EAAmB,EAAnBA,eAAgBC,EAAG,EAAHA,EAC3BC,EAAgB,cAAC,IAAD,CAAUC,KAAM,KAC/BC,EAAYC,cAAZD,SACP,OACQ,cAACE,EAAA,EAAD,CAAQC,GAAG,QAAQC,QAAQ,QAAQC,OAAO,KAAKC,iBAAiB,OAAOC,OAAO,MAAMC,UAAU,eAA9F,SACI,eAACC,EAAA,EAAD,CAAWC,OAAK,EAAhB,UACI,cAACR,EAAA,EAAOS,MAAR,CAAcH,UAAU,eAAxB,SAAuC,qBAAKI,IAAI,kBAAkBC,IAAKC,MACvE,cAACZ,EAAA,EAAOa,OAAR,CAAe,gBAAc,qBAC7B,eAACb,EAAA,EAAOc,SAAR,CAAiBC,GAAG,8BAA8BT,UAAU,cAA5D,UACI,eAACU,EAAA,EAAD,CAAKV,UAAU,SAAf,UACQ,cAAC,gBAAD,CAAeW,GAAG,UAAUC,WAAW,SAAvC,SACI,cAACF,EAAA,EAAIG,KAAL,CAAUC,OAAK,EAACd,UAAU,cAA1B,SAA0CX,EAAE,oBAEhD,cAAC,gBAAD,CAAesB,GAAG,eAAeC,WAAW,SAA5C,SACI,cAACF,EAAA,EAAIG,KAAL,CAAUC,OAAK,EAACd,UAAU,cAA1B,SAA0CX,EAAE,iBAEhD,cAAC,gBAAD,CAAesB,GAAG,UAAUC,WAAW,SAAvC,SACI,cAACF,EAAA,EAAIG,KAAL,CAAUC,OAAK,EAACd,UAAU,cAA1B,SAA0CX,EAAE,iBAEhD,cAAC,gBAAD,CAAesB,GAAG,WAAWC,WAAW,SAAxC,SACI,cAACF,EAAA,EAAIG,KAAL,CAAUC,OAAK,EAACd,UAAU,cAA1B,SAA0CX,EAAE,gBAEhD,cAAC,gBAAD,CAAesB,GAAG,WAAWC,WAAW,SAAxC,SACI,cAACF,EAAA,EAAIG,KAAL,CAAUC,OAAK,EAACd,UAAU,cAA1B,SAA0CX,EAAE,uBAd3BG,GAiB7B,eAACuB,EAAA,EAAD,CAAaf,UAAU,mBAAmBgB,MAAO1B,EAAcmB,GAAG,qBAAlE,UACI,cAAC,gBAAD,CAAeE,GAAG,cAAcC,WAAW,SAA3C,SACI,cAACF,EAAA,EAAIG,KAAL,CAAUC,OAAK,EAACd,UAAU,wBAA1B,SAAmDX,EAAE,iBAEzD,cAAC,gBAAD,CAAesB,GAAG,cAAcC,WAAW,SAA3C,SACI,cAACF,EAAA,EAAIG,KAAL,CAAUC,OAAK,EAACd,UAAU,eAA1B,SAA0CX,EAAE,eAGhD,eAAC0B,EAAA,EAAD,CAAaC,MAAO3B,EAAE,YAAaoB,GAAG,qBAAtC,UACI,cAACM,EAAA,EAAYE,KAAb,CAAkBC,QAAS,WAAO9B,EAAe,OAAjD,qBACA,cAAC2B,EAAA,EAAYE,KAAb,CAAkBC,QAAS,WAAO9B,EAAe,OAAjD,uBAEJ,cAAC2B,EAAA,EAAYI,QAAb,IACA,cAACJ,EAAA,EAAYE,KAAb,CAAkBG,KAAK,WAAvB,SAAmC/B,EAAE,wBCrClDgC,MAPf,YAAqB,IAAJhC,EAAG,EAAHA,EACb,OACI,iCACKA,EAAE,a,2ECLFiC,EAA6E,uCCQnFC,EAAQ,IAAIC,KA6PJC,EA3PK,SAAC,GAAS,IAARpC,EAAO,EAAPA,EAEZqC,EAASC,MAAaC,MAAM,CAC9BC,UAAWF,MAAaG,IAAI,EAAGzC,EAAE,0BAA0B0C,IAAI,GAAI1C,EAAE,0BAA0B2C,SAAS3C,EAAE,aAC1G4C,SAAUN,MAAaG,IAAI,EAAGzC,EAAE,yBAAyB0C,IAAI,GAAI1C,EAAE,yBAAyB2C,SAAS3C,EAAE,aACvG6C,MAAOP,MAAaG,IAAI,GAAIzC,EAAE,wBAAwB0C,IAAI,GAAI1C,EAAE,wBAC3D8C,KAAK,YAAa9C,EAAE,sBACjB,SAAuB6C,GAEnB,IAAwB,IADd,cACFC,KAAKD,GACT,OAAO,EAEP,IAAIE,GAAU,GAAKF,GAAOG,MAAM,IAChC,GAAKC,SAASJ,EAAMK,UAAU,EAAG,IAAM,IAAQD,SAASJ,EAAMK,UAAU,EAAG,IAAM,GAC7E,OAAO,EAEX,IAAIC,GAAY,EAAIF,SAASF,EAAO,IAAM,EAAIE,SAASF,EAAO,IAAM,EAAIE,SAASF,EAAO,IAAM,EAAIE,SAASF,EAAO,IAAM,EAAIE,SAASF,EAAO,IAAM,EAAIE,SAASF,EAAO,IAAM,EAAIE,SAASF,EAAO,IAAM,EAAIE,SAASF,EAAO,IAAM,EAAIE,SAASF,EAAO,IAAM,EAAIE,SAASF,EAAO,KAAO,GAKrR,OAJiB,IAAbI,IACAA,EAAW,IACfA,EAAW,GAAKA,EAERF,SAASF,EAAO,OAASI,KAEtCR,SAAS3C,EAAE,aACtBoD,UAAWd,MAAWI,IAAIR,EAAOlC,EAAE,mBAAmB2C,SAAS3C,EAAE,aACjEqD,YAAaf,MAAaG,IAAI,EAAGzC,EAAE,qBAAqB2C,SAAS3C,EAAE,aACnEsD,MAAOhB,MAAagB,MAAMtD,EAAE,eAAe2C,SAAS3C,EAAE,aACtDuD,OAAQjB,MAAaG,IAAI,GAAGE,SAAS3C,EAAE,aACvCwD,aAAclB,MAAaK,SAAS3C,EAAE,aACtCyD,KAAMnB,MAAaK,SAAS3C,EAAE,aAC9B0D,SAAUpB,MAAaK,SAAS3C,EAAE,aAClC2D,QAASrB,MAAaK,SAAS3C,EAAE,eAGrC,EAA2B4D,mBAAS,IAApC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAkCF,wBAASG,GAA3C,mBAAOvB,EAAP,KAAkBwB,EAAlB,KACA,EAAgCJ,wBAASG,GAAzC,mBAAOnB,EAAP,KAAiBqB,EAAjB,KACA,EAA0BL,wBAASG,GAAnC,mBAAOlB,EAAP,KAAcqB,EAAd,KACA,EAAkCN,wBAASG,GAA3C,mBAAOX,EAAP,KAAkBe,EAAlB,KACA,EAAgCP,wBAASG,GAAzC,mBAAOV,EAAP,KAAoBe,EAApB,KACA,EAA0BR,wBAASG,GAAnC,mBAAOT,EAAP,KAAce,EAAd,KACA,EAAyCT,wBAASG,GAAlD,mBAAOO,EAAP,KAAsBC,EAAtB,KAEA,EAA4BX,wBAASG,GAArC,mBAAOR,EAAP,KAAeiB,EAAf,KACA,EAAwCZ,wBAASG,GAAjD,mBAAOP,GAAP,KAAqBiB,GAArB,KACA,GAAwBb,wBAASG,GAAjC,qBAAON,GAAP,MAAaiB,GAAb,MACA,GAAgCd,wBAASG,GAAzC,qBAAOL,GAAP,MAAiBiB,GAAjB,MACA,GAA8Bf,wBAASG,GAAvC,qBAAOJ,GAAP,MAAgBiB,GAAhB,MAGAC,qBAAU,WACN,IAAMC,EAAU,uCAAG,4BAAAC,EAAA,sEACOC,KADP,OACTC,EADS,OAEfnB,EAAWmB,GAFI,2CAAH,qDAKhBH,MACD,IAEHD,qBAAU,gBACMd,IAATF,IACCG,EAAaH,EAAKrB,WAClByB,EAAYJ,EAAKjB,UACjBsB,EAASL,EAAKhB,OACdsB,EAAaN,EAAKT,WAClBgB,EAASP,EAAKR,aACdgB,EAASR,EAAKP,OACdiB,EAAgBV,EAAKS,eACrBT,EAAKqB,QAAUV,EAAUX,EAAKqB,QAAQ3B,QAAUiB,OAAUT,GAC1DF,EAAKqB,QAAUT,GAAgBZ,EAAKqB,QAAQ1B,cAAgBiB,QAAgBV,GAC5EF,EAAKqB,QAAUR,GAAQb,EAAKqB,QAAQzB,MAAQiB,QAAQX,GACpDF,EAAKqB,QAAUP,GAAYd,EAAKqB,QAAQxB,UAAYiB,QAAYZ,GAChEF,EAAKqB,QAAUN,GAAWf,EAAKqB,QAAQvB,SAAWiB,QAAWb,MAEnE,CAACF,IAEH,IAAMmB,GAAY,uCAAG,8BAAAD,EAAA,sEACCI,MAAM,GAAD,OAAIlD,EAAJ,gBADN,cACXmD,EADW,gBAEEA,EAAIC,OAFN,cAEXxB,EAFW,yBAIVA,GAJU,2CAAH,qDAmClB,OAAIA,EAII,sBAAKlD,UAAU,YAAf,UACI,qBAAKA,UAAU,aAAf,SACI,6BAAKX,EAAE,cAEX,cAAC,IAAD,CAAQsF,iBAAkBjD,EAClBkD,oBAAoB,EACpBC,SAtCpB,WACI,IAAMC,EAAS,CACX,GAAM,EACNP,QAAS,CACL3B,SACAC,gBACAE,YACAD,QACAE,YAEJN,cACAb,YACAI,WACAU,QACAF,YACAP,QACAyB,iBAGJa,MAAM,GAAD,OAAIlD,EAAJ,aAAuB,CACxByD,OAAQ,MACRC,QAAS,CAAC,8BAA8B,GAA9B,OAAkC1D,GACxC,eAAgB,kCACpB2D,KAAMC,KAAKC,UAAUL,KACtBM,MAAK,SAACX,GAAD,OAAOA,EAAIC,UACdW,OAAM,SAACC,GAAD,OAAOC,QAAQC,IAAIF,OAcdG,cAAe,GACfC,kBAAkB,EAClBC,iBAAiB,EACjBC,cAAe,CACX/D,UAAYA,EACZI,SAAWA,EACXC,MAAQA,EACRO,UAAYA,EACZC,YAAcA,EACdC,MAAQA,EACRC,OAASA,EACTC,aAAeA,GACfC,KAAMA,GACNC,SAAWA,GACXC,QAAUA,IAjBtB,SAmBK,cACK6C,aADL,IAEKC,EAFL,EAEKA,aACAC,EAHL,EAGKA,OACAC,EAJL,EAIKA,QAEAC,GANL,EAKKC,QALL,EAMKD,QANL,OAQG,eAACE,EAAA,EAAD,CAAMnG,UAAU,qBAAqB6E,SAAUiB,EAA/C,UACI,eAACM,EAAA,EAAD,CAAKpG,UAAU,0BAAf,UACI,cAACqG,EAAA,EAAD,UACI,eAACF,EAAA,EAAKG,MAAN,WACI,cAACH,EAAA,EAAKI,MAAN,UAAalH,EAAE,eACf,cAAC8G,EAAA,EAAKK,QAAN,CAAcC,KAAK,OAAOC,KAAK,YAAYC,YAAatH,EAAE,aAAcE,KAAK,KAAKqH,aAAcb,EAAOlE,UAAWgF,YAAaZ,EAAOpE,UAAWqE,QAASF,EAAQnE,YAAcoE,EAAOpE,UAAWiF,SAAU,SAACC,GAAD,OAAK1D,EAAa0D,EAAEC,OAAOC,UACvO,cAACd,EAAA,EAAKK,QAAQU,SAAd,CAAuBT,KAAK,UAA5B,SAAuCR,EAAOpE,iBAGtD,cAACwE,EAAA,EAAD,UACI,eAACF,EAAA,EAAKG,MAAN,WACI,cAACH,EAAA,EAAKI,MAAN,UAAalH,EAAE,cACf,cAAC8G,EAAA,EAAKK,QAAN,CAAcC,KAAK,OAAOC,KAAK,WAAWC,YAAatH,EAAE,YAAaE,KAAK,KAAMqH,aAAcb,EAAO9D,SAAU4E,YAAaZ,EAAOhE,SAAUiE,QAASF,EAAQ/D,WAAagE,EAAOhE,SAAU6E,SAAU,SAACC,GAAD,OAAKzD,EAAYyD,EAAEC,OAAOC,UACjO,cAACd,EAAA,EAAKK,QAAQU,SAAd,CAAuBT,KAAK,UAA5B,SAAuCR,EAAOhE,mBAI1D,eAACmE,EAAA,EAAD,CAAKpG,UAAU,0BAAf,UACI,cAACqG,EAAA,EAAD,UACI,eAACF,EAAA,EAAKG,MAAN,WACI,cAACH,EAAA,EAAKI,MAAN,qBACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,OAAOC,KAAK,QAAQC,YAAY,QAAQpH,KAAK,KAAKqH,aAAcb,EAAO7D,MAAO2E,YAAaZ,EAAO/D,MAAOgE,QAASF,EAAQ9D,QAAU+D,EAAO/D,MAAO4E,SAAU,SAACC,GAAD,OAAKxD,EAASwD,EAAEC,OAAOC,UACtM,cAACd,EAAA,EAAKK,QAAQU,SAAd,CAAuBT,KAAK,UAA5B,SAAuCR,EAAO/D,aAGtD,cAACmE,EAAA,EAAD,UACI,eAACF,EAAA,EAAKG,MAAN,WACI,cAACH,EAAA,EAAKI,MAAN,UAAalH,EAAE,eACf,cAAC8G,EAAA,EAAKK,QAAN,CAAcC,KAAK,OAAOC,KAAK,YAAYC,YAAatH,EAAE,aAAcE,KAAK,KAAKqH,aAAcb,EAAOtD,UAAWoE,YAAaZ,EAAOxD,UAAWyD,QAASF,EAAQvD,YAAcwD,EAAOxD,UAAWqE,SAAU,SAACC,GAAD,OAAKvD,EAAauD,EAAEC,OAAOC,UACvO,cAACd,EAAA,EAAKK,QAAQU,SAAd,CAAuBT,KAAK,UAA5B,SAAuCR,EAAOxD,oBAI1D,eAAC2D,EAAA,EAAD,CAAKpG,UAAU,0BAAf,UACI,cAACqG,EAAA,EAAD,UACI,eAACF,EAAA,EAAKG,MAAN,WACI,cAACH,EAAA,EAAKI,MAAN,UAAalH,EAAE,iBACf,cAAC8G,EAAA,EAAKK,QAAN,CAAcC,KAAK,OAAOC,KAAK,cAAcC,YAAatH,EAAE,eAAgBE,KAAK,KAAKqH,aAAcb,EAAOrD,YAAamE,YAAaZ,EAAOvD,YAAawD,QAASF,EAAQtD,cAAgBuD,EAAOvD,YAAaoE,SAAU,SAACC,GAAD,OAAKtD,EAASsD,EAAEC,OAAOC,UAC/O,cAACd,EAAA,EAAKK,QAAQU,SAAd,CAAuBT,KAAK,UAA5B,SAAuCR,EAAOvD,mBAGtD,cAAC2D,EAAA,EAAD,UACI,eAACF,EAAA,EAAKG,MAAN,WACI,cAACH,EAAA,EAAKI,MAAN,qBACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,QAAQC,KAAK,QAAQC,YAAY,QAAQpH,KAAK,KAAKqH,aAAcb,EAAOpD,MAAOkE,YAAaZ,EAAOtD,MAAOuD,QAASF,EAAQrD,QAAUsD,EAAOtD,MAAOmE,SAAU,SAACC,GAAD,OAAKrD,EAASqD,EAAEC,OAAOC,UACvM,cAACd,EAAA,EAAKK,QAAQU,SAAd,CAAuBT,KAAK,UAA5B,SAAuCR,EAAOtD,gBAI1D,uBACA,eAACyD,EAAA,EAAD,CAAKpG,UAAU,0BAAf,UACI,cAACqG,EAAA,EAAD,UACI,eAACF,EAAA,EAAKG,MAAN,WACI,cAACH,EAAA,EAAKI,MAAN,UAAalH,EAAE,YACf,cAAC8G,EAAA,EAAKK,QAAN,CAAcC,KAAK,OAAOC,KAAK,SAASC,YAAatH,EAAE,UAAWE,KAAK,KAAKqH,aAAcb,EAAOnD,OAAQiE,YAAaZ,EAAOrD,OAAQsD,QAASF,EAAQpD,SAAWqD,EAAOrD,OAAQkE,SAAU,SAACC,GAAD,OAAKlD,EAAUkD,EAAEC,OAAOC,UAClN,cAACd,EAAA,EAAKK,QAAQU,SAAd,CAAuBT,KAAK,UAA5B,SAAuCR,EAAOrD,cAGtD,cAACyD,EAAA,EAAD,UACI,eAACF,EAAA,EAAKG,MAAN,WACI,cAACH,EAAA,EAAKI,MAAN,UAAalH,EAAE,kBACf,cAAC8G,EAAA,EAAKK,QAAN,CAAcC,KAAK,OAAOC,KAAK,eAAeC,YAAatH,EAAE,gBAAiBE,KAAK,KAAKqH,aAAcb,EAAOlD,aAAcgE,YAAaZ,EAAOpD,aAAcqD,QAASF,EAAQnD,eAAiBoD,EAAOpD,aAAciE,SAAU,SAACC,GAAD,OAAKjD,GAAgBiD,EAAEC,OAAOC,UAC5P,cAACd,EAAA,EAAKK,QAAQU,SAAd,CAAuBT,KAAK,UAA5B,SAAuCR,EAAOpD,uBAI1D,eAACuD,EAAA,EAAD,CAAKpG,UAAU,0BAAf,UACI,cAACqG,EAAA,EAAD,UACI,eAACF,EAAA,EAAKG,MAAN,WACI,cAACH,EAAA,EAAKI,MAAN,UAAalH,EAAE,UACf,cAAC8G,EAAA,EAAKK,QAAN,CAAcC,KAAK,OAAOC,KAAK,OAAOC,YAAatH,EAAE,QAASE,KAAK,KAAKqH,aAAcb,EAAOjD,KAAM+D,YAAaZ,EAAOnD,KAAMoD,QAASF,EAAQlD,OAASmD,EAAOnD,KAAMgE,SAAU,SAACC,GAAD,OAAKhD,GAAQgD,EAAEC,OAAOC,UACpM,cAACd,EAAA,EAAKK,QAAQU,SAAd,CAAuBT,KAAK,UAA5B,SAAuCR,EAAOnD,YAGtD,cAACuD,EAAA,EAAD,UACI,eAACF,EAAA,EAAKG,MAAN,WACI,cAACH,EAAA,EAAKI,MAAN,UAAalH,EAAE,cACf,cAAC8G,EAAA,EAAKK,QAAN,CAAcC,KAAK,OAAOC,KAAK,WAAWC,YAAatH,EAAE,YAAaE,KAAK,KAAKqH,aAAcb,EAAOhD,SAAU8D,YAAaZ,EAAOlD,SAAUmD,QAASF,EAAQjD,WAAakD,EAAOlD,SAAU+D,SAAU,SAACC,GAAD,OAAK/C,GAAY+C,EAAEC,OAAOC,UAChO,cAACd,EAAA,EAAKK,QAAQU,SAAd,CAAuBT,KAAK,UAA5B,SAAuCR,EAAOlD,mBAI1D,eAACqD,EAAA,EAAD,CAAKpG,UAAU,0BAAf,UACI,cAACqG,EAAA,EAAD,UACI,eAACF,EAAA,EAAKG,MAAN,WACI,cAACH,EAAA,EAAKI,MAAN,UAAalH,EAAE,aACf,cAAC8G,EAAA,EAAKK,QAAN,CAAcC,KAAK,OAAOC,KAAK,UAAUC,YAAatH,EAAE,WAAYE,KAAK,KAAKqH,aAAcb,EAAO/C,QAAS6D,YAAaZ,EAAOjD,QAASkD,QAASF,EAAQhD,UAAYiD,EAAOjD,QAAS8D,SAAU,SAACC,GAAD,OAAK9C,GAAW8C,EAAEC,OAAOC,UACzN,cAACd,EAAA,EAAKK,QAAQU,SAAd,CAAuBT,KAAK,UAA5B,SAAuCR,EAAOjD,eAGtD,cAACqD,EAAA,EAAD,UACI,cAACF,EAAA,EAAKG,MAAN,SAGR,qBAAKa,MAAO,CAACC,QAAQ,OAAQC,eAAgB,UAA7C,SACI,cAACC,EAAA,EAAD,CAAQ1H,QAAQ,UAAUL,KAAK,KAAKkH,KAAK,SAAzC,SAAmDpH,EAAE,qBAjItE,M,yBC2GAkI,MA9Nf,YAA6B,IAALlI,EAAI,EAAJA,EACpB,EAA0B4D,mBAAS,IAAnC,mBAAOuE,EAAP,KAAcC,EAAd,KACA,EAAwCxE,wBAASG,GAAjD,mBAAOsE,EAAP,KAAqBC,EAArB,KACA,EAAsC1E,wBAASG,GAA/C,mBAAOwE,EAAP,KAAoBC,EAApB,KACA,EAA8C5E,wBAASG,GAAvD,mBAAO0E,EAAP,KAAwBC,EAAxB,KACA,EAA4B9E,mBAAS,IAArC,mBAAOgD,EAAP,KAAe+B,EAAf,KACMC,EAAMC,mBAMZhE,qBAAU,WACN,IAAMiE,EAAe,uCAAG,4BAAA/D,EAAA,8DACAhB,IAAjBsE,EADiB,gCAEWU,IAFX,OAEVC,EAFU,OAGhBZ,EAASY,GAHO,2CAAH,qDAMrBF,MAEF,CAACT,IAEHxD,qBAAU,WACN,IAAMiE,EAAe,uCAAG,4BAAA/D,EAAA,8DACDhB,IAAhBwE,EADiB,gCAEWQ,IAFX,OAEVC,EAFU,OAGhBZ,EAASY,GACTR,OAAezE,GAJC,2CAAH,qDAOrB+E,MACF,CAACP,IAEH,IAAMQ,EAAiB,uCAAG,8BAAAhE,EAAA,sEACJI,MAAM,GAAD,OAAIlD,EAAJ,sBADD,cAChBmD,EADgB,gBAEHA,EAAIC,OAFD,cAEhBxB,EAFgB,yBAIfA,GAJe,2CAAH,qDAOjBoF,EAAkB,SAACC,GACrB,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACzB,IAAMC,EAAa,IAAIC,WACvBD,EAAWE,cAAcN,GACzBI,EAAWG,OAAS,WAChBL,EAAQE,EAAWI,SAEvBJ,EAAWK,QAAU,SAACC,GAClBP,EAAOO,QAKbC,EAAgB,uCAAG,WAAOnC,GAAP,mCAAA3C,EAAA,6DACfmE,EAAOxB,EAAEC,OAAOQ,MAAM,GADP,SAEAc,EAAgBC,GAFhB,OAOrB,IALMY,EAFe,OAGjBjG,EAAOiG,EAAO9G,MAAM,WAAW,GAC/B+G,EAAaC,KAAKnG,GAElBoG,EAAc,IAAIC,MAAMH,EAAWI,QAC/BC,EAAI,EAAGA,EAAIL,EAAWI,OAAQC,IAClCH,EAAYG,GAAKL,EAAWM,WAAWD,GAEvCtH,EAAO,IAAIwH,WAAWL,GACtBM,EAAQL,MAAMM,KAAK1H,GAEnBZ,EAAQ,IAAIC,KACZsI,EAAOvI,EAAMwI,cAAc,KAAKxI,EAAMyI,WAAW,GAAG,IAAIzI,EAAM0I,UAE9DC,EAAe,CACf,YAAgBJ,EAChB,KAASF,EACT,KAAS7C,EAAEC,OAAOQ,MAAM,GAAGf,KAC3B,KAASM,EAAEC,OAAOQ,MAAM,GAAGd,MAE/BiB,EAAgBuC,GAtBK,4CAAH,sDAyBfpE,EAAe,SAACiB,GACnBA,EAAEoD,iBAEF,IAAMlE,EAASmE,IAEZC,OAAOC,KAAKrE,GAAQuD,OAAS,EAC5BxB,EAAU/B,QAEU7C,IAAjBsE,QAAkDtE,IAApB0E,IAC7BJ,EAAY,YAAkBI,EAE9BtD,MAAM,GAAD,OAAIlD,EAAJ,qBAA+B,CAChCyD,OAAS,OACTC,QAAS,CACL,eAAgB,mBAChB,8BAA8B,GAA9B,OAAkC1D,IAEtC2D,KAAMC,KAAKC,UAAUuC,KACtBtC,MAAK,WACJuC,OAAgBvE,GAChB2E,EAAmB,IA1F/BE,EAAIsC,QAAQtD,MAAQ,MA6FP5B,OAAM,SAAAC,GAAG,OAAEC,QAAQC,IAAIF,QA6BjC8E,EAAiB,WACpB,IAAMI,EAAY,GAelB,YAZoBpH,IAAjBsE,IACC8C,EAAUjC,KAAOlJ,EAAE,yBAGA+D,IAApB0E,GAAqD,KAApBA,IAChC0C,EAAUC,YAAcpL,EAAE,8BAGV+D,IAAjBsE,GAVe,CAAC,YAAa,aAAc,kBAAmB,sBAUrBgD,SAAShD,EAAajB,QAC9D+D,EAAUjC,KAAOlJ,EAAE,2BAGhBmL,GAGX,OACI,sBAAKxK,UAAU,YAAf,UACI,qBAAKA,UAAU,aAAf,SACI,6BAAKX,EAAE,kBAEX,eAAC8G,EAAA,EAAD,CAAMnG,UAAU,qBAAhB,UACI,eAACmG,EAAA,EAAKG,MAAN,CAAYqE,UAAU,OAAO3K,UAAU,OAAvC,UACI,cAACmG,EAAA,EAAKI,MAAN,UAAalH,EAAE,UACf,cAAC8G,EAAA,EAAKK,QAAN,CAAcoE,GAAG,QAAQ3C,IAAKA,EAAKxB,KAAK,OAAOI,YAAaZ,EAAOsC,KAAMzB,SAAU,SAACC,GAChFmC,EAAiBnC,GACZd,EAAM,MACP+B,EAAU,2BACH/B,GADE,kBAEJ,OAAQ,WAGrB,cAACE,EAAA,EAAKK,QAAQU,SAAd,CAAuBT,KAAK,UAA5B,SAAuCR,EAAOsC,UAElD,eAACpC,EAAA,EAAKG,MAAN,CAAYqE,UAAU,cAAc3K,UAAU,OAA9C,UACI,cAACmG,EAAA,EAAKI,MAAN,UAAalH,EAAE,qBACf,cAAC8G,EAAA,EAAKK,QAAN,CAAcoE,GAAG,WAAW3D,MAAOa,EAAiBjB,YAAaZ,EAAOwE,YAAa3D,SAAU,SAACC,GAC5FgB,EAAmBhB,EAAEC,OAAOC,OACvBhB,EAAM,aACP+B,EAAU,2BACH/B,GADE,kBAEJ,cAAe,WAG5B,cAACE,EAAA,EAAKK,QAAQU,SAAd,CAAuBT,KAAK,UAA5B,SAAuCR,EAAOwE,iBAElD,qBAAKtD,MAAO,CAACC,QAAQ,OAAQC,eAAgB,UAA7C,SACI,cAACC,EAAA,EAAD,CAAQ1H,QAAQ,UAAUsB,QAAS,SAAC6F,GAAD,OAAKjB,EAAaiB,IAArD,SAA0D1H,EAAE,kBAGnEmI,EAAMgC,OAAS,EACZ,eAACqB,EAAA,EAAD,CAAO7K,UAAU,6CAA6CmH,MAAO,CAAC2D,MAAQ,OAA9E,UACI,uBAAO3D,MAAO,CAAC4D,gBAAkB,WAAjC,SACA,+BACI,6BAAK1L,EAAE,oBACP,6BAAKA,EAAE,qBACP,6BAAKA,EAAE,gBACP,6BAAKA,EAAE,iBAGX,gCACCmI,EAAMwD,KAAI,SAACzC,GAAD,OACP,+BACI,6BAAKA,EAAK7B,OACV,6BAAK6B,EAAKkC,cACV,6BAAKlC,EAAK0C,aACV,6BACI,qBAAIjL,UAAU,cAAd,UACI,6BACI,cAACsH,EAAA,EAAD,CAAQ1H,QAAQ,UAAUwB,KAAI,UAAKE,EAAL,6BAAiCiH,EAAK9H,IAAMS,QAAS,SAAA6F,GAAC,OAhG5F,SAACA,EAAGwB,GAC3BxB,EAAEoD,iBACF3F,MAAM,GAAD,OAAIlD,EAAJ,6BAAgCiH,EAAK9H,KACrC2E,MAAK,SAAAX,GAAG,OAAIA,EAAIC,UAChBU,MAAK,SAAAX,GACF,IAAIL,EAAI8G,OAAOC,SAASC,cAAc,KAClCC,EAAU,IAAI1B,WAAWlF,EAAI8D,MACjCnE,EAAEhD,KAAO8J,OAAOI,IAAIC,gBAAgB,IAAIC,KAAK,CAACH,GAAU,CAAC5E,KAAM8B,EAAK9B,QACpErC,EAAEqH,SAAWhH,EAAIiC,KACjByE,SAASlG,KAAKyG,YAAYtH,GAC1BA,EAAEuH,QACFR,SAASlG,KAAK2G,YAAYxH,MAqFmFyH,CAAmB9E,EAAGwB,IAA5G,SAAoHlJ,EAAE,gBAE1H,6BACI,cAACiI,EAAA,EAAD,CAAQ1H,QAAQ,SAASwB,KAAI,UAAKE,EAAL,6BAAiCiH,EAAK9H,IAAMS,QAAS,SAAA6F,GAC9Ec,EAAeU,GArF3B,SAACxB,EAAGwB,GAC5BxB,EAAEoD,iBAEF3F,MAAM,GAAD,OAAIlD,EAAJ,6BAAgCiH,EAAK9H,IAAK,CAC3CsE,OAAQ,WACTK,MAAK,SAAAX,GAAG,OAAIA,EAAIC,UACdW,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MAgFMwG,CAAmB/E,EAAGwB,IAF1B,SAGIlJ,EAAE,qBAbbkJ,EAAK9H,YAoBXpB,EAAE,e,yBCxGd0M,EA9GK,SAAC,GAA8C,IAA7CC,EAA4C,EAA5CA,YAAaC,EAA+B,EAA/BA,wBAAyB5M,EAAM,EAANA,EACxD,EAA8B4D,mBAAS+I,GAAvC,mBAAOE,EAAP,KAAYC,EAAZ,KACA,EAAwBlJ,oBAAS,GAAjC,mBAAOmJ,EAAP,KAAaC,EAAb,KAEAnI,qBAAU,gBACWd,IAAd4I,GACCG,EAAeH,KAEpB,CAACA,IAuCJ,IAAIM,EAAuC,KAAlC,IAAI9K,MAAQ+K,oBACfC,EAAY,SAAA1C,GAAI,OAAIA,EAAK2C,cAAcC,MAAM,EAAG,KAClD,OACI,sBAAK1M,UAAWkM,EAAIpC,KAAS,IAAItI,MAAK,IAAIA,MAAOmL,SAAQ,IAAInL,MAAOyI,UAAU,IAAO,IAAIzI,KAAK0K,EAAIpC,KAAK4C,MAAM,EAAE,MAAuB,aAAdR,EAAIU,MAAwB,oCAC7I,IAAIpL,MAAK,IAAIA,MAAOmL,SAAQ,IAAInL,MAAOyI,UAAU,IAAKA,YAAe,IAAIzI,KAAK0K,EAAIpC,KAAK4C,MAAM,EAAE,KAAMzC,WAA4B,aAAdiC,EAAIU,MAAwB,qCAChJJ,EAAU,IAAIhL,QAAY0K,EAAIpC,KAAK4C,MAAM,EAAE,KAAW,IAAIlL,MAAK,IAAIA,MAAOmL,SAAQ,IAAInL,MAAOyI,UAAU,IAAKA,YAAe,IAAIzI,KAAK0K,EAAIpC,KAAK4C,MAAM,EAAE,KAAMzC,WAA2B,cAAdiC,EAAIU,MAA0B,iCACxM,oCAAuC,GAAI1L,QAAS,SAAA6F,GAAC,OA3CjE,SAAqBA,GACjBA,EAAEoD,iBACFkC,GAASD,GAyCsDS,CAAY9F,IAHvE,UAII,sBAAK/G,UAAU,MAAf,UACI,mBAAGA,UAAU,8BAAb,SAA6CkM,EAAIY,QAAWZ,EAAIY,QAAQpG,KAAQwF,EAAIa,cACpF,sBAAK/M,UAAU,OAAf,UACI,4BAAIX,EAAE,UACN,4BAAI2M,EAAYlC,KAAO,IAAItI,KAAK,IAAIA,KAAKwK,EAAYlC,MAAMwC,GAAGG,cAAcC,MAAM,EAAE,IAAM,KAC1F,4BAAIV,EAAYlC,KAAO,IAAItI,KAAK,IAAIA,KAAKwK,EAAYlC,MAAMwC,GAAGG,cAAcC,MAAM,GAAG,IAAM,KACnE,SAAtBV,EAAYY,OAAqBJ,EAAU,IAAIhL,QAAY0K,EAAIpC,KAAK4C,MAAM,EAAE,KAAS,4BAAG,cAAC,IAAD,CAAanN,KAAM,GAAI4H,MAAO,CAAC6F,MAAO,qBAGvId,EAAIpC,KACD,sBAAK3C,MAAO,CAACC,QAAS,OAAQC,eAAe,iBAA7C,UACI,gCACI,cAAC,IAAD,CAAW9H,KAAM,KAChBF,EAAE,eAFP,OAE8B6M,EAAIe,OAASf,EAAIe,OAAOpL,UAAY,IAAMqK,EAAIe,OAAOhL,SAAY,MAE/F,sBAAKjC,UAAU,qBAAf,UACQ,IAAIwB,MAAK,IAAIA,MAAOmL,SAAQ,IAAInL,MAAOyI,UAAU,IAAKA,YAAe,IAAIzI,KAAK0K,EAAIpC,KAAK4C,MAAM,EAAE,KAAMzC,WAA8B,aAAdiC,EAAIU,OAC7H,cAACtF,EAAA,EAAD,CAAQ1H,QAAQ,SAASL,KAAK,KAAK2B,QAAS,SAAA6F,GAAC,OAxDrE,SAA4BA,GACxBA,EAAEoD,iBACF,IAAI+C,EAAehB,EACnBgB,EAAaN,MAAQ,YACrBT,EAAee,GAEf1I,MAAM,GAAD,OAAIlD,EAAJ,yBAA4B0K,EAAYvL,GAAxC,YAAsD,CACvDsE,OAAQ,QACRC,QAAQ,CACJ,eAAgB,sBAErBI,MAAK,SAACX,GAAD,OAAOA,EAAIC,UACdU,KAAK8F,OAAOiC,MAAM9N,EAAE,8BACpBgG,OAAM,SAACC,GAAD,OAAOC,QAAQC,IAAIF,MA2CqC8H,CAAmBrG,IAAlE,SAAuE1H,EAAE,+BAGzD,aAAd6M,EAAIU,OACN,cAACtF,EAAA,EAAD,CAAQ1H,QAAQ,UAAUL,KAAK,KAAK2B,QAAS,SAAA6F,GAAC,OA5CtE,SAA4BA,GACxBA,EAAEoD,iBACF,IAAIkD,EAAenB,EACnBmB,EAAaT,MAAQ,YACrBX,EAAwBoB,GAExB7I,MAAM,GAAD,OAAIlD,EAAJ,yBAA4B0K,EAAYvL,GAAxC,WAAoD,CACrDsE,OAAQ,QACRC,QAAQ,CACJ,eAAgB,sBAErBI,MAAK,SAACX,GAAD,OAAOA,EAAIC,UACdU,KAAK8F,OAAOiC,MAAM9N,EAAE,6BACpBgG,OAAM,SAACC,GAAD,OAAOC,QAAQC,IAAIF,MA+BsCgI,CAAmBvG,IAAnE,SAAwE1H,EAAE,oCAG7E,GACO,SAAd6M,EAAIU,MACF,mCACCR,EACG,gCACI,uBACA,sBAAKpM,UAAU,cAAf,UACI,cAAC,IAAD,CAAST,KAAM,KACf,mBAAGS,UAAU,SAAb,SAAuBX,EAAE,wBAE7B,6BACI,6BAAK6M,EAAIqB,gBAAkBrB,EAAIqB,gBAAkBlO,EAAE,yBAEvD,uBAEA,sBAAKW,UAAU,cAAf,UACI,cAAC,IAAD,CAAQT,KAAM,KACd,mBAAGS,UAAU,SAAb,SAAuBX,EAAE,qBAE7B,4BAAI6M,EAAIsB,gBAAgBhE,OAAS,EAAK0C,EAAIsB,gBAAgBxC,KAAI,SAAC7I,GAAD,OAAQA,EAAKsL,sBAAuBpO,EAAE,gBACpG,uBAEA,sBAAKW,UAAU,cAAf,UACI,cAAC,IAAD,CAAaT,KAAM,KACnB,mBAAGS,UAAU,SAAb,SAAuBX,EAAE,iBAE7B,4BAAI6M,EAAIwB,cAAclE,OAAS,EAAInK,EAAE,kBAAmBA,EAAE,mBACpD,OACR,S,kBCuFXsO,EAjMS,SAAC,GAAQ,IAAPtO,EAAM,EAANA,EAChBuO,EAAY,CAAC,EAAG,EAAG,IAInBC,EAAW,WAGjB,EAAwC5K,mBAAS,IAAjD,mBAAO6K,EAAP,KAAqBC,EAArB,KACA,EAA8B9K,wBAASG,GAAvC,mBAAO4K,EAAP,KAAgBC,EAAhB,KACA,EAAwDhL,mBAAS,CAAC6K,IAAlE,mBAAOI,EAAP,KAA6BC,EAA7B,KACA,EAAuDlL,wBAASG,GAAhE,mBAAOgL,EAAP,KAA4BnC,EAA5B,KAEA,EAAwBhJ,mBAAS,GAAjC,mBAAOoL,EAAP,KAAaC,EAAb,KACA,EAA0BrL,mBAAS,GAAnC,mBAAOsL,EAAP,KAAcC,EAAd,KACA,EAAgCvL,mBAAS2K,EAAU,IAAnD,mBAAOa,EAAP,KAAiBC,EAAjB,KACIC,EAAUC,cAERC,EAAmB,SAACR,EAAMI,GAC5B,IAAIK,EAAS,GAQb,OANGT,IACCS,EAAM,KAAWT,EAAO,GAEzBI,IACCK,EAAM,KAAWL,GAEdK,GAqCX,SAASC,EAAW7C,GAChB,OAAuB,MAAhBA,EAAI8C,UAnCf9K,qBAAU,WACN,IAAM+K,EAAe,uCAAG,oCAAA7K,EAAA,6DAChB8K,EAAe,GACfC,EAAgB,GAChBC,EAAe,GACfC,EAAa,GACbC,EAAU,GALM,SAMOC,IACtBnK,MAAK,SAAAX,GACF+J,EAAS/J,EAAI+K,YACb/K,EAAIqJ,aAAa9C,KAAI,SAACkB,GACb,IAAI1K,KAAK0K,EAAIpC,KAAK4C,MAAM,EAAE,KAAQ,IAAIlL,MAAK,IAAIA,MAAOmL,SAAQ,IAAInL,MAAOyI,UAAU,KAAMiC,EAAIU,QAAUiB,EACxGuB,EAAaK,KAAKvD,GACX,IAAI1K,MAAK,IAAIA,MAAOmL,SAAQ,IAAInL,MAAOyI,UAAU,IAAKA,YAAe,IAAIzI,KAAK0K,EAAIpC,KAAK4C,MAAM,EAAE,KAAMzC,WAAciC,EAAIU,QAAUiB,EACxIsB,EAAeM,KAAKvD,GAtC1B,cAuCWA,EAAIU,MACTsC,EAAaO,KAAKvD,GAvC7B,SAwCgBA,EAAIU,OACTyC,EAAWI,KAAKvD,SAGzB9G,MAAK,WACJ8J,EAAeA,EAAaQ,MAAK,SAACtL,EAAEuL,GAAH,OAAO,IAAInO,KAAK4C,EAAE0F,MAAQ,IAAItI,KAAKmO,EAAE7F,SACtEwF,EAAS,UAAOH,EAAP,YAA0BD,GAAiBE,EAAiBC,MAtBzD,cAyBpBtB,EAAgBuB,GAChBnB,EAAwBmB,GA1BJ,4CAAH,qDA6BrBL,MACD,CAACb,EAAqBC,EAAMI,IAO/BvK,qBAAU,WACN,QAAyBd,IAAtBgL,EAAgC,CAC/B,IAAMrF,EAAS+E,EAAa8B,OAAOb,GACnChB,EAAgBhF,MAEtB,CAACqF,IAGH,IAAMmB,EAAiB,uCAAG,gCAAAnL,EAAA,yDAGH,QAFb0K,EAASD,EAAiBR,EAAMI,IAE5BJ,MAAiC,OAAhBS,EAAOvP,KAHZ,gCAINiF,MAAM,GAAD,OAAIlD,EAAJ,yCAA4CwN,EAAOT,KAAnD,iBAAgES,EAAOvP,OAJtE,OAIlBkF,EAJkB,iCAKG,OAAhBqK,EAAOT,MAAiC,OAAhBS,EAAOvP,KALlB,kCAMNiF,MAAM,GAAD,OAAIlD,EAAJ,yCAA4CwN,EAAOT,OANlD,QAMlB5J,EANkB,kCAOG,OAAhBqK,EAAOT,MAAiC,OAAhBS,EAAOvP,KAPlB,kCAQNiF,MAAM,GAAD,OAAIlD,EAAJ,yCAA4CwN,EAAOvP,OARlD,QAQlBkF,EARkB,gDAUND,MAAM,GAAD,OAAIlD,EAAJ,6BAVC,QAUlBmD,EAVkB,gCAaHA,EAAIC,OAbD,eAahBxB,EAbgB,yBAefA,GAfe,4CAAH,qDAyDvB,OACI,sBAAKlD,UAAU,YAAf,UACI,qBAAKA,UAAU,aAAf,SACI,6BAAKX,EAAE,wBAEX,qBAAKW,UAAU,wBAAf,SACI,sBAAKA,UAAU,sBAAf,UACI,sBAAKA,UAAU,aAAf,UACI,sBAAKA,UAAU,WAAf,UACI,uBAAOyG,KAAK,QAAQhG,GAAG,MAAMiG,KAAK,MAAMO,MAAM,MAAMH,SA7BtD,WAClBqH,EAAwBL,MA6BJ,uBAAO+B,QAAQ,MAAf,SAAsBxQ,EAAE,YAE5B,sBAAKW,UAAU,WAAf,UACI,uBAAOyG,KAAK,QAAQhG,GAAG,SAASiG,KAAK,MAAMO,MAAM,SAASH,SA3CrD,WACzB,IAAIgJ,EAAuBhC,EAAa8B,QAAO,SAAA5D,GAAW,MArG7C,aAqGkDA,EAAYvF,QAC3E0H,EAAwB2B,MA0CJ,uBAAOD,QAAQ,SAAf,SAAyBxQ,EAAE,4BAE/B,sBAAKW,UAAU,WAAf,UACI,uBAAOyG,KAAK,QAAQhG,GAAG,OAAOiG,KAAK,MAAMO,MAAM,OAAOH,SA1CpD,WACtB,IAAIiJ,EAAoBjC,EAAa8B,QAAO,SAAA5D,GAAW,MAzG7C,cAyGkDA,EAAYvF,QACxE0H,EAAwB4B,MAyCJ,uBAAOF,QAAQ,OAAf,SAAuBxQ,EAAE,4BAGjC,8BACI,wBAAQW,UAAU,eAAekB,QA1BjC,WAChByN,EAAQc,KAAK,iBAyBG,SAAwDpQ,EAAE,4BAItE,sBAAKW,UAAU,OAAf,UACI,qBAAKA,UAAU,UAAf,SACI,cAACmG,EAAA,EAAD,UACI,eAACA,EAAA,EAAKG,MAAN,WACI,cAACH,EAAA,EAAKI,MAAN,UAAalH,EAAE,UACf,cAAC8G,EAAA,EAAKK,QAAN,CAAcC,KAAK,OAAOK,SAAU,SAACC,GACjCkH,EAAWlH,EAAEC,OAAOC,OAhDvB,SAACF,GAEtB,GADAA,EAAEoD,iBACCpD,EAAEC,OAAOC,MAAM,EACL,IAAIzF,MAAQ+K,oBAArB,IACIyD,EAA6BlC,EAAa8B,QAAO,SAAA5D,GAAW,OAAKA,EAAYlC,KAAK4C,MAAM,EAAE,MAAQ3F,EAAEC,OAAOC,SAC/GkH,EAAwB6B,QAExB/B,GAAqB,IAAIzM,MA1HFiL,cAAcC,MAAM,EAAE,KAoKzBuD,CAAiBlJ,IAClBE,MAAO+G,WAItB,sBAAKhO,UAAU,cAAcmH,MAAO,CAAC+I,OAAS,MAA9C,UACI,8BAAI7Q,EAAE,kBAAN,UACA,wBAAQyH,SA3EK,SAACqJ,GAC1BzB,EAAYyB,EAAMnJ,OAAOC,OACzBqH,EAAQ,IAyE4CrH,MAAOwH,EAA/C,SACKb,EAAU5C,KAAI,SAACzL,GAAD,OACX,wBAAmB0H,MAAO1H,EAA1B,SACKA,GADQA,cAQ7B,qBAAKS,UAAU,kBAAf,SACKkO,EAAqBlD,KAAI,SAACgB,GAAD,OACtB,cAAC,EAAD,CAAkCA,YAAaA,EAAaC,wBAAyBA,EAAyB5M,EAAGA,GAA/F2M,EAAYvL,SAGtC,cAAC2P,EAAA,EAAD,CAAYpQ,UAAU,OAAOuO,MAAOA,EAAOF,KAAMA,EAAMgC,aAAc,EAAGC,cAAe,EAAG1O,MAAM,UAAUkF,SA9FzF,SAACqJ,EAAOlJ,GAC7BqH,EAAQrH,UC+ODsJ,eA7UY,SAAC,GAAyB,IAAxBtB,EAAuB,EAAvBA,gBAAiB5P,EAAM,EAANA,EAGpCmN,EAAY,SAAA1C,GAAI,OAAIA,EAAK2C,cAAcC,MAAM,EAAE,KAE/C8D,EAAY,CAAC,SAAU,WAEvBC,EALQ7B,cAKW8B,SAAS9D,MAElC,EAA8C3J,wBAASG,GAAvD,mBAAOuN,EAAP,KAAwBC,EAAxB,KACA,EAAgC3N,mBAASuN,EAAU,IAAnD,mBAAOK,EAAP,KAAiBC,EAAjB,KACA,EAA8B7N,wBAASG,GAAvC,mBAAO0J,EAAP,KAAgBiE,EAAhB,KACA,EAAgD9N,mBAASwN,QAAsBrN,GAA/E,mBAAO4N,EAAP,KAAyBC,EAAzB,KACA,EAAgDhO,mBAAS+N,QAAsC5N,GAA/F,mBAAO8N,EAAP,KAAyBC,EAAzB,KACA,EAAoClO,wBAASG,GAA7C,mBAAO6J,EAAP,KAAemE,EAAf,KAEA,EAAkCnO,mBAAS,IAA3C,mBAAOoO,EAAP,KAAkBC,EAAlB,KACA,EAAgCrO,mBAAS,IAAzC,mBAAOsO,EAAP,KAAiBC,EAAjB,KACA,EAA8BvO,mBAAS,IAAvC,mBAAOwO,EAAP,KAAgBC,GAAhB,KACA,GAAgCzO,mBAASuJ,EAAU,IAAIhL,OAAvD,qBAAOmQ,GAAP,MAAiBC,GAAjB,MACA,GAA4B3O,mBAASuJ,EAAU,IAAIhL,MAAK,IAAIA,MAAOmL,SAAQ,IAAInL,MAAOyI,UAAU,OAAhG,qBAAO4H,GAAP,MAAeC,GAAf,MACA,GAA4B7O,mBAAS,IAArC,qBAAOgD,GAAP,MAAe+B,GAAf,MAEA9D,qBAAU,WACN,QAAuBd,IAApBuN,EACC,GAAuB,aAApBA,EAA+B,CAC9B,IAAMoB,EAAW,uCAAG,4BAAA3N,EAAA,sEACO4N,IAAc,GADrB,OACVT,EADU,OAEhBC,EAAYD,GAFI,2CAAH,qDAIjBQ,QAEC,CACD,IAAMA,EAAW,uCAAG,4BAAA3N,EAAA,sEACO4N,IAAc,GADrB,OACVT,EADU,OAEhBC,EAAYD,GAFI,2CAAH,qDAIjBQ,OAGV,CAACpB,IAEHzM,qBAAU,WACN,QAAed,IAAZ0J,EACC,IAAkC,IAA/BA,EAAQmF,mBAA6B,CACpC,IAAMC,EAAU,uCAAG,4BAAA9N,EAAA,sEACO+N,KADP,OACTV,EADS,OAEfC,GAAWD,GACUtG,SAASiH,cAAc,YAC/BC,UAAW,EAJT,2CAAH,qDAMhBH,QACC,CACoB/G,SAASiH,cAAc,YAC/BC,UAAW,KAIlC,CAACvF,IAEH5I,qBAAU,WACN,QAAwBd,IAArB4N,EAA+B,CAI9B,GAHAG,EAAoBH,GACN7F,SAASmH,eAAe,oBAC9BrL,MAAQ+J,GACuC,IAApDA,EAAiBuB,eAAeC,gBAC/B5B,EAAmB,YACMzF,SAASiH,cAAc,aAC/BK,SAAU,OAE3B7B,EAAmB,SACGzF,SAASiH,cAAc,UAC/BK,SAAU,EAE5B1B,EAAWC,EAAiBuB,gBACNpH,SAASiH,cAAc,kBAC/BC,UAAW,KAG/B,CAACrB,IAEH9M,qBAAU,WACN,QAAwBd,IAArB8N,EAA+B,CAC9B,IAAuD,IAApDA,EAAiBqB,eAAeC,gBAAyB,CACxD5B,EAAmB,YACnB,IAAM8B,EAAmBvH,SAASiH,cAAc,aAChDM,EAAiBD,SAAU,EAC3BC,EAAiBL,UAAW,EACNlH,SAASiH,cAAc,UAC/BC,UAAW,MACxB,CACDzB,EAAmB,SACnB,IAAM+B,EAAgBxH,SAASiH,cAAc,UAC7CO,EAAcF,SAAU,EACxBE,EAAcN,UAAW,EACAlH,SAASiH,cAAc,aAC/BC,UAAW,EAEhCtB,EAAWG,EAAiBqB,gBACNpH,SAASiH,cAAc,kBAC/BC,UAAW,KAG9B,CAACnB,IAEJhN,qBAAU,WACN,IAAM0O,EAAY,uCAAG,gCAAAxO,EAAA,6DACXoI,EAAY,SAAA1C,GAAI,OAAIA,EAAK2C,cAAcC,MAAM,EAAG,KADrC,SAEOmG,KAFP,OAEXxB,EAFW,OAGXyB,EAAqBzB,EAAUA,UAAUzB,QAAO,SAAA3H,GAAG,OAAGuE,EAAU,IAAIhL,KAAKyG,EAAI8K,cAAgBvG,EAAU,IAAIhL,SACjH8P,EAAawB,GAJI,2CAAH,qDAMlBF,MACD,IAGH,IAAMC,GAAc,uCAAG,8BAAAzO,EAAA,sEACDI,MAAM,GAAD,OAAIlD,EAAJ,mCADJ,cACbmD,EADa,gBAEAA,EAAIC,OAFJ,cAEbxB,EAFa,yBAIZA,GAJY,2CAAH,qDAOdiP,GAAY,uCAAG,8BAAA/N,EAAA,yDAED,WAAbyM,EAFc,gCAGDrM,MAAM,GAAD,OAAIlD,EAAJ,0DAA6DwL,EAAQrM,KAHzE,OAGbgE,EAHa,6CAKDD,MAAM,GAAD,OAAIlD,EAAJ,0DAA6DwL,EAAQrM,KALzE,OAKbgE,EALa,+BAQEA,EAAIC,OARN,eAQXxB,EARW,yBAUVA,GAVU,4CAAH,qDAaZ8O,GAAa,uCAAG,WAAOvL,GAAP,iBAAArC,EAAA,0DAEN,IAATqC,EAFe,gCAGFjC,MAAM,GAAD,OAAIlD,EAAJ,mCAHH,OAGdmD,EAHc,6CAKFD,MAAM,GAAD,OAAIlD,EAAJ,oCALH,OAKdmD,EALc,+BAQCA,EAAIC,OARL,eAQZxB,EARY,yBAUXA,GAVW,4CAAH,sDA2BnB,SAAS8P,GAAoBjM,GACzBA,EAAEoD,iBACFgH,OAAoB/N,GACpB6N,OAAoB7N,GACpBwN,OAAmBxN,GACnB,IAAMsP,EAAmBvH,SAASiH,cAAc,aAChDM,EAAiBD,SAAU,EAC3BC,EAAiBL,UAAW,EAC5B,IAAMM,EAAgBxH,SAASiH,cAAc,UAC7CO,EAAcF,SAAU,EACxBE,EAAcN,UAAW,EACzBtB,OAAW3N,GACW+H,SAASiH,cAAc,kBAC/BC,UAAW,EACzBb,EAAY,IACZE,GAAW,IAWf,SAAS5L,GAAaiB,GAClBA,EAAEoD,iBAEF,IAAMlE,EA1Ca,WACnB,IAAMuE,EAAY,GASlB,YARuBpH,IAApBuN,IACCnG,EAAUyI,QAAU5T,EAAE,8BAGX+D,IAAZ0J,IACCtC,EAAU0I,YAAc7T,EAAE,iBAGvBmL,EAgCQJ,GAEZC,OAAOC,KAAKrE,GAAQuD,OAAS,EAC5BxB,GAAU/B,GAIFgJ,EAAgB0B,EAAiBE,EAAU/D,OAFrC1J,IAAX6J,EAEyDA,EAMA,KANQ0E,GAAUE,QADlDzO,IAArB8N,EAC+EA,EAEA,MAY9F,OACI,eAAC/K,EAAA,EAAD,CAAMnG,UAAU,qBAAhB,UACI,eAACmG,EAAA,EAAKG,MAAN,CAAYtG,UAAU,OAAtB,UACI,cAACmG,EAAA,EAAKI,MAAN,UAAclH,EAAE,qBAChB,cAAC8G,EAAA,EAAKgN,MAAN,CAAY1M,KAAK,QAAQC,KAAK,OAAOjG,GAAG,WAAW2S,MAAO/T,EAAE,YAAa6B,QAAS,SAAC6F,GAC/E6J,EAAmB,YACd3K,GAAM,SACP+B,GAAU,2BACH/B,IADE,kBAEJ,UAAW,SAErBY,YAAaZ,GAAOgN,UACvB,cAAC9M,EAAA,EAAKgN,MAAN,CAAY1M,KAAK,QAAQC,KAAK,OAAOjG,GAAG,QAAQ2S,MAAO/T,EAAE,oBAAqB6B,QAAS,SAAC6F,GACpF6J,EAAmB,SACd3K,GAAM,SACP+B,GAAU,2BACH/B,IADE,kBAEJ,UAAW,SAErBY,YAAaZ,GAAOgN,UACvB,cAAC9M,EAAA,EAAKK,QAAQU,SAAd,CAAuBT,KAAK,UAA5B,SAAuCR,GAAOgN,aAElD,eAAC7M,EAAA,EAAD,CAAKpG,UAAU,0BAAf,UACI,cAACqG,EAAA,EAAD,UACI,eAACF,EAAA,EAAKG,MAAN,WACI,eAACH,EAAA,EAAKI,MAAN,WAAalH,EAAE,YAAf,OACA,cAAC8G,EAAA,EAAKkN,OAAN,CAAa5S,GAAG,mBAAhB,SACK+P,EAAUxF,KAAI,SAACsI,GAAD,OACX,wBAAQrM,MAAOqM,EAAMpS,QAAS,SAAC6F,GAAD,OAAK+J,EAAYwC,IAA/C,SAAuDA,cAKvE,cAACjN,EAAA,EAAD,UACI,eAACF,EAAA,EAAKG,MAAN,WACI,eAACH,EAAA,EAAKI,MAAN,WAAalH,EAAE,YAAf,OACA,eAAC8G,EAAA,EAAKkN,OAAN,CAAa5S,GAAG,mBAAmBmG,aAAcoK,EAAjD,WAEMA,GACF,qCACI,wBAAQ9P,QAAS,SAAA6F,GAAIiM,GAAoBjM,IAAKE,MAAM,IAApD,SAAyD5H,EAAE,iBAC1DgS,EAAUrG,KAAI,SAAC/C,GAAD,OACX,wBAAQhB,MAAOgB,EAAkB/G,QAAS,SAAC6F,GAAK,IAAD,EAC3CoK,EAAoBlJ,GACpBD,IAAS,mBACJ,cAAe,MADX,cAEJ,UAAW,MAFP,KAFb,SAMIC,EAAIsK,eAAkBlT,EAAE,SAAW,IAAM4I,EAAI8K,WAAa,MAAQ9K,EAAIsK,eAAe7L,KAAQ,IANxEuB,EAAIxH,UAWpCuQ,GACG,qCACI,iCAAW3R,EAAE,SAAW,IAAM2R,EAAiB+B,WAAa,MAAQ/B,EAAiBuB,eAAe7L,OACpG,wBAAQxF,QAAS,SAAA6F,GAAIiM,GAAoBjM,IAAKE,MAAM,IAApD,SAAyD5H,EAAE,iBAE1DgS,EAAUzB,QAAO,SAAA3H,GAAG,OAAEA,EAAIxH,KAAKuQ,EAAiBvQ,MAAIuK,KAAI,SAAC/C,GAAD,OACrD,wBAAQhB,MAAOgB,EAAkB/G,QAAS,SAAC6F,GAAK,IAAD,EAC3CoK,EAAoBlJ,GACpBD,IAAS,mBACJ,cAAe,MADX,cAEJ,UAAW,MAFP,KAFb,SAMIC,EAAIsK,eAAkBlT,EAAE,SAAW,IAAM4I,EAAI8K,WAAa,MAAQ9K,EAAIsK,eAAe7L,KAAQ,IANxEuB,EAAIxH,qBAczD,eAAC0F,EAAA,EAAKG,MAAN,CAAYtG,UAAU,OAAtB,UACI,cAACmG,EAAA,EAAKI,MAAN,UAAalH,EAAE,aACf,eAAC8G,EAAA,EAAKkN,OAAN,CAAa5S,GAAK,gBAAgBoG,YAAaZ,GAAOiN,YAAtD,UACI,wBAAQhS,QAAS,SAAA6F,GAAC,OA5GlC,SAAsBA,QACM3D,IAArB8N,IACCnK,EAAEoD,iBACF4G,OAAW3N,GACXsO,GAAW,KAwGiB6B,CAAaxM,IAAjC,SAAsCmK,EAAmBA,EAAiBqB,eAAe7L,KAAOrH,EAAE,mBACjGkS,EAASvG,KAAI,SAACwI,GAAD,OACV,wBAAQvM,MAAOuM,EAAI9M,KAAMxF,QAAS,SAAC6F,GAC/BgK,EAAWyC,GACNvN,GAAM,aACP+B,GAAU,2BACH/B,IADE,kBAEJ,cAAe,SAL5B,SAOIuN,EAAI9M,aAGhB,cAACP,EAAA,EAAKK,QAAQU,SAAd,CAAuBT,KAAK,UAA5B,SAAuCR,GAAOiN,iBAElD,eAAC/M,EAAA,EAAKG,MAAN,CAAYtG,UAAU,OAAtB,UACI,cAACmG,EAAA,EAAKI,MAAN,UAAalH,EAAE,YACf,eAAC8G,EAAA,EAAKkN,OAAN,CAAa5S,GAAG,UAAhB,UACI,wBAAQwG,MAAM,IAAd,SAAmB5H,EAAE,kBACpBoS,EAAQzG,KAAI,SAACyI,GAAD,OACT,wBAAQxM,MAAOwM,EAAI5R,UAAY,IAAM4R,EAAIxR,SAAUf,QAAS,SAAC6F,GAAD,OAAKqK,EAAkBqC,IAAnF,SAA0FA,EAAI5R,UAAY,IAAM4R,EAAIxR,oBAIhI,eAACmE,EAAA,EAAD,CAAKpG,UAAU,0BAAf,UACI,cAACqG,EAAA,EAAD,UACI,eAACF,EAAA,EAAKG,MAAN,WACI,cAACH,EAAA,EAAKI,MAAN,UAAalH,EAAE,cACf,cAAC8G,EAAA,EAAKK,QAAN,CAAcC,KAAK,OAAOE,YAAatH,EAAE,YAAa4H,MAAO0K,GAAU7K,SAAU,SAACC,GAAD,OAAK6K,GAAY7K,EAAEC,OAAOC,eAGnH,cAACZ,EAAA,EAAD,UACI,eAACF,EAAA,EAAKG,MAAN,WACI,cAACH,EAAA,EAAKI,MAAN,UAAalH,EAAE,YACf,cAAC8G,EAAA,EAAKK,QAAN,CAAcC,KAAK,OAAOE,YAAatH,EAAE,UAAW4H,MAAO4K,GAAQ/K,SAAU,SAACC,GAAD,OAAK+K,GAAU/K,EAAEC,OAAOC,kBAIjH,qBAAKE,MAAO,CAACC,QAAQ,OAAQC,eAAgB,UAA7C,SACI,cAACC,EAAA,EAAD,CAAQ1H,QAAQ,UAAUsB,QAAS,SAAA6F,GAAC,OAAEjB,GAAaiB,IAAnD,SAAwD1H,EAAE,+BC/S3DqU,EAhCc,SAAC,GAA2D,IAA1D1H,EAAyD,EAAzDA,YAAa2H,EAA4C,EAA5CA,aAAcC,EAA8B,EAA9BA,uBAAwBvU,EAAM,EAANA,EAC9E,EAAsB4D,mBAAS+I,GAA/B,mBAAOE,EAAP,KAAY2H,EAAZ,KAEA3P,qBAAU,gBACad,IAAhB4I,GACC6H,EAAO7H,KAEb,CAACA,IAQH,IAAIM,EAAuC,KAAlC,IAAI9K,MAAQ+K,oBACrB,OACI,sBAAKvM,UAAU,uBAAuBgB,MAAO3B,EAAE,qBAA/C,UACI,sBAAKW,UAAU,2BAAf,UACI,4BAAI,IAAIwB,KAAK,IAAIA,KAAK0K,EAAIpC,MAAMwC,GAAGG,cAAcC,MAAM,EAAE,MACzD,4BAAI,IAAIlL,KAAK,IAAIA,KAAK0K,EAAIpC,MAAMwC,GAAGG,cAAcC,MAAM,GAAG,SAE9D,qBAAK1M,UAAU,6BAAf,SACI,4BAAIgM,EAAYiB,OAAS5N,EAAE,eAAgB,IAAM2M,EAAYiB,OAAOpL,UAAY,IAAKmK,EAAYiB,OAAOhL,SAAW5C,EAAE,oBAEzH,qBAAKW,UAAU,0BAAf,SACI,wBAAQA,UAAU,eAAekB,QAAS,SAAC6F,GAAD,OAjBtD,SAAqBA,GACjBA,EAAEoD,iBACFyJ,EAAuB1H,GACvByH,GAAa,GAc0CG,CAAY/M,IAA3D,SAAgE1H,EAAE,mBCmFnE0U,EA1GU,SAAC,GAA8D,IAA7DC,EAA4D,EAA5DA,oBAAqBL,EAAuC,EAAvCA,aAAczC,EAAyB,EAAzBA,iBAAkB7R,EAAO,EAAPA,EACtEsP,EAAUC,cAChB,EAAsC3L,mBAAS+Q,GAA/C,mBAAOhI,EAAP,KAAoBG,EAApB,KACA,EAAgClJ,mBAASiO,GAAzC,mBAAOT,EAAP,KAAiBwD,EAAjB,KAEA/P,qBAAU,gBACqBd,IAAxB4Q,GACC7H,EAAe6H,KAGpB,CAACA,IAEJ9P,qBAAU,gBACkBd,IAArB8N,GACC+C,EAAY/C,KAElB,CAACA,IAEH,IAAI5E,EAAuC,KAAlC,IAAI9K,MAAQ+K,oBAuCrB,IAAkBzC,EAClB,OACI,qBAAK9J,UAAU,kBAAf,SACI,sBAAKA,UAAU,iBAAf,UACI,qBAAKA,UAAU,gBAAf,SACI,wBAAQkB,QAAS,kBAAIyS,GAAa,IAAlC,mBAEJ,sBAAK3T,UAAU,aAAf,UACI,6BAAKX,EAAE,wBACP,0BAEJ,sBAAKW,UAAU,YAAf,UACI,sBAAKA,UAAU,eAAf,UACI,4BAAIX,EAAE,UACN,4BAAI,IAAImC,KAAK,IAAIA,KAAKwK,EAAYlC,MAAMwC,GAAGG,cAAcC,MAAM,EAAE,SAErE,sBAAK1M,UAAU,eAAf,UACI,4BAAIX,EAAE,UACN,4BAAI,IAAImC,KAAK,IAAIA,KAAKwK,EAAYlC,MAAMwC,GAAGG,cAAcC,MAAM,GAAG,SAEtE,sBAAK1M,UAAU,eAAf,UACI,4BAAIX,EAAE,qBACN,4BAAyB,aAArB2M,EAAYvF,KAAsBpH,EAAE,YAAcA,EAAE,yBAE5D,sBAAKW,UAAU,eAAf,UACI,4BAAIX,EAAE,aACN,4BAAI2M,EAAYc,QAAQpG,UAE3BsF,EAAYiB,QAAW,sBAAKjN,UAAU,eAAf,UACpB,4BAAIX,EAAE,YACN,4BAAI2M,EAAYiB,OAAOpL,UAAY,IAAMmK,EAAYiB,OAAOhL,cAElD,OAAbwO,GAAqB,sBAAKzQ,UAAU,eAAf,UAClB,4BAAIX,EAAE,kBACN,4BAAIoR,EAAW,MAAQ,WAEzB,IAAIjP,KAAK,IAAIA,KAAKwK,EAAYlC,MAAMwC,GAAGG,cAAcC,MAAM,EAAE,OApC7D5C,EAoCgF,IAAItI,KApC5EsI,EAAK2C,cAAcC,MAAM,EAAG,MAoC6D,qBAAK1M,UAAU,UAAf,SAC/F,4BAAIX,EAAE,8BAEd,sBAAKW,UAAU,cAAf,UACI,wBAAQkB,QAAS,kBAAIyS,GAAa,IAAQ3T,UAAU,eAApD,SAAoEX,EAAE,YACtE,wBAAQ6B,QAAS,SAAC6F,GAAD,OA9EjC,SAA2BA,GAGvB,IACI7D,EAHJ6D,EAAEoD,iBAKEjH,EADY,OAAbuN,EACQ,CACHzB,UAAY,EACZkF,WAAazD,EAAShQ,IAGnB,CACHuO,UAAY,IAIP,IAAIxN,MAbciL,cAAcC,MAAM,EAAG,MAazB,IAAIlL,KAAK,IAAIA,KAAKwK,EAAYlC,MAAMwC,GAAGG,cAAcC,MAAM,EAAE,MACtFxJ,EAAI,2BACGA,GADH,IAEAiR,WAAY,KAIpB3P,MAAM,GAAD,OAAIlD,EAAJ,yBAA4B0S,EAAoBvT,GAAhD,YAA6D,CAC9DsE,OAAQ,QACRC,QAAQ,CACJ,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUjC,KACtBkC,MAAK,SAACX,GAAD,OAASA,EAAIC,UAChBU,KAAK8F,OAAOiC,MAAM,4BAClB/H,KAAKuJ,EAAQc,KAAK,CACfjQ,SAAW,aACX6F,OAAM,SAACC,GAAD,OAAQC,QAAQC,IAAIF,MA6CA8O,CAAkBrN,IAAxC,SAA6C1H,EAAE,yBCyCpDkR,eAtIQ,SAAC,GAAQ,IAAPlR,EAAM,EAANA,EACrB,EAAwC4D,mBAAS,IAAjD,mBAAO6K,EAAP,KAAqBC,EAArB,KACA,EAA8C9K,wBAASG,GAAvD,mBAAOiR,EAAP,KAAwBC,EAAxB,KACA,EAAsDrR,wBAASG,GAA/D,mBAAO4Q,EAAP,KAA4BJ,EAA5B,KACA,EAAgD3Q,wBAASG,GAAzD,mBAAO8N,EAAP,KAAyBC,EAAzB,KACA,EAAkClO,oBAAS,GAA3C,mBAAOsR,EAAP,KAAkBZ,EAAlB,KACA,EAAgC1Q,wBAASG,GAAzC,mBAAOuO,EAAP,KAAiBC,EAAjB,KACA,EAA4B3O,wBAASG,GAArC,mBAAOyO,EAAP,KAAeC,EAAf,KACA,EAA4B7O,wBAASG,GAArC,mBAAO6J,EAAP,KAAeuH,EAAf,KACA,EAAgCvR,wBAASG,GAAzC,mBAAOyN,EAAP,KAAiBC,EAAjB,KAEMlD,EAAY,CAAC,EAAG,EAAG,IACzB,EAAwB3K,mBAAS,GAAjC,mBAAOoL,EAAP,KAAaC,EAAb,KACA,EAA0BrL,mBAAS,GAAnC,oBAAOsL,GAAP,MAAcC,GAAd,MACA,GAAgCvL,mBAAS2K,EAAU,IAAnD,qBAAOa,GAAP,MAAiBC,GAAjB,MAEMG,GAAmB,SAACR,EAAMI,GAC5B,IAAIK,EAAS,GAQb,OANGT,IACCS,EAAM,KAAWT,EAAO,GAEzBI,IACCK,EAAM,KAAWL,GAEdK,GAgBX5K,qBAAU,WACN,QAAuBd,IAApBiR,EAA8B,CAC7B,IAAMI,EAAwB,uCAAG,4BAAArQ,EAAA,sEACVmL,KADU,OACvBmF,EADuB,OAE7B3G,EAAgB2G,EAAK5G,cACrBU,GAASkG,EAAKlF,YAHe,2CAAH,qDAM9BiF,OAEN,CAACJ,EAAiBhG,EAAMI,KAE1BvK,qBAAU,gBACmBd,IAAtB4Q,GACCJ,EAAuBI,KAE5B,CAACA,IAEJ,IAAMzE,GAAiB,uCAAG,kCAAAnL,EAAA,yDAChB0K,EAASD,GAAiBR,EAAMI,IAClCkG,GAAO,IAAInT,MAAOoT,WAAWlI,MAAM,GAAG,IAE9B,OAATO,EAJmB,oBAKC,OAAhB6B,EAAOT,MAAiC,OAAhBS,EAAOvP,KALhB,gCAMFiF,MAAM,GAAD,OAAIlD,EAAJ,0CAA6C+S,EAAgB5T,GAA7D,qBAA4EwM,EAAOxM,GAAnF,qBAAkGkR,EAAlG,YAA8GgD,EAA9G,mBAA6H9C,EAA7H,8BAAyJhB,EAAzJ,iBAA0K/B,EAAOT,KAAjL,iBAA8LS,EAAOvP,OANxM,OAMdkF,EANc,iCAOO,OAAhBqK,EAAOT,MAAiC,OAAhBS,EAAOvP,KAPtB,kCAQFiF,MAAM,GAAD,OAAIlD,EAAJ,0CAA6C+S,EAAgB5T,GAA7D,qBAA4EwM,EAAOxM,GAAnF,qBAAkGkR,EAAlG,YAA8GgD,EAA9G,mBAA6H9C,EAA7H,8BAAyJhB,EAAzJ,iBAA0K/B,EAAOT,OARpL,QAQd5J,EARc,kCASO,OAAhBqK,EAAOT,MAAiC,OAAhBS,EAAOvP,KATtB,kCAUFiF,MAAM,GAAD,OAAIlD,EAAJ,0CAA6C+S,EAAgB5T,GAA7D,qBAA4EwM,EAAOxM,GAAnF,qBAAkGkR,EAAlG,YAA8GgD,EAA9G,mBAA6H9C,EAA7H,8BAAyJhB,EAAzJ,iBAA0K/B,EAAOvP,OAVpL,QAUdkF,EAVc,gDAYFD,MAAM,GAAD,OAAIlD,EAAJ,0CAA6C+S,EAAgB5T,GAA7D,qBAA4EwM,EAAOxM,GAAnF,qBAAkGkR,EAAlG,YAA8GgD,EAA9G,mBAA6H9C,EAA7H,8BAAyJhB,IAZ5J,QAYdpM,EAZc,0CAeC,OAAhBqK,EAAOT,MAAiC,OAAhBS,EAAOvP,KAfhB,kCAgBFiF,MAAM,GAAD,OAAIlD,EAAJ,0CAA6C+S,EAAgB5T,GAA7D,qBAA4EkR,EAA5E,YAAwFgD,EAAxF,mBAAuG9C,EAAvG,8BAAmIhB,EAAnI,iBAAoJ/B,EAAOT,KAA3J,iBAAwKS,EAAOvP,OAhBlL,QAgBdkF,EAhBc,kCAiBO,OAAhBqK,EAAOT,MAAiC,OAAhBS,EAAOvP,KAjBtB,kCAkBFiF,MAAM,GAAD,OAAIlD,EAAJ,0CAA6C+S,EAAgB5T,GAA7D,qBAA4EkR,EAA5E,YAAwFgD,EAAxF,mBAAuG9C,EAAvG,8BAAmIhB,EAAnI,iBAAoJ/B,EAAOT,OAlB9J,QAkBd5J,EAlBc,kCAmBO,OAAhBqK,EAAOT,MAAiC,OAAhBS,EAAOvP,KAnBtB,kCAoBFiF,MAAM,GAAD,OAAIlD,EAAJ,0CAA6C+S,EAAgB5T,GAA7D,qBAA4EkR,EAA5E,YAAwFgD,EAAxF,mBAAuG9C,EAAvG,8BAAmIhB,EAAnI,iBAAoJ/B,EAAOvP,OApB9J,QAoBdkF,EApBc,gDAsBFD,MAAM,GAAD,OAAIlD,EAAJ,0CAA6C+S,EAAgB5T,GAA7D,qBAA4EkR,EAA5E,YAAwFgD,EAAxF,mBAAuG9C,EAAvG,8BAAmIhB,IAtBtI,QAsBdpM,EAtBc,gCAyBHA,EAAIC,OAzBD,eAyBhBxB,EAzBgB,yBA2BfA,GA3Be,4CAAH,qDAuCvB,OACI,sBAAKlD,UAAU,YAAf,UACI,qBAAKA,UAAU,aAAf,SACI,6BAAKX,EAAE,sBAEP,cAAC,EAAD,CAAoB4P,gBA3EhC,SAAiC0B,EAAiBE,EAAU/D,EAASG,EAAQ0E,EAAUE,EAAQX,GAC3FoD,EAAmBxH,GACnBqE,EAAoBD,GACpBU,EAAYD,GACZG,EAAUD,GACV2C,EAAUvH,GAEN6D,EADU,WAAXD,EACa,KAEA,OAkEsDxR,EAAGA,IACjE,qCACKyO,EAAatE,OAAS,GACnB,qCACI,oBAAIrC,MAAO,CAAC0N,WAAa,0BAAzB,SAAqDxV,EAAE,2BACvD,sBAAKW,UAAU,sCAAf,UACI,8BAAIX,EAAE,kBAAN,UACA,wBAAQyH,SAjBP,SAACqJ,GAC1BzB,GAAYyB,EAAMnJ,OAAOC,OACzBqH,EAAQ,IAewDrH,MAAOwH,GAA/C,SACKb,EAAU5C,KAAI,SAACzL,GAAD,OACX,wBAAmB0H,MAAO1H,EAA1B,SACKA,GADQA,cAShCuO,EAAatE,OAAS,EAClBsE,EAAa9C,KAAI,SAACkB,GAAD,OACd,cAAC,EAAD,CAAmCF,YAAaE,EAAKyH,aAAcA,EAAcC,uBAAwBA,EAAwBvU,EAAGA,GAAzG6M,EAAIzL,YACR2C,IAApBiR,EAAgChV,EAAE,kBAAoB,GAChEyO,EAAatE,OAAS,GACvB,cAAC4G,EAAA,EAAD,CAAYpQ,UAAU,OAAOuO,MAAOA,GAAOF,KAAMA,EAAMgC,aAAc,EAAGC,cAAe,EAAG1O,MAAM,UAAUkF,SArCjG,SAACqJ,EAAOlJ,GAC7BqH,EAAQrH,MAsCMsN,QAAqCnR,IAAxB4Q,EAAqC,cAAC,EAAD,CAAkBA,oBAAqBA,EAAqBL,aAAcA,EAAczC,iBAAkBA,EAAkB7R,EAAGA,IAAO,YC7F/LyV,EAxCE,SAAC,GAAuC,IAAtCrE,EAAqC,EAArCA,SAAUU,EAA2B,EAA3BA,oBAAqB9R,EAAM,EAANA,EACxCsP,EAAUC,cAChB,EAAsB3L,mBAASwN,GAA/B,mBAAOxI,EAAP,KAAY8M,EAAZ,KAEA7Q,qBAAU,gBACUd,IAAbqN,GACCsE,EAAOtE,KAEb,CAACA,IAEH,IAUMjE,EAAY,SAAA1C,GAAI,OAAIA,EAAK2C,cAAcC,MAAM,EAAG,KAE1D,OACI,sBAAK1M,UAAU,WAAf,UACI,qBAAKA,UAAU,eAAf,SACI,mBAAGA,UAAU,iBAAb,SAA+BiI,EAAIsK,eAAe7L,SAEtD,sBAAK1G,UAAU,eAAf,UACI,8BAAIX,EAAE,aAAN,OAA0B4I,EAAI+M,aAC9B,8BAAI3V,EAAE,sBAAN,OAAmC4I,EAAI8K,iBAE3C,uBACA,qBAAK5L,MAAO,CAACC,QAAS,OAAQC,eAAgB,YAA9C,SACKmF,EAAU,IAAIhL,KAAKyG,EAAI8K,cAAevG,EAAU,IAAIhL,MACrD,wBAAQxB,UAAU,eAAekB,QAAS,SAAC6F,GAAD,OAxB9B,SAACA,GACjBA,EAAEoD,iBACFgH,EAAoBV,GAEpB9B,EAAQc,KAAK,CACTjQ,SAAU,eACVoN,MAAO3E,IAkB0C6L,CAAY/M,IAA7D,iCACC,mBAAGI,MAAO,CAAC6F,MAAQ,OAAnB,SAA4B3N,EAAE,2BC6D5B4V,EAhGM,SAAC,GAAQ,IAAP5V,EAAM,EAANA,EACbuO,EAAY,CAAC,EAAG,EAAG,IACzB,EAAkC3K,mBAAS,IAA3C,mBAAOoO,EAAP,KAAkBC,EAAlB,KACA,EAAgDrO,wBAASG,GAAzD,mBAAO8N,EAAP,KAAyBC,EAAzB,KAEA,EAAwBlO,mBAAS,GAAjC,mBAAOoL,EAAP,KAAaC,EAAb,KACA,EAA0BrL,mBAAS,GAAnC,mBAAOsL,EAAP,KAAcC,EAAd,KACA,EAAgCvL,mBAAS2K,EAAU,IAAnD,mBAAOa,EAAP,KAAiBC,EAAjB,KAEMG,EAAmB,SAACR,EAAMI,GAC5B,IAAIK,EAAS,GAQb,OANGT,IACCS,EAAM,KAAWT,EAAO,GAEzBI,IACCK,EAAM,KAAWL,GAEdK,GAGX5K,qBAAU,WACN,IAAM0O,EAAY,uCAAG,4BAAAxO,EAAA,sEACWyO,IADX,OACPxB,EADO,OAEbC,EAAaD,EAAUA,WACvB7C,EAAS6C,EAAU7B,YAHN,2CAAH,qDAKlBoD,MACF,CAACvE,EAAMI,IAETvK,qBAAU,gBACgBd,IAAnB8N,GACCI,EAAaD,EAAUzB,OAAOsF,MAGpC,CAAChE,IAGH,IAAM2B,EAAc,uCAAG,gCAAAzO,EAAA,yDAGA,QAFb0K,EAASD,EAAiBR,EAAMI,IAE5BJ,MAAiC,OAAhBS,EAAOvP,KAHf,gCAIHiF,MAAM,GAAD,OAAIlD,EAAJ,sCAAyCwN,EAAOT,KAAhD,iBAA6DS,EAAOvP,OAJtE,OAIfkF,EAJe,iCAKM,OAAhBqK,EAAOT,MAAiC,OAAhBS,EAAOvP,KALrB,kCAMHiF,MAAM,GAAD,OAAIlD,EAAJ,sCAAyCwN,EAAOT,OANlD,QAMf5J,EANe,kCAOM,OAAhBqK,EAAOT,MAAiC,OAAhBS,EAAOvP,KAPrB,kCAQHiF,MAAM,GAAD,OAAIlD,EAAJ,sCAAyCwN,EAAOvP,OARlD,QAQfkF,EARe,gDAUHD,MAAM,GAAD,OAAIlD,EAAJ,0BAVF,QAUfmD,EAVe,gCAaAA,EAAIC,OAbJ,eAabxB,EAba,yBAeZA,GAfY,4CAAH,qDAkBpB,SAASgS,EAAgBzE,GACrB,GAAGA,EAAShQ,KAAOyQ,EAAiBzQ,GAChC,OAAOgQ,EAcf,OACI,sBAAKzQ,UAAU,YAAf,UACI,qBAAKA,UAAU,aAAf,SACI,6BAAKX,EAAE,qBAEX,sBAAKW,UAAU,cAAf,UACI,8BAAIX,EAAE,kBAAN,UACA,wBAAQyH,SAbS,SAACqJ,GAC1BzB,EAAYyB,EAAMnJ,OAAOC,OACzBqH,EAAQ,IAWwCrH,MAAOwH,EAA/C,SACKb,EAAU5C,KAAI,SAACzL,GAAD,OACX,wBAAmB0H,MAAO1H,EAA1B,SACKA,GADQA,WAOxB8R,EAAUrG,KAAI,SAACyF,GAAD,OACX,cAAC,EAAD,CAA4BA,SAAUA,EAAUU,oBAAqBA,EAAqB9R,EAAGA,GAA9EoR,EAAShQ,OAE5B,cAAC2P,EAAA,EAAD,CAAYpQ,UAAU,OAAOuO,MAAOA,EAAOF,KAAMA,EAAMgC,aAAc,EAAGC,cAAe,EAAG1O,MAAM,UAAUkF,SA7BzF,SAACqJ,EAAOlJ,GAC7BqH,EAAQrH,U,0CC5DVkO,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,UAAW,CACPvK,gBAAiBwK,eAAKF,EAAMG,QAAQC,QAAQC,KAAM,IAClD,UAAW,CACP3K,gBAAiBwK,eAAKF,EAAMG,QAAQC,QAAQC,KAAM,MAEtD,UAAW,CACP3K,gBAAiBwK,eAAKF,EAAMG,QAAQC,QAAQC,KAAM,OAG1DC,YAAa,CACT5K,gBAAiBwK,eAAKF,EAAMG,QAAQI,OAAOC,mBAAoB,KAC/D,UAAW,CACP9K,gBAAiBwK,eAAKF,EAAMG,QAAQI,OAAOC,mBAAoB,MAEnE,UAAW,CACP9K,gBAAiBwK,eAAKF,EAAMG,QAAQI,OAAOC,mBAAoB,OAGvEtU,MAAO,CACHwJ,gBAAiBwK,eAAKF,EAAMG,QAAQC,QAAQC,KAAM,MAEtDI,QAAS,CACL/K,gBAAiBwK,eAAKF,EAAMG,QAAQI,OAAOC,mBAAoB,UAIjEE,EAAgB,SAACC,GACnB,IAAMC,EAAUd,IACRe,EAAcF,EAAdE,UACFpM,EAAO,IAAItI,KAAK0U,GAEtB,OAAIpM,EAAKG,aAAc,IAAIzI,MAAOyI,UACvB,cAAC,IAAS8L,cAAV,2BAA4BC,GAA5B,IAAmChW,UAAWiW,EAAQX,aACzC,IAAlBxL,EAAKqM,UAAoC,IAAlBrM,EAAKqM,SACvB,cAAC,IAASJ,cAAV,2BAA4BC,GAA5B,IAAmChW,UAAWiW,EAAQN,eACxD,cAAC,IAASI,cAAV,eAA4BC,KAGnCI,GAAe,SAACJ,GAClB,IAAMC,EAAUd,IACRe,EAAqBF,EAArBE,UAER,OAF6BF,EAAVzU,MAGR,cAAC,IAAS6U,aAAV,2BAA2BJ,GAA3B,IAAkChW,UAAWiW,EAAQ1U,SACnC,IAAvB2U,EAAUC,UAAyC,IAAvBD,EAAUC,SACjC,cAAC,IAASC,aAAV,2BAA2BJ,GAA3B,IAAkChW,UAAWiW,EAAQH,WACvD,cAAC,IAASM,aAAV,eAA2BJ,KA0DzBK,GAvDE,SAAC,GAAe,IAAdC,EAAa,EAAbA,SAEf,EAAwCrT,mBAAS,IAAjD,mBAAO6K,EAAP,KAAqBC,EAArB,KASA,SAASwI,EAAYzM,GACjB,IAAI0M,EAAMC,EAAOC,EAAKC,EAAOC,EAO7B,OANAJ,EAAO1M,EAAKvH,UAAU,EAAG,GAAG,EAC5BkU,EAAQ3M,EAAKvH,UAAU,EAAE,GAAG,EAC5BmU,EAAM5M,EAAKvH,UAAU,EAAE,IAAI,EAC3BoU,EAAQ7M,EAAKvH,UAAU,GAAG,IAAI,EAC9BqU,EAAU9M,EAAKvH,UAAU,GAAG,IAAI,EAEzB,IAAIf,KAAKgV,EAAMC,EAAOC,EAAKC,EAAOC,GAiB7C,OAhCA1S,qBAAU,WACN,QAAgBd,IAAbkT,EAAuB,CACtB,IAAIO,EAgBZ,SAA6BP,GACzB,IAAIQ,EAAqB,GAUzB,OARAzM,OAAO0M,QAAQT,GAAUU,SAAS,mCAAM/P,GAAN,kBAAeoD,OAAO0M,QAAQ9P,GAC3D+P,SAAQ,YAAgB,IAAD,mBAAT/P,GAAS,WAChB6C,EAAO,IAAIO,OACfP,EAAI,UAAgByM,EAAYtP,EAAMiP,WACtCpM,EAAI,QAAcyM,EAAYtP,EAAMgQ,SACpCH,EAAmBrH,KAAK3F,SAGzBgN,EA3ByBI,CAAoBZ,GAChDvI,EAAgB8I,MAEtB,CAACP,IA4BC,cAACa,EAAA,EAAD,UACI,eAAC,IAAD,CAAWjU,KAAM4K,EAAcsJ,eAAgB,EAAGC,OAAO,QAAzD,UACI,cAAC,IAAD,IACA,cAAC,IAAD,CACIC,aAAc,EACdC,WAAY,GACZC,uBAAwBzB,EACxB0B,sBAAuBrB,KAE3B,cAAC,IAAD,IACA,cAAC,IAAD,IACA,cAAC,IAAD,IACA,cAAC,IAAD,UCqDDsB,GAxJM,SAAC,GAAQ,IAAPrY,EAAM,EAANA,EACnB,EAA8C4D,mBAAS,IAAvD,mBAAO0U,EAAP,KAAwBC,EAAxB,KACA,EAA8B3U,mBAAS,IAAvC,mBAAOwO,EAAP,KAAgBC,EAAhB,KACA,EAA4DzO,wBAASG,GAArE,mBAAOyU,EAAP,KAA+BC,EAA/B,KACA,EAA4C7U,wBAASG,GAArD,mBAAO2U,EAAP,KAAuB3G,EAAvB,KACA,EAAgCnO,wBAASG,GAAzC,mBAAOkT,EAAP,KAAiB0B,EAAjB,KACA,EAA4B/U,mBAAS,IAArC,mBAAOgD,EAAP,KAAe+B,EAAf,KACMC,EAAMC,mBAMZhE,qBAAU,WACN,IAAM+T,EAAkB,uCAAG,4BAAA7T,EAAA,sEACO8T,IADP,OACjBP,EADiB,OAEvBC,EAAmBD,GAFI,2CAAH,qDAKxBM,MACF,IAGF/T,qBAAU,WACN,QAA4Bd,IAAzByU,EAAmC,CAClC,IAAM3F,EAAU,uCAAG,4BAAA9N,EAAA,sEACO+N,IADP,OACTV,EADS,OAEfC,EAAWD,GAFI,2CAAH,qDAKhBS,OAGL,CAAC2F,IAEJ,IAAMK,EAAoB,uCAAG,8BAAA9T,EAAA,sEACPI,MAAM,GAAD,OAAIlD,EAAJ,qBADE,cACnBmD,EADmB,gBAENA,EAAIC,OAFE,cAEnBxB,EAFmB,yBAIlBA,GAJkB,2CAAH,qDAOpBiP,EAAY,uCAAG,8BAAA/N,EAAA,sEACCI,MAAM,GAAD,OAAIlD,EAAJ,sCAAyCuW,EAAuBpX,KADtE,cACXgE,EADW,gBAEEA,EAAIC,OAFN,cAEXxB,EAFW,yBAIVA,GAJU,2CAAH,qDA+BlB,SAAS4C,EAAaiB,GAClBA,EAAEoD,iBACF,IAAMlE,EAfa,WACnB,IAAMuE,EAAY,GASlB,YAR8BpH,IAA3ByU,IACCrN,EAAU2N,eAAiB9Y,EAAE,6BAGX+D,IAAnB2U,IACCvN,EAAUyC,OAAS5N,EAAE,gBAGlBmL,EAKQJ,GAEZC,OAAOC,KAAKrE,GAAQuD,OAAS,EAC5BxB,EAAU/B,GAEVzB,MAAM,GAAD,OAAIlD,EAAJ,oBAAuByW,EAAetX,GAAtC,sCAAsEoX,EAAuBpX,KAC7F2E,MAAK,SAACX,GAAD,OAAOA,EAAIC,UAChBU,MAAK,SAACgT,GACHJ,EAAYI,MAEf/S,OAAM,SAACC,GAAD,OAAOC,QAAQC,IAAIF,MAItC,OACI,sBAAKtF,UAAU,YAAf,UACI,qBAAKA,UAAU,aAAf,SACI,6BAAKX,EAAE,sBAEX,eAAC8G,EAAA,EAAD,CAAMnG,UAAU,qBAAhB,UACI,cAACoG,EAAA,EAAD,CAAKpG,UAAU,0BAAf,SACI,cAACqG,EAAA,EAAD,UACI,eAACF,EAAA,EAAKG,MAAN,WACI,eAACH,EAAA,EAAKI,MAAN,WAAalH,EAAE,wBAAf,OACA,eAAC8G,EAAA,EAAKkN,OAAN,CAAa5S,GAAG,yBAAyBoG,YAAaZ,EAAOkS,eAA7D,UACI,wBAAQjX,QAnDpC,WACI4W,OAA0B1U,GAC1BsO,EAAW,IACXsG,OAAY5U,IAgDY,SAAuC/D,EAAE,0BACxCsY,EAAgB3M,KAAI,SAACqN,GAAD,OACjB,wBAAQpR,MAAOoR,EAAMnX,QAAS,SAAC6F,GAC3BqK,OAAkBhO,GA7FlD6E,EAAIsC,QAAQtD,MAAQ5H,EAAE,gBA+FU2Y,OAAY5U,GACZ0U,EAA0BO,GAErBpS,EAAM,gBACP+B,EAAU,2BACH/B,GADE,kBAEJ,iBAAkB,SAT/B,SAWIoS,EAAK3R,aAGjB,cAACP,EAAA,EAAKK,QAAQU,SAAd,CAAuBT,KAAK,UAA5B,SAAuCR,EAAOkS,wBAI1D,cAAC/R,EAAA,EAAD,CAAKpG,UAAU,0BAAf,SACI,cAACqG,EAAA,EAAD,UACI,eAACF,EAAA,EAAKG,MAAN,WACI,eAACH,EAAA,EAAKI,MAAN,WAAalH,EAAE,gBAAf,OACA,eAAC8G,EAAA,EAAKkN,OAAN,CAAa5S,GAAG,iBAAiBoG,YAAaZ,EAAOgH,OAAQhF,IAAKA,EAAlE,UACI,wBAAQ/G,QAtEpC,WACIkQ,OAAkBhO,GAClB4U,OAAY5U,IAoEY,SAA+B/D,EAAE,kBAChCoS,EAAQzG,KAAI,SAACyI,GAAD,OACT,wBAAQxM,MAAOwM,EAAKvS,QAAS,SAAC6F,GAC1BqK,EAAkBqC,GAClBuE,OAAY5U,GACP6C,EAAM,QACP+B,EAAU,2BACH/B,GADE,kBAEJ,SAAU,SANvB,SAQIwN,EAAI5R,UAAa,IAAM4R,EAAIxR,iBAGvC,cAACkE,EAAA,EAAKK,QAAQU,SAAd,CAAuBT,KAAK,UAA5B,SAAuCR,EAAOgH,gBAI1D,qBAAK9F,MAAO,CAACC,QAAQ,OAAQC,eAAgB,UAA7C,SACI,cAACC,EAAA,EAAD,CAAQ1H,QAAQ,UAAUsB,QAAS,SAAA6F,GAAC,OAAEjB,EAAaiB,IAAnD,SAAwD1H,EAAE,4BAGnD+D,IAAbkT,QAA6ClT,IAAnB2U,QAA2D3U,IAA3ByU,GAC5D,cAAC,GAAD,CAAUvB,SAAUA,QCpEjBgC,GAlFC,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,QAASlZ,EAAM,EAANA,EACvB,EAA0B4D,oBAAS,GAAnC,mBAAO2J,EAAP,KAAc4L,EAAd,KACA,EAA6BvV,mBAASsV,GAAtC,mBAAOE,EAAP,KAAgBC,EAAhB,KA+BA,OA7BAxU,qBAAU,gBACSd,IAAZmV,GACCG,EAAUH,KAEf,CAACA,IA0BA,sBAAKvY,UAAU,wBAAwBkB,QAAS,SAAC6F,GAAD,OAxBpD,SAAqBA,GACjBA,EAAEoD,iBACFqO,GAAU5L,GAsB4CC,CAAY9F,IAAlE,UACI,sBAAK/G,UAAU,MAAf,UACI,mBAAGA,UAAU,8BAAb,SAA4CyY,EAAQhL,qBACpD,sBAAKzN,UAAU,OAAf,UACI,4BAAIX,EAAE,UACN,4BAAI,IAAImC,KAAKiX,EAAQE,iBAAiBlM,cAAcC,MAAM,EAAE,MAC5D,4BAAI,IAAIlL,KAAKiX,EAAQE,iBAAiBlM,cAAcC,MAAM,GAAG,YAGrE,gCACI,cAAC,IAAD,CAAWnN,KAAM,KAChBF,EAAE,mBAGNuN,EACG,gCACI,uBACA,sBAAK5M,UAAU,cAAf,UACI,cAAC,IAAD,CAAcT,KAAM,KACpB,mBAAGS,UAAU,SAAb,SAAuBX,EAAE,2BAE7B,qBAAKW,UAAU,cAAf,SACI,4BAAIyY,EAAQG,uBAEhB,uBAEA,sBAAK5Y,UAAU,cAAf,UACI,cAAC,IAAD,CAAST,KAAM,KACf,mBAAGS,UAAU,SAAb,SAAuBX,EAAE,eAE7B,8BACI,4BAAIoZ,EAAQ1P,OAAS0P,EAAQ1P,OAAS1J,EAAE,0BAGvB,OAAnBoZ,EAAQ1P,QAAmB0P,EAAQlQ,MACrC,qCACI,uBACA,sBAAKvI,UAAU,cAAf,UACI,cAAC,IAAD,CAAQT,KAAM,KACd,mBAAGS,UAAU,SAAb,SAAuBX,EAAE,uBACzB,cAACiI,EAAA,EAAD,CAAQtH,UAAU,WAAWoB,KAAI,UAAKE,EAAL,+BAA2CJ,QAAS,SAAC6F,IA3D9G,SAA4BA,EAAGwR,GAC3BxR,EAAEoD,iBAEF3F,MAAM,GAAD,OAAIlD,EAAJ,uDAA0DiX,EAAQM,cAAlE,sBAA6FN,EAAQO,YACrG1T,MAAK,SAAAX,GAAG,OAAIA,EAAIC,UAChBU,MAAK,SAAAX,GACF,IAAIL,EAAI8G,OAAOC,SAASC,cAAc,KAClCC,EAAU,IAAI1B,WAAWlF,EAAI8D,MACjCnE,EAAEhD,KAAO8J,OAAOI,IAAIC,gBAAgB,IAAIC,KAAK,CAACH,GAAU,CAAC5E,KAAO,qBAChE,IAAIqD,EAAO,IAAItI,KAAKiD,EAAIkU,iBAAiBlM,cAAcC,MAAM,EAAE,IAC/DtI,EAAEqH,SAAWpM,EAAE,mBAAqB0Z,OAAOjP,GAC3CqB,SAASlG,KAAKyG,YAAYtH,GAC1BA,EAAEuH,QACFR,SAASlG,KAAK2G,YAAYxH,MA+CVyH,CAAmB9E,EAAGwR,IAD1B,SAEIlZ,EAAE,uBAGR,SClCX2Z,GA/CuB,SAAC,GAAsB,IAArBhN,EAAoB,EAApBA,YAAa3M,EAAO,EAAPA,EAE7CsP,EAAUC,cAERkF,EAAc,SAAA/M,GAChBA,EAAEoD,iBAEF,IAAM8O,EAASlS,EAAEC,OAAOvG,GACT,gBAAXwY,EACAtK,EAAQc,KAAK,CACTjQ,SAAS,iBAAD,OAAmBwM,EAAYvL,GAA/B,2BACRmM,MAAOZ,IAGK,kBAAXiN,EACLtK,EAAQc,KAAK,CACTjQ,SAAS,iBAAD,OAAmBwM,EAAYvL,GAA/B,sBACRmM,MAAO,CACHsM,OAASlN,EACTgD,UAAYhD,EAAYgD,aAIhB,eAAXiK,EACLtK,EAAQc,KAAK,CACTjQ,SAAS,iBAAD,OAAmBwM,EAAYvL,GAA/B,YACRmM,MAAOZ,IAIX2C,EAAQc,KAAK,CACTjQ,SAAS,iBAAD,OAAmBwM,EAAYvL,GAA/B,kBACRmM,MAAOZ,KAKnB,OACI,sBAAKhM,UAAU,YAAYmH,MAAO,CAACC,QAAS,OAAQC,eAAgB,gBAAiByD,MAAM,OAA3F,WACMI,OAAOwF,SAAStP,KAAK+X,QAAQ,mBAAqB,GAAKjO,OAAOwF,SAAStP,KAAK+X,QAAQ,cAAgB,GAAKjO,OAAOwF,SAAStP,KAAK+X,QAAQ,kBAAoB,IAAO,wBAAQ1Y,GAAG,aAAaT,UAAU,eAAekB,QAAS4S,EAA1D,SAAwEzU,EAAE,yBAC5O6L,OAAOwF,SAAStP,KAAK+X,QAAQ,kBAAoB,GAAK,wBAAQ1Y,GAAG,cAAcT,UAAU,eAAekB,QAAS4S,EAA3D,SAAyEzU,EAAE,yBACjI6L,OAAOwF,SAAStP,KAAK+X,QAAQ,aAAe,GAAK,wBAAQ1Y,GAAG,gBAAgBT,UAAU,eAAekB,QAAS4S,EAA7D,SAA2EzU,EAAE,oBAC9H6L,OAAOwF,SAAStP,KAAK+X,QAAQ,iBAAmB,GAAK,wBAAQ1Y,GAAG,cAAcT,UAAU,eAAekB,QAAS4S,EAA3D,SAAyEzU,EAAE,4BCwD9H+Z,GA9FK,SAAC,GAAQ,IAAP/Z,EAAM,EAANA,EACZqR,EAAWjR,cACXmO,EAAY,CAAC,EAAG,EAAG,IACzB,EAAgC3K,mBAAS,IAAzC,mBAAOoW,EAAP,KAAiBC,EAAjB,KAEA,EAAwBrW,mBAAS,GAAjC,mBAAOoL,EAAP,KAAaC,EAAb,KACA,EAA0BrL,mBAAS,GAAnC,mBAAOsL,EAAP,KAAcC,EAAd,KACA,EAAgCvL,mBAAS2K,EAAU,IAAnD,mBAAOa,EAAP,KAAiBC,EAAjB,KAEA,EAAsCzL,wBAASG,GAA/C,mBAAO4I,EAAP,KAAoBG,EAApB,KACA,EAAkClJ,wBAASG,GAA3C,mBAAkBmW,GAAlB,WAEM1K,EAAmB,SAACR,EAAMI,GAC5B,IAAIK,EAAS,GAQb,OANGT,IACCS,EAAM,KAAWT,EAAO,GAEzBI,IACCK,EAAM,KAAWL,GAEdK,GAGX5K,qBAAU,WACN,IAAMsV,EAAW,uCAAG,4BAAApV,EAAA,sEACOqV,IADP,OACVC,EADU,OAEhBJ,EAAYI,EAASlM,iBACrBgB,EAASkL,EAASlK,YAHF,2CAAH,qDAKjBgK,MACF,CAACnL,EAAMI,IAETvK,qBAAU,gBACgBd,IAAnBsN,EAAS9D,QACRT,EAAeuE,EAAS9D,MAAMsM,QAC9BK,EAAa7I,EAAS9D,MAAMoC,cAElC,CAAC0B,IAEH,IAAM+I,EAAa,uCAAG,gCAAArV,EAAA,yDAGC,QAFb0K,EAASD,EAAiBR,EAAMI,IAE5BJ,MAAiC,OAAhBS,EAAOvP,KAHhB,gCAIFiF,MAAM,GAAD,OAAIlD,EAAJ,4CAA+CwN,EAAOT,KAAtD,iBAAmES,EAAOvP,OAJ7E,OAIdkF,EAJc,iCAKO,OAAhBqK,EAAOT,MAAiC,OAAhBS,EAAOvP,KALtB,kCAMFiF,MAAM,GAAD,OAAIlD,EAAJ,4CAA+CwN,EAAOT,OANzD,QAMd5J,EANc,kCAOO,OAAhBqK,EAAOT,MAAiC,OAAhBS,EAAOvP,KAPtB,kCAQFiF,MAAM,GAAD,OAAIlD,EAAJ,4CAA+CwN,EAAOvP,OARzD,QAQdkF,EARc,gDAUFD,MAAM,GAAD,OAAIlD,EAAJ,gCAVH,QAUdmD,EAVc,gCAaCA,EAAIC,OAbL,eAaZxB,EAbY,yBAeXA,GAfW,4CAAH,qDA2BnB,OACI,sBAAKlD,UAAU,YAAf,UACI,qBAAKA,UAAU,aAAf,SACI,6BAAKX,EAAE,oBAEX,4BACkB+D,IAAhB4I,GACE,cAAC,GAAD,CAA+BA,YAAaA,EAAa3M,EAAGA,IAEhE,sBAAKW,UAAU,cAAf,UACI,8BAAIX,EAAE,kBAAN,UACA,wBAAQyH,SAhBS,SAACqJ,GAC1BzB,EAAYyB,EAAMnJ,OAAOC,OACzBqH,EAAQ,IAcwCrH,MAAOwH,EAA/C,SACKb,EAAU5C,KAAI,SAACzL,GAAD,OACX,wBAAmB0H,MAAO1H,EAA1B,SACKA,GADQA,WAMxB8Z,EAASrO,KAAI,SAACuN,GAAD,OACV,cAAC,GAAD,CAA0BA,QAASA,EAASlZ,EAAGA,GAAjCkZ,EAAQ9X,OAE1B,cAAC2P,EAAA,EAAD,CAAYpQ,UAAU,OAAOuO,MAAOA,EAAOF,KAAMA,EAAMgC,aAAc,EAAGC,cAAe,EAAG1O,MAAM,UAAUkF,SA/BzF,SAACqJ,EAAOlJ,GAC7BqH,EAAQrH,UCrCD0S,GA3BkB,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,aAE/B,OACI,+BACI,6BAAKA,EAAaC,eAClB,6BACMD,EAAaE,YACX,6BACCF,EAAaE,YAAY9O,KAAI,SAAC+O,GAAD,OAC1B,6BAAuBA,EAASrT,MAAvBqT,EAAStZ,SAEd,KAEhB,6BACMmZ,EAAaE,YACX,6BACCF,EAAaE,YAAY9O,KAAI,SAAC+O,GAAD,OAC1B,6BAAuBA,EAASC,kBAAvBD,EAAStZ,SAEd,KAEhB,4CACA,6BAAKmZ,EAAaK,eAnBbL,EAAanZ,KCqBfyZ,OAvBf,YAAsD,IAAtBC,EAAqB,EAArBA,iBAAkB9a,EAAG,EAAHA,EAG9C,OACI,wBAAOW,UAAU,8BAA8BmH,MAAO,CAAC4D,gBAAgB,QAASD,MAAQ,OAAxF,UACI,gCACI,+BACI,6BAAKzL,EAAE,eACP,6BAAKA,EAAE,iBACP,6BAAKA,EAAE,sBACP,6BAAKA,EAAE,YACP,6BAAKA,EAAE,uBAGf,gCACC8a,EAAiBnP,KAAI,SAAC4O,GAAD,OAClB,cAAC,GAAD,CAA0BA,aAAcA,GAAmBA,EAAanZ,aCmBzE2Z,GAlCU,SAAC,GAAQ,IAAP/a,EAAM,EAANA,EAEvB,EAA0C4D,mBAAS,IAAnD,mBAAOyK,EAAP,KAAsB2M,EAAtB,KAEAnW,qBAAU,WACN,IAAMoW,EAAgB,uCAAG,4BAAAlW,EAAA,sEACOmW,IADP,OACf7M,EADe,OAErB2M,EAAiB3M,GAFI,2CAAH,qDAKtB4M,MACF,IAGF,IAAMC,EAAkB,uCAAG,8BAAAnW,EAAA,sEACLI,MAAM,GAAD,OAAIlD,EAAJ,8BADA,cACjBmD,EADiB,gBAEJA,EAAIC,OAFA,cAEjBxB,EAFiB,yBAIhBA,GAJgB,2CAAH,qDAOxB,OACI,sBAAKlD,UAAU,YAAf,UACI,qBAAKA,UAAU,aAAf,SACI,6BAAKX,EAAE,yBAEX,qBAAKW,UAAU,kBAAf,SACI,cAAC,GAAD,CAAuBma,iBAAkBzM,EAAerO,EAAGA,UCzBrEqC,GAASC,MAAaC,MAAM,CAC9Be,MAAOhB,MAAagB,MAAM,0BAA0BX,SAAS,mBAC7DwY,SAAU7Y,MAAaK,SAAS,qBA+DrByY,GA5DG,WACd,IAAM9L,EAAUC,cAOhB,OACI,qBAAK5O,UAAU,YAAYmH,MAAO,CAACuT,UAAU,MAAOC,aAAa,OAAjE,SACI,cAAC,IAAD,CACIhW,iBAAkBjD,GAClBmD,SARK,SAAAkB,GACbR,QAAQC,IAAIO,IAQJN,cAAe,GACfC,kBAAkB,EAClBC,iBAAiB,EACjBC,cAAe,CACXjD,MAAO,GACP6X,SAAU,IARlB,SAUK,gBACK1U,EADL,EACKA,aACAD,EAFL,EAEKA,aACAE,EAHL,EAGKA,OACAC,EAJL,EAIKA,QACAE,EALL,EAKKA,QACAD,EANL,EAMKA,OANL,OAQG,eAACE,EAAA,EAAD,CAAMtB,SAAUiB,EAAhB,UACI,eAACM,EAAA,EAAD,CAAKpG,UAAU,OAAf,UACI,eAACmG,EAAA,EAAKG,MAAN,CAAYsE,GAAIvE,IAAKuU,GAAI,GAAIC,GAAI,EAAGlQ,UAAU,QAA9C,UACI,cAACxE,EAAA,EAAKI,MAAN,sBACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,QAAQC,KAAK,QAAQC,YAAY,cAAcC,aAAcb,EAAOpD,MAAOkE,YAAaZ,EAAOtD,MAAOuD,QAASF,EAAQrD,QAAUsD,EAAOtD,MAAOmE,SAAUjB,IAC5K,cAACM,EAAA,EAAKK,QAAQU,SAAd,CAAuBT,KAAK,UAA5B,SAAuCR,EAAOtD,WAElD,eAACwD,EAAA,EAAKG,MAAN,CAAYsE,GAAIvE,IAAKuU,GAAI,GAAIC,GAAI,EAAGlQ,UAAU,WAA9C,UACI,cAACxE,EAAA,EAAKI,MAAN,wBACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,WAAWC,KAAK,WAAWC,YAAY,iBAAiBC,aAAcb,EAAOyU,SAAU3T,YAAaZ,EAAOuU,SAAUtU,QAASF,EAAQwU,WAAavU,EAAOuU,SAAU1T,SAAUjB,IACjM,cAACM,EAAA,EAAKK,QAAQU,SAAd,CAAuBT,KAAK,UAA5B,SAAuCR,EAAOuU,iBAGtD,gDAEI,cAAClT,EAAA,EAAD,CAAQ1H,QAAQ,UAAUL,KAAK,KAAK2B,QAAS,WACzCyN,EAAQc,KAAK,CACTjQ,SAAW,kBAFnB,kCAMJ,uBACA,qBAAK2H,MAAO,CAACC,QAAS,OAAOC,eAAgB,UAA7C,SACI,cAACC,EAAA,EAAD,CAAQH,MAAO,CAAC2T,SAAS,QAASlb,QAAQ,UAAU6G,KAAK,SAAS4L,UAAWnM,EAA7E,8BCrDrB3E,GAAQ,IAAIC,KAEbE,GAASC,MAAaC,MAAM,CAC9BC,UAAWF,MAAaG,IAAI,EAAG,6CAA6CC,IAAI,GAAI,8CAA8CC,SAAS,mBAC3IC,SAAUN,MAAaG,IAAI,EAAG,4CAA4CC,IAAI,GAAI,6CAA6CC,SAAS,mBACxIE,MAAOP,MAAaG,IAAI,GAAI,gCAAgCC,IAAI,GAAI,gCAC/DI,KAAK,gBAAiB,kBACnB,SAAuBD,GAEnB,IAAuB,IADb,cACHC,KAAKD,GACR,OAAO,EAGP,IAAIE,GAAU,GAAGF,GAAOG,MAAM,IAC9B,GAAKC,SAASJ,EAAMK,UAAW,EAAG,IAAM,IAAMD,SAASJ,EAAMK,UAAW,EAAG,IAAM,GAC7E,OAAO,EAEX,IAAIC,GAAY,EAAEF,SAASF,EAAO,IAAM,EAAEE,SAASF,EAAO,IAAM,EAAEE,SAASF,EAAO,IAAM,EAAEE,SAASF,EAAO,IAAM,EAAEE,SAASF,EAAO,IAAM,EAAEE,SAASF,EAAO,IAAM,EAAEE,SAASF,EAAO,IAAM,EAAEE,SAASF,EAAO,IAAM,EAAEE,SAASF,EAAO,IAAM,EAAEE,SAASF,EAAO,KAAK,GAK/P,OAJgB,IAAbI,IACCA,EAAW,IACfA,EAAW,GAAKA,EAERF,SAASF,EAAO,OAASI,KAEtCR,SAAS,mBACpBS,UAAWd,MAAWI,IAAIR,GAAO,mCAAmCS,SAAS,mBAC7EU,YAAaf,MAAaG,IAAI,EAAG,2CAA2CE,SAAS,mBACrFW,MAAOhB,MAAagB,MAAM,0BAA0BX,SAAS,mBAC7DY,OAAQjB,MAAaG,IAAI,GAAGE,SAAS,mBACrCa,aAAclB,MAAaK,SAAS,mBACpCc,KAAMnB,MAAaK,SAAS,mBAC5Be,SAAUpB,MAAaK,SAAS,mBAChCgB,QAASrB,MAAaK,SAAS,mBAC/BwY,SAAU7Y,MAAaG,IAAI,EAAG,2CAA2CC,IAAI,GAAI,4CAA4CC,SAAS,mBACtI+Y,gBAAiBpZ,MAAaqZ,MAAM,CAACrZ,IAAQ,YAAa,IAAK,wBAAwBK,SAAS,qBAkMrFiZ,GA/LM,WACjB,IAAMtM,EAAUC,cA6BhB,OACI,qBAAK5O,UAAU,YAAYmH,MAAO,CAACuT,UAAU,KAAMC,aAAa,OAAhE,SACI,cAAC,IAAD,CACIhW,iBAAkBjD,GAClBkD,oBAAoB,EACpBC,SAhCK,SAAAkB,GACb,IAAMmV,EAAY,CACd3W,QAAU,CACNzB,KAAOiD,EAAOjD,KACdE,QAAU+C,EAAO/C,QACjBD,SAAWgD,EAAOhD,SAClBH,OAASmD,EAAOnD,OAChBC,aAAekD,EAAOlD,cAE1BJ,UAAYsD,EAAOtD,UACnBE,MAAQoD,EAAOpD,MACfd,UAAYkE,EAAOlE,UACnBI,SAAW8D,EAAO9D,SAClB0B,cAAe,GACfzB,MAAQ6D,EAAO7D,MACfQ,YAAcqD,EAAOrD,aAGzB8B,MAAM,GAAD,OAAIlD,EAAJ,aAAuB,CACxByD,OAAS,OACTC,QAAU,CAAC,8BAA8B,GAA9B,OAAkC1D,GACzC,eAAgB,kCACpB2D,KAAOC,KAAKC,UAAU+V,KACvB9V,MAAK,SAACX,GAAD,OAAOA,EAAIC,UACdW,OAAM,SAACC,GAAD,OAAOC,QAAQC,IAAIF,OAStBG,cAAe,GACfC,kBAAkB,EAClBC,iBAAiB,EACjBC,cAAe,CACX/D,UAAY,GACZI,SAAW,GACXC,MAAQ,GACRO,UAAY,GACZC,YAAc,GACdC,MAAQ,GACRC,OAAS,GACTC,aAAe,GACfC,KAAM,GACNC,SAAW,GACXC,QAAU,GACVwX,SAAU,GACVO,gBAAiB,IApBzB,SAsBK,gBACKlV,EADL,EACKA,aACAC,EAFL,EAEKA,aACAC,EAHL,EAGKA,OACAC,EAJL,EAIKA,QACAE,EALL,EAKKA,QACAD,EANL,EAMKA,OANL,OAQG,eAACE,EAAA,EAAD,CAAOtB,SAAUiB,EAAjB,UACI,eAACM,EAAA,EAAD,CAAKpG,UAAU,0BAAf,UACI,cAACqG,EAAA,EAAD,UACI,eAACF,EAAA,EAAKG,MAAN,WACI,cAACH,EAAA,EAAKI,MAAN,yBACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,OAAOC,KAAK,YAAYC,YAAY,YAAOC,aAAcb,EAAOlE,UAAWgF,YAAaZ,EAAOpE,UAAWqE,QAASF,EAAQnE,YAAcoE,EAAOpE,UAAWiF,SAAUjB,IACxL,cAACM,EAAA,EAAKK,QAAQU,SAAd,CAAuBT,KAAK,UAA5B,SAAuCR,EAAOpE,iBAGtD,cAACwE,EAAA,EAAD,UACI,eAACF,EAAA,EAAKG,MAAN,WACI,cAACH,EAAA,EAAKI,MAAN,wBACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,OAAOC,KAAK,WAAWC,YAAY,WAAWC,aAAcb,EAAO9D,SAAU4E,YAAaZ,EAAOhE,SAAUiE,QAASF,EAAQ/D,WAAagE,EAAOhE,SAAU6E,SAAUjB,IACvL,cAACM,EAAA,EAAKK,QAAQU,SAAd,CAAuBT,KAAK,UAA5B,SAAuCR,EAAOhE,mBAI1D,eAACmE,EAAA,EAAD,CAAKpG,UAAU,0BAAf,UACI,cAACqG,EAAA,EAAD,UACI,eAACF,EAAA,EAAKG,MAAN,WACI,cAACH,EAAA,EAAKI,MAAN,qBACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,OAAOC,KAAK,QAAQC,YAAY,QAAQC,aAAcb,EAAO7D,MAAO2E,YAAaZ,EAAO/D,MAAOgE,QAASF,EAAQ9D,QAAU+D,EAAO/D,MAAO4E,SAAUjB,IACrK,cAACM,EAAA,EAAKK,QAAQU,SAAd,CAAuBT,KAAK,UAA5B,SAAuCR,EAAO/D,aAGtD,cAACmE,EAAA,EAAD,UACI,eAACF,EAAA,EAAKG,MAAN,WACI,cAACH,EAAA,EAAKI,MAAN,8BACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,OAAOC,KAAK,YAAYC,YAAY,iBAAiBC,aAAcb,EAAOtD,UAAWoE,YAAaZ,EAAOxD,UAAWyD,QAASF,EAAQvD,YAAcwD,EAAOxD,UAAWqE,SAAUjB,IAClM,cAACM,EAAA,EAAKK,QAAQU,SAAd,CAAuBT,KAAK,UAA5B,SAAuCR,EAAOxD,oBAI1D,eAAC2D,EAAA,EAAD,CAAKpG,UAAU,0BAAf,UACI,cAACqG,EAAA,EAAD,UACI,eAACF,EAAA,EAAKG,MAAN,WACI,cAACH,EAAA,EAAKI,MAAN,uBACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,OAAOC,KAAK,cAAcC,YAAY,UAAUC,aAAcb,EAAOrD,YAAamE,YAAaZ,EAAOvD,YAAawD,QAASF,EAAQtD,cAAgBuD,EAAOvD,YAAaoE,SAAUjB,IACrM,cAACM,EAAA,EAAKK,QAAQU,SAAd,CAAuBT,KAAK,UAA5B,SAAuCR,EAAOvD,mBAGtD,cAAC2D,EAAA,EAAD,UACI,eAACF,EAAA,EAAKG,MAAN,WACI,cAACH,EAAA,EAAKI,MAAN,qBACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,QAAQC,KAAK,QAAQC,YAAY,QAAQC,aAAcb,EAAOpD,MAAOkE,YAAaZ,EAAOtD,MAAOuD,QAASF,EAAQrD,QAAUsD,EAAOtD,MAAOmE,SAAUjB,IACtK,cAACM,EAAA,EAAKK,QAAQU,SAAd,CAAuBT,KAAK,UAA5B,SAAuCR,EAAOtD,gBAI1D,eAACyD,EAAA,EAAD,CAAKpG,UAAU,0BAAf,UACI,cAACqG,EAAA,EAAD,UACI,eAACF,EAAA,EAAKG,MAAN,WACI,cAACH,EAAA,EAAKI,MAAN,wBACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,WAAWC,KAAK,WAAWC,YAAY,WAAWC,aAAcb,EAAOyU,SAAU3T,YAAaZ,EAAOuU,SAAUtU,QAASF,EAAQwU,WAAavU,EAAOuU,SAAU1T,SAAUjB,IAC3L,cAACM,EAAA,EAAKK,QAAQU,SAAd,CAAuBT,KAAK,UAA5B,SAAuCR,EAAOuU,gBAGtD,cAACnU,EAAA,EAAD,UACI,eAACF,EAAA,EAAKG,MAAN,WACI,cAACH,EAAA,EAAKI,MAAN,gCACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,WAAWC,KAAK,kBAAkBC,YAAY,mBAAmBC,aAAcb,EAAOgV,gBAAiBlU,YAAaZ,EAAO8U,gBAAiB7U,QAASF,EAAQ+U,kBAAoB9U,EAAO8U,gBAAiBjU,SAAUjB,IACtO,cAACM,EAAA,EAAKK,QAAQU,SAAd,CAAuBT,KAAK,UAA5B,SAAuCR,EAAO8U,0BAI1D,uBACA,eAAC3U,EAAA,EAAD,CAAKpG,UAAU,0BAAf,UACI,cAACqG,EAAA,EAAD,UACI,eAACF,EAAA,EAAKG,MAAN,WACI,cAACH,EAAA,EAAKI,MAAN,qBACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,OAAOC,KAAK,SAASC,YAAY,QAAQC,aAAcb,EAAOnD,OAAQiE,YAAaZ,EAAOrD,OAAQsD,QAASF,EAAQpD,SAAWqD,EAAOrD,OAAQkE,SAAUjB,IAC1K,cAACM,EAAA,EAAKK,QAAQU,SAAd,CAAuBT,KAAK,UAA5B,SAAuCR,EAAOrD,cAGtD,cAACyD,EAAA,EAAD,UACI,eAACF,EAAA,EAAKG,MAAN,WACI,cAACH,EAAA,EAAKI,MAAN,qBACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,OAAOC,KAAK,eAAeC,YAAY,QAAQC,aAAcb,EAAOlD,aAAcgE,YAAaZ,EAAOpD,aAAcqD,QAASF,EAAQnD,eAAiBoD,EAAOpD,aAAciE,SAAUjB,IACxM,cAACM,EAAA,EAAKK,QAAQU,SAAd,CAAuBT,KAAK,UAA5B,SAAuCR,EAAOpD,uBAI1D,eAACuD,EAAA,EAAD,CAAKpG,UAAU,0BAAf,UACI,cAACqG,EAAA,EAAD,UACI,eAACF,EAAA,EAAKG,MAAN,WACI,cAACH,EAAA,EAAKI,MAAN,sBACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,OAAOC,KAAK,OAAOC,YAAY,SAASC,aAAcb,EAAOjD,KAAM+D,YAAaZ,EAAOnD,KAAMoD,QAASF,EAAQlD,OAASmD,EAAOnD,KAAMgE,SAAUjB,IACjK,cAACM,EAAA,EAAKK,QAAQU,SAAd,CAAuBT,KAAK,UAA5B,SAAuCR,EAAOnD,YAGtD,cAACuD,EAAA,EAAD,UACI,eAACF,EAAA,EAAKG,MAAN,WACI,cAACH,EAAA,EAAKI,MAAN,4BACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,OAAOC,KAAK,WAAWC,YAAY,eAAeC,aAAcb,EAAOhD,SAAU8D,YAAaZ,EAAOlD,SAAUmD,QAASF,EAAQjD,WAAakD,EAAOlD,SAAU+D,SAAUjB,IAC3L,cAACM,EAAA,EAAKK,QAAQU,SAAd,CAAuBT,KAAK,UAA5B,SAAuCR,EAAOlD,mBAI1D,eAACqD,EAAA,EAAD,CAAKpG,UAAU,0BAAf,UACI,cAACqG,EAAA,EAAD,UACI,eAACF,EAAA,EAAKG,MAAN,WACI,cAACH,EAAA,EAAKI,MAAN,4BACA,cAACJ,EAAA,EAAKK,QAAN,CAAcC,KAAK,OAAOC,KAAK,UAAUC,YAAY,eAAUC,aAAcb,EAAO/C,QAAS6D,YAAaZ,EAAOjD,QAASkD,QAASF,EAAQhD,UAAYiD,EAAOjD,QAAS8D,SAAUjB,IACjL,cAACM,EAAA,EAAKK,QAAQU,SAAd,CAAuBT,KAAK,UAA5B,SAAuCR,EAAOjD,eAGtD,cAACqD,EAAA,EAAD,UACI,cAACF,EAAA,EAAKG,MAAN,SAGP,+DAEI,cAACgB,EAAA,EAAD,CAAQ1H,QAAQ,UAAUL,KAAK,KAAK2B,QAAS,WACzCyN,EAAQc,KAAK,CACTjQ,SAAW,gBAFnB,sBAMJ,uBACD,qBAAK2H,MAAO,CAACC,QAAQ,OAAQC,eAAgB,UAA7C,SACI,cAACC,EAAA,EAAD,CAAQ1H,QAAQ,UAAUL,KAAK,KAAKkH,KAAK,SAAS4L,UAAWnM,EAA7D,iC,oBC7KbiV,GAjDW,SAAC,GAAc,IAAbjP,EAAY,EAAZA,IAAK7M,EAAO,EAAPA,EAC7B,EAAsC4D,mBAASiJ,GAA/C,mBAAOF,EAAP,KAAoBG,EAApB,KAEAjI,qBAAU,gBACKd,IAAR8I,GACCC,EAAeD,KAErB,CAACA,IAEH,IAAMyC,EAAUC,cACZtC,EAAuC,KAAlC,IAAI9K,MAAQ+K,oBACjBnI,EAAIgX,KAAO5Z,KAAK6Z,OAChB1L,EAAIyL,KAAOpP,EAAY1H,QAAQ7B,WAWnC,OACI,sBAAKzC,UAAiC,SAAtBgM,EAAYY,MAAmB,iCAAmC,oCAAlF,UACI,sBAAK5M,UAAU,MAAf,UACI,mBAAGA,UAAU,8BAAb,SAA4CgM,EAAYsP,qBACxD,sBAAKtb,UAAU,OAAf,UAC2B,SAAtBgM,EAAYY,OAAoB,4BAAG,cAAC,IAAD,CAAarN,KAAM,GAAI4H,MAAO,CAAC6F,MAAO,eAC1E,8BAAI3N,EAAE,QAAN,OAAqB2M,EAAYlC,KAAO,IAAItI,KAAK,IAAIA,KAAKwK,EAAYlC,MAAMwC,GAAGG,cAAcC,MAAM,GAAG,IAAM,YAGpH,gCACI,8BAAG,cAAC,IAAD,CAAWnN,KAAM,KAAOyM,EAAY1H,QAAW0H,EAAY1H,QAAQzC,UAAY,IAAMmK,EAAY1H,QAAQrC,SAAY,MACxH,8BAAI5C,EAAE,OAAN,OAAoB+E,EAAEmX,KAAK5L,EAAG,WACV,cAAnB3D,EAAYvF,KAAqBpH,EAAE,eAAiB,IAAM2M,EAAY1H,QAAQ5B,YAAc,MAE1E,SAAtBsJ,EAAYY,OACT,qCACI,uBACA,qBAAKzF,MAAO,CAACC,QAAS,OAAQC,eAAgB,YAA9C,SACI,wBAAQrH,UAAU,eAAekB,QAAS,SAAA6F,GAAC,OA3B3C,SAAAA,GAChBA,EAAEoD,iBAEFwE,EAAQc,KAAK,CACTjQ,SAAS,iBAAD,OAAmBwM,EAAYvL,GAA/B,YACRmM,MAAOZ,IAsBoD8H,CAAY/M,IAA3D,SAAgE1H,EAAE,8BCoC3Emc,GA9Ec,SAAC,GAAS,IAARnc,EAAO,EAAPA,EACrBuO,EAAY,CAAC,EAAG,EAAG,IACzB,EAAwC3K,mBAAS,IAAjD,mBAAO6K,EAAP,KAAqBC,EAArB,KACA,EAAwB9K,mBAAS,GAAjC,mBAAOoL,EAAP,KAAaC,EAAb,KACA,EAA0BrL,mBAAS,GAAnC,mBAAOsL,EAAP,KAAcC,EAAd,KACA,EAAgCvL,mBAAS2K,EAAU,IAAnD,mBAAOa,EAAP,KAAiBC,EAAjB,KAEMG,EAAmB,SAACR,EAAMI,GAC5B,IAAIK,EAAS,GAQb,OANGT,IACCS,EAAM,KAAWT,EAAO,GAEzBI,IACCK,EAAM,KAAWL,GAEdK,GAGX5K,qBAAU,WACN,IAAM+K,EAAe,uCAAG,4BAAA7K,EAAA,sEACOmL,IADP,OACdzB,EADc,OAEpBC,EAAgBD,EAAaA,cAC7BU,EAASV,EAAa0B,YAHF,2CAAH,qDAKrBP,MACD,CAACZ,EAAMI,IAEV,IAAMc,EAAiB,uCAAG,gCAAAnL,EAAA,yDAGH,QAFb0K,EAASD,EAAiBR,EAAMI,IAE5BJ,MAAiC,OAAhBS,EAAOvP,KAHZ,gCAINiF,MAAM,GAAD,OAAIlD,EAAJ,wCAA2CwN,EAAOT,KAAlD,iBAA+DS,EAAOvP,OAJrE,OAIlBkF,EAJkB,iCAKG,OAAhBqK,EAAOT,MAAiC,OAAhBS,EAAOvP,KALlB,kCAMNiF,MAAM,GAAD,OAAIlD,EAAJ,wCAA2CwN,EAAOT,OANjD,QAMlB5J,EANkB,kCAOG,OAAhBqK,EAAOT,MAAiC,OAAhBS,EAAOvP,KAPlB,kCAQNiF,MAAM,GAAD,OAAIlD,EAAJ,wCAA2CwN,EAAOvP,OARjD,QAQlBkF,EARkB,gDAUND,MAAM,GAAD,OAAIlD,EAAJ,4BAVC,QAUlBmD,EAVkB,gCAaHA,EAAIC,OAbD,eAahBxB,EAbgB,yBAefA,GAfe,4CAAH,qDA2BvB,OACI,sBAAKlD,UAAU,YAAf,UACI,qBAAKA,UAAU,aAAf,SACI,6BAAKX,EAAE,yBAEX,sBAAKW,UAAU,cAAf,UACI,8BAAIX,EAAE,kBAAN,UACA,wBAAQyH,SAZS,SAACqJ,GAC1BzB,EAAYyB,EAAMnJ,OAAOC,OACzBqH,EAAQ,IAUwCrH,MAAOwH,EAA/C,SACKb,EAAU5C,KAAI,SAACzL,GAAD,OACX,wBAAmB0H,MAAO1H,EAA1B,SACKA,GADQA,WAMzB,qBAAKS,UAAU,kBAAf,SACK8N,EAAa9C,KAAI,SAAAgB,GAAW,OAAI,cAAC,GAAD,CAAwCE,IAAKF,EAAa3M,EAAGA,GAArC2M,EAAYvL,SAEzE,cAAC2P,EAAA,EAAD,CAAYpQ,UAAU,OAAOuO,MAAOA,EAAOF,KAAMA,EAAMgC,aAAc,EAAGC,cAAe,EAAG1O,MAAM,UAAUkF,SA3BzF,SAACqJ,EAAOlJ,GAC7BqH,EAAQrH,UChBDwU,OA9Bf,YAA+C,IAApBrc,EAAmB,EAAnBA,eAAgBC,EAAG,EAAHA,EACjCC,EAAgB,cAAC,IAAD,CAAUC,KAAM,KACtC,OACI,cAACG,EAAA,EAAD,CAAQC,GAAG,QAAQC,QAAQ,QAAQC,OAAO,KAAKC,iBAAiB,OAAOC,OAAO,MAAMC,UAAU,eAA9F,SACI,eAACC,EAAA,EAAD,CAAWC,OAAK,EAAhB,UACI,cAACR,EAAA,EAAOS,MAAR,CAAcH,UAAU,eAAxB,SAAuC,qBAAKK,IAAKC,EAAMF,IAAK,WAC5D,cAACV,EAAA,EAAOa,OAAR,CAAe,gBAAc,qBAC7B,eAACb,EAAA,EAAOc,SAAR,CAAiBC,GAAG,8BAA8BT,UAAU,cAA5D,UACI,eAACU,EAAA,EAAD,CAAKV,UAAU,SAAf,UACI,cAAC,gBAAD,CAAeW,GAAG,gBAAgBC,WAAW,SAA7C,SACI,cAACF,EAAA,EAAIG,KAAL,CAAUC,OAAK,EAACd,UAAU,cAA1B,SAAyCX,EAAE,yBAE/C,cAAC,gBAAD,CAAesB,GAAG,aAAaC,WAAW,SAA1C,SACI,cAACF,EAAA,EAAIG,KAAL,CAAUC,OAAK,EAACd,UAAU,cAA1B,SAAyCX,EAAE,mBAGnD,eAAC0B,EAAA,EAAD,CAAaf,UAAU,mBAAmBgB,MAAO1B,EAAcmB,GAAG,qBAAlE,UACI,eAACM,EAAA,EAAD,CAAaC,MAAO3B,EAAE,YAAaoB,GAAG,qBAAtC,UACI,cAACM,EAAA,EAAYE,KAAb,CAAkBC,QAAS,WAAO9B,EAAe,OAAjD,qBACA,cAAC2B,EAAA,EAAYE,KAAb,CAAkBC,QAAS,WAAO9B,EAAe,OAAjD,uBAEJ,cAAC2B,EAAA,EAAYI,QAAb,IACA,cAACJ,EAAA,EAAYE,KAAb,CAAkBG,KAAK,WAAvB,SAAmC/B,EAAE,wB,qBC2b9Cqc,GA/cgB,SAAC,GAAsB,IAArB1P,EAAoB,EAApBA,YAAa3M,EAAO,EAAPA,EAEpCmN,EAAY,SAAA1C,GAAI,OAAIA,EAAK2C,cAAcC,MAAM,EAAE,KAC/CzE,EAAMC,mBACNyG,EAAUC,cAChB,EAA4B3L,mBAAS,IAArC,mBAAOgD,EAAP,KAAe+B,EAAf,KAEA,EAAgC/E,mBAAS,IAAzC,mBAAOsO,EAAP,KAAiBC,EAAjB,KACA,EAAgCvO,mBAAS,IAAzC,mBAAOyW,EAAP,KAAiBiC,EAAjB,KACA,EAAsC1Y,mBAAS,IAA/C,mBAAO6W,EAAP,KAAoB8B,EAApB,KAEA,EAAsB3Y,mBAAS+I,GAA/B,mBAAOE,EAAP,KACA,GADA,KACsCjJ,oBAAS,WAE3C,OADc4Y,eAAeC,QAAQ,qBACrB1Y,MAFpB,mBAAOqH,EAAP,KAAoBsR,EAApB,KAKA,EAA8C9Y,oBAAS,WAEnD,OADc4Y,eAAeC,QAAQ,yBACrB1Y,KAFpB,mBAAOmK,EAAP,KAAwByO,EAAxB,KAKA,EAA8B/Y,wBAASG,GAAvC,mBAAO0J,EAAP,KAAgBiE,EAAhB,KACA,EAAoD9N,mBAASuJ,EAAU,IAAIhL,MAAK,IAAIA,MAAOmL,SAAQ,IAAInL,MAAOyI,UAAU,OAAxH,mBAAOgS,EAAP,KAA2BC,EAA3B,KACA,GAAgDjZ,wBAASG,GAAzD,qBAAO+Y,GAAP,MAAyBC,GAAzB,MACA,GAAkCnZ,oBAAS,WACvC,IAAMoZ,EAAQR,eAAeC,QAAQ,aAErC,OADuB5W,KAAKoX,MAAMD,IACT,MAH7B,qBAAOhL,GAAP,MAAkBC,GAAlB,MAMA,GAAoCrO,wBAASG,GAA7C,qBAAOmZ,GAAP,MAAmBC,GAAnB,MACA,GAAgDvZ,wBAASG,GAAzD,qBAAOqZ,GAAP,MAAyBC,GAAzB,MACA,GAAoDzZ,mBAAS,GAA7D,qBAAO0Z,GAAP,MAA2BC,GAA3B,MACA,GAAoD3Z,wBAASG,GAA7D,qBAAOyZ,GAAP,MAA2BC,GAA3B,MACA,GAAgD7Z,oBAAS,WACrD,IAAMoZ,EAAQR,eAAeC,QAAQ,eAErC,OADyB5W,KAAKoX,MAAMD,IACT,MAH/B,qBAAOU,GAAP,MAAyBC,GAAzB,MAMA,GAA8C/Z,wBAASG,GAAvD,qBAAO6Z,GAAP,MAAwBC,GAAxB,MACA,GAAoDja,wBAASG,GAA7D,qBAAO+Z,GAAP,MAA2BC,GAA3B,MACA,GAA0Cna,wBAASG,GAAnD,qBAAOia,GAAP,MAAsBC,GAAtB,MACA,GAAkDra,wBAASG,GAA3D,qBAAOma,GAAP,MAA0BC,GAA1B,MACA,GAA8Cva,wBAASG,GAAvD,qBAAOqa,GAAP,MAAwBC,GAAxB,MACA,GAA0Cza,oBAAS,WAC/C,IAAMoZ,EAAQR,eAAeC,QAAQ,YAErC,OADsB5W,KAAKoX,MAAMD,IACT,MAH5B,qBAAOsB,GAAP,MAAsBC,GAAtB,MAUA1Z,qBAAU,WACN,IAAM6N,EAAW,uCAAG,4BAAA3N,EAAA,sEACO4N,KADP,OACVT,EADU,OAEhBC,EAAYD,GAFI,2CAAH,qDAIjBQ,MACD,IAEH,IAAMC,GAAa,uCAAG,4BAAA5N,EAAA,sEACAI,MAAM,GAAD,OAAIlD,EAAJ,qBADL,cACZmD,EADY,gBAELA,EAAIC,OAFC,mFAAH,qDAKnBR,qBAAU,WACN,IAAM2Z,EAAW,uCAAG,4BAAAzZ,EAAA,sEACO0Z,KADP,OACVpE,EADU,OAEhBiC,EAAYjC,GAFI,2CAAH,qDAIjBmE,MACD,IAEH,IAAMC,GAAa,uCAAG,4BAAA1Z,EAAA,sEACAI,MAAM,GAAD,OAAIlD,EAAJ,cADL,cACZmD,EADY,gBAELA,EAAIC,OAFC,mFAAH,qDAKnBR,qBAAU,WACN,IAAM6Z,EAAc,uCAAG,4BAAA3Z,EAAA,sEACI4Z,KADJ,OACbtE,EADa,OAEnBkC,EAAelC,GAFI,2CAAH,qDAIpBqE,MACD,IAEH,IAAMC,GAAgB,uCAAG,4BAAA5Z,EAAA,sEACHI,MAAM,GAAD,OAAIlD,EAAJ,iBADF,cACfmD,EADe,gBAERA,EAAIC,OAFI,mFAAH,qDAyEhBuZ,GAAwB,SAAClX,GAC3BA,EAAEoD,iBACF,IAAI+T,EAAe,QAEI9a,IAApB6Z,KACCiB,EAAY,UAAgBjB,GAAgBxc,GAC5Cyd,EAAY,KAAWjB,GAAgBvW,UAEbtD,IAAvB+Z,KACCe,EAAY,YAAkBf,SAEb/Z,IAAlBia,IAAiD,KAAlBA,KAC9Ba,EAAY,OAAab,SAEJja,IAAtBma,KACCW,EAAY,KAAWX,IAG3BI,GAAclO,KAAKyO,GACnBrC,eAAesC,QAAQ,WAAYjZ,KAAKC,UAAUwY,KAClDT,QAAmB9Z,GACL+H,SAASmH,eAAe,iBAC9BrL,MAAQ5H,EAAE,iBAClB+d,GAAsB,IACtBE,GAAiB,IACjBE,QAAqBpa,GAvIzB6E,EAAIsC,QAAQtD,MAAQ,KAyJlBqB,GAAkB,SAACC,GACrB,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACzB,IAAMC,EAAa,IAAIC,WACvBD,EAAWE,cAAcN,GACzBI,EAAWG,OAAS,WAChBL,EAAQE,EAAWI,SAEvBJ,EAAWK,QAAU,SAACC,GAClBP,EAAOO,QAKbC,GAAgB,uCAAG,WAAOnC,GAAP,6BAAA3C,EAAA,6DACfmE,EAAOxB,EAAEC,OAAOQ,MAAM,GADP,SAEAc,GAAgBC,GAFhB,OAOrB,IALMY,EAFe,OAGjBjG,EAAOiG,EAAO9G,MAAM,WAAW,GAC/B+G,EAAaC,KAAKnG,GAElBoG,EAAc,IAAIC,MAAMH,EAAWI,QAC/BC,EAAI,EAAGA,EAAIL,EAAWI,OAAQC,IAClCH,EAAYG,GAAKL,EAAWM,WAAWD,GAEvCtH,EAAO,IAAIwH,WAAWL,GACtBM,EAAQL,MAAMM,KAAK1H,GACvBqb,GAAqB5T,GAZA,4CAAH,sDA8DhBQ,GAAiB,WACnB,IAAMI,EAAY,GAMlB,YAJmBpH,IAAhBqH,GAA6C,KAAhBA,IAC5BD,EAAUC,YAAcpL,EAAE,mCAGvBmL,GAGX,OACI,eAACrE,EAAA,EAAD,CAAMnG,UAAU,qBAAhB,UACI,eAACmG,EAAA,EAAKG,MAAN,CAAYtG,UAAU,OAAO2K,UAAU,+BAAvC,UACI,cAACxE,EAAA,EAAKI,MAAN,UAAalH,EAAE,4BACf,cAAC8G,EAAA,EAAKK,QAAN,CAAcoE,GAAG,WAAWwT,KAAM,EAAGnX,MAAOwD,EAAa5D,YAAaZ,EAAOwE,YAAa3D,SAAU,SAACC,GACjGgV,EAAehV,EAAEC,OAAOC,OACxB4U,eAAesC,QAAQ,cAAepX,EAAEC,OAAOC,OAC1ChB,EAAM,aACP+B,EAAU,2BACH/B,GADE,kBAEJ,cAAe,WAG5B,cAACE,EAAA,EAAKK,QAAQU,SAAd,CAAuBT,KAAK,UAA5B,SAAuCR,EAAOwE,iBAElD,eAACtE,EAAA,EAAKG,MAAN,CAAYtG,UAAU,OAAO2K,UAAU,8BAAvC,UACI,eAACxE,EAAA,EAAKI,MAAN,WAAalH,EAAE,mBAAf,OACA,cAAC8G,EAAA,EAAKK,QAAN,CAAcoE,GAAG,WAAWwT,KAAM,EAAGnX,MAAOsG,EAAiBzG,SAAU,SAACC,GACpEiV,EAAmBjV,EAAEC,OAAOC,OAC5B4U,eAAesC,QAAQ,kBAAmBpX,EAAEC,OAAOC,aAG3D,eAACb,EAAA,EAAD,CAAKpG,UAAU,OAAf,UACI,eAACmG,EAAA,EAAKI,MAAN,WAAalH,EAAE,aAAf,OACA,eAACgH,EAAA,EAAD,CAAKwU,IAAE,EAAP,UACI,eAAC1U,EAAA,EAAKG,MAAN,WACI,eAACH,EAAA,EAAKI,MAAN,CAAY8X,OAAO,KAAnB,UAAyBhf,EAAE,iBAA3B,OACA,eAAC8G,EAAA,EAAKkN,OAAN,CAAa,aAAW,gCAAgC5S,GAAG,gBAA3D,UACI,wBAAQS,QAAS,kBAAM6P,OAAW3N,IAAlC,SAA+C/D,EAAE,mBAChDkS,EAASvG,KAAI,SAACwI,GAAD,OACV,wBAAQvM,MAAOuM,EAAKtS,QAAS,WACzB6P,EAAWyC,IADf,SAEIA,EAAI9M,gBAIpB,eAACP,EAAA,EAAKG,MAAN,WACI,cAACH,EAAA,EAAKI,MAAN,CAAY8X,OAAO,KAAnB,SAAyBhf,EAAE,0BAC3B,cAAC8G,EAAA,EAAKK,QAAN,CAAcC,KAAK,OAAOQ,MAAOgV,EAAoBnV,SAAU,SAACC,GAAD,OAAOmV,EAAsBnV,EAAEC,OAAOC,gBAG7G,eAACZ,EAAA,EAAD,CAAKwU,IAAE,EAAP,UACI,cAAC1U,EAAA,EAAKI,MAAN,CAAY8X,OAAO,KAAnB,SAAyBhf,EAAE,mBAC3B,qBAAK8H,MAAO,CAACmX,SAAU,SAAUpO,OAAQ,SAAzC,SACKmB,GAAUrG,KAAI,SAACyF,GACZ,OAAO,qBAAKzQ,UAAU,gCAAkDkB,QAAS,WAC7Ekb,GAAoB3L,IADjB,SAEHA,EAAS6K,mBAAqB,QAAS7K,EAASsC,YAFOtC,EAAShQ,eAQpF,sBAAK0G,MAAO,CAACC,QAAS,OAAQC,eAAgB,iBAA9C,UACI,wBAAQrH,UAAU,YAAYkB,QAAS,SAAA6F,GAAC,OA1PrB,SAACA,GAC5BA,EAAEoD,iBACF,IAAIsG,EAAW,QAECrN,IAAZ0J,IACA2D,EAAQ,iBAAuB3D,EAAQrM,GACvCgQ,EAAQ,mBAAyB3D,EAAQpG,KACzC+J,EAAQ,WAAiBwL,EAEzB5K,GAAU5B,KAAKgB,GACfoL,eAAesC,QAAQ,YAAajZ,KAAKC,UAAUkM,KACnDN,OAAW3N,GACG+H,SAASmH,eAAe,iBAC9BrL,MAAQ5H,EAAE,iBAClB6c,EAAsB1P,EAAU,IAAIhL,MAAK,IAAIA,MAAOmL,SAAQ,IAAInL,MAAOyI,UAAU,QA4OnCsU,CAAuBxX,IAAjE,SAAsE1H,EAAE,iBACxE,wBAAQW,UAAU,eAAekB,QAAS,SAAA6F,GAAC,OAzOxB,SAACA,GAE5B,GADAA,EAAEoD,sBACsB/G,IAArB+Y,GAA+B,CAC/B,IAAMqC,EAAWnN,GAAU8H,QAAQgD,IAChCqC,GAAY,IACXnN,GAAUoN,OAAOD,EAAU,GAC3BlN,GAAaD,IACbwK,eAAesC,QAAQ,YAAajZ,KAAKC,UAAUkM,KACnD+K,QAAoBhZ,KAiO0Bsb,CAAuB3X,IAApE,SAAyE1H,EAAE,uBAE/E,uBAEA,eAAC+G,EAAA,EAAD,CAAKpG,UAAU,iBAAf,UACI,eAACqG,EAAA,EAAD,CAAKwU,IAAE,EAAP,UACI,cAAC1U,EAAA,EAAKI,MAAN,UAAalH,EAAE,iBACf,eAAC8G,EAAA,EAAKG,MAAN,WACI,eAACH,EAAA,EAAKI,MAAN,CAAY8X,OAAO,KAAnB,UAAyBhf,EAAE,oBAA3B,OACA,eAAC8G,EAAA,EAAKkN,OAAN,CAAa,aAAW,gCAAiC5S,GAAG,mBAA5D,UACI,wBAAQS,QAAS,kBAAMsb,QAAcpZ,IAArC,SAAkD/D,EAAE,sBACnDya,EAAY9O,KAAI,SAACuR,GAAD,OACb,wBAAQtV,MAAOsV,EACPrb,QAAS,kBAAIsb,GAAcD,IADnC,SACiDA,EAAW7V,MAD5B6V,EAAW9b,aAKvD,eAAC0F,EAAA,EAAKG,MAAN,CAAYtG,UAAU,OAAO2K,UAAU,oBAAvC,UACI,eAACxE,EAAA,EAAKI,MAAN,CAAY8X,OAAO,KAAnB,UAAyBhf,EAAE,UAA3B,OACA,cAAC8G,EAAA,EAAKK,QAAN,CAAcC,KAAK,OAAOE,YAAatH,EAAE,UAAW4H,MAAOwV,GAAkB3V,SAAU,SAACC,GAAD,OAAK2V,GAAoB3V,EAAEC,OAAOC,aAE7H,eAACd,EAAA,EAAKG,MAAN,WACI,cAACH,EAAA,EAAKI,MAAN,CAAY8X,OAAO,KAAnB,SAAyBhf,EAAE,0BAC3B,cAAC,KAAD,CACI4H,MAAO0V,GACP7V,SAAU,SAACC,GAAD,OAAO6V,GAAsBta,SAASyE,EAAEC,OAAOC,iBAIrE,eAACZ,EAAA,EAAD,CAAKwU,IAAE,EAAP,UACI,cAAC1U,EAAA,EAAKI,MAAN,CAAY8X,OAAO,KAAnB,SAAyBhf,EAAE,qBAC3B,qBAAK8H,MAAO,CAACmX,SAAU,SAAUpO,OAAQ,SAAzC,SACK6M,GAAiB/R,KAAI,SAACuR,GACnB,OAAO,qBAAKvc,UAAU,gCAAoDkB,QAAS,WAC/E4b,GAAsBP,IADnB,SAEHA,EAAW7V,KAAO,KAAK6V,EAAWvC,iBAAmB,QAFEuC,EAAW9b,eAOtF,sBAAK0G,MAAO,CAACC,QAAS,OAAQC,eAAgB,iBAA9C,UACI,wBAAQrH,UAAU,YAAYkB,QAAS,SAAC6F,GAAD,OArQlB,SAACA,GAC9BA,EAAEoD,iBACF,IAAI4P,EAAW,QAEG3W,IAAfmZ,SAAiDnZ,IAArBqZ,KACgD,IAAxEM,GAAiBnN,QAAO,SAAA7I,GAAC,OAAEA,EAAE4X,eAAiBpC,GAAW9b,MAAI+I,QAC5DuQ,EAAQ,iBAAuB4C,GAC/B5C,EAAQ,OAAa0C,GACrB1C,EAAQ,aAAmBwC,GAAW9b,GACtCsZ,EAAQ,KAAWwC,GAAW7V,KAE9BqW,GAAiBtN,KAAKsK,GACtB8B,eAAesC,QAAQ,cAAejZ,KAAKC,UAAU4X,KACrDP,QAAcpZ,GACA+H,SAASmH,eAAe,oBAC9BrL,MAAQ5H,EAAE,oBAClBqd,GAAoB,IACpBE,GAAsB,IAEtB1R,OAAOiC,MAAM9N,EAAE,gCAkP6Buf,CAAyB7X,IAArE,SAA0E1H,EAAE,mBAC5E,wBAAQW,UAAU,eAAekB,QAAS,SAAC6F,GAAD,OA9OrB,SAACA,GAE9B,GADAA,EAAEoD,sBACwB/G,IAAvByZ,GAAiC,CAChC,IAAMgC,EAAW9B,GAAiB5D,QAAQ0D,IACvCgC,GAAY,IACX9B,GAAiB0B,OAAOI,EAAU,GAClC7B,GAAoBD,IACpBlB,eAAesC,QAAQ,cAAejZ,KAAKC,UAAU4X,KACrDD,QAAsB1Z,KAsOyB0b,CAAyB/X,IAAxE,SAA6E1H,EAAE,yBAEnF,uBACA,cAAC+G,EAAA,EAAD,IAGA,sBAAKpG,UAAU,YAAf,UACI,eAACmG,EAAA,EAAKI,MAAN,WAAalH,EAAE,YAAf,OACA,oBAAI8H,MAAO,CAAC6F,MAAO,WAAnB,SAAgC3N,EAAE,kBAClC,eAAC+G,EAAA,EAAD,CAAKpG,UAAU,OAAf,UACI,cAACqG,EAAA,EAAD,CAAKwU,IAAE,EAAP,SACI,eAAC1U,EAAA,EAAKG,MAAN,WACI,eAACH,EAAA,EAAKI,MAAN,CAAY8X,OAAO,KAAnB,UAAyBhf,EAAE,iBAA3B,OACA,eAAC8G,EAAA,EAAKkN,OAAN,CAAa,aAAW,gCAAgC5S,GAAG,gBAA3D,UACI,wBAAQS,QAAS,kBAAMgc,QAAmB9Z,IAA1C,SAAuD/D,EAAE,mBACxDqa,EAAS1O,KAAI,SAACyN,GAAD,OACX,wBAAQxR,MAAOwR,EACdvX,QAAS,kBAAIgc,GAAmBzE,IADjC,SAC4CA,EAAQ/R,MADvB+R,EAAQhY,eAMpD,cAAC4F,EAAA,EAAD,CAAKwU,IAAE,OAEX,eAACzU,EAAA,EAAD,CAAKpG,UAAU,OAAf,UACI,cAACqG,EAAA,EAAD,CAAKwU,IAAE,EAAP,SACI,eAAC1U,EAAA,EAAKG,MAAN,CAAYtG,UAAU,OAAO2K,UAAU,8BAAvC,UACI,eAACxE,EAAA,EAAKI,MAAN,CAAY8X,OAAO,KAAnB,UAAyBhf,EAAE,eAA3B,OACA,cAAC8G,EAAA,EAAKK,QAAN,CAAcoE,GAAG,WAAWwT,KAAM,EAAGnX,MAAOkW,GAAoBrW,SAAU,SAACC,GAAD,OAAKqW,GAAsBrW,EAAEC,OAAOC,eAGtH,cAACZ,EAAA,EAAD,CAAKwU,IAAE,EAAP,SACI,eAAC1U,EAAA,EAAKG,MAAN,CAAYtG,UAAU,OAAO2K,UAAU,8BAAvC,UACI,eAACxE,EAAA,EAAKI,MAAN,CAAY8X,OAAO,KAAnB,UAAyBhf,EAAE,UAA3B,OACA,cAAC8G,EAAA,EAAKK,QAAN,CAAcoE,GAAG,WAAWwT,KAAM,EAAGnX,MAAOoW,GAAevW,SAAU,SAACC,GAAD,OAAKuW,GAAiBvW,EAAEC,OAAOC,kBAIhH,eAACb,EAAA,EAAD,CAAKpG,UAAU,OAAf,UACI,cAACqG,EAAA,EAAD,CAAKwU,IAAE,EAAP,SACI,eAAC1U,EAAA,EAAKG,MAAN,CAAYqE,UAAU,WAAW3K,UAAU,OAA3C,UACI,eAACmG,EAAA,EAAKI,MAAN,CAAY8X,OAAO,KAAnB,UAAyBhf,EAAE,WAA3B,OACA,cAAC8G,EAAA,EAAKK,QAAN,CAAcoE,GAAG,QAAQnE,KAAK,OAAOwB,IAAKA,EAAK1I,KAAK,KAAKuH,SAAU,SAACC,GAAD,OAAKmC,GAAiBnC,WAGjG,eAACV,EAAA,EAAD,CAAKwU,IAAE,EAAP,UACI,eAAC1U,EAAA,EAAKI,MAAN,CAAY8X,OAAO,KAAnB,UAAyBhf,EAAE,gBAA3B,OACA,qBAAK8H,MAAO,CAACmX,SAAU,SAAUpO,OAAQ,SAAzC,SACKyN,GAAc3S,KAAI,SAACuN,GAChB,OAAO,qBAAKvY,UAAU,gCAAiDkB,QAAS,WAC5Ewc,GAAmBnF,IADhB,SAEHA,EAAQ7R,MAF+C6R,EAAQ9X,eAOnF,sBAAK0G,MAAO,CAACC,QAAS,OAAQC,eAAgB,iBAA9C,UACI,wBAAQrH,UAAU,YAAYkB,QAAS,SAAC6F,GAAD,OAAKkX,GAAsBlX,IAAlE,SAAuE1H,EAAE,gBACzE,wBAAQW,UAAU,eAAekB,QAAS,SAAC6F,GAAD,OA7P5B,SAACA,GAE3B,GADAA,EAAEoD,sBACqB/G,IAApBqa,GAA8B,CAC7B,IAAMsB,EAAepB,GAAcxE,QAAQsE,IACxCsB,GAAgB,IACfpB,GAAcc,OAAOM,EAAc,GACnCnB,GAAiBD,IACjB9B,eAAesC,QAAQ,WAAYjZ,KAAKC,UAAUwY,KAClDD,QAAmBta,KAqPgC4b,CAAsBjY,IAArE,SAA0E1H,EAAE,sBAEhF,0BAEJ,sBAAK8H,MAAO,CAACC,QAAQ,OAAQC,eAAgB,UAA7C,UACI,cAACC,EAAA,EAAD,CAAQH,MAAO,CAAC8X,WAAa,KAAMC,YAAY,MAAOtf,QAAQ,SAASsB,QAAS,WAC5E2a,eAAesD,QACfxQ,EAAQc,KAAK,CACTjQ,SAAW,mBAHnB,SAKIH,EAAE,YACN,cAACiI,EAAA,EAAD,CAAQH,MAAO,CAAC8X,WAAa,KAAMC,YAAY,MAAOtf,QAAQ,UAAUsB,QAAS,SAAC6F,GAAD,OA/NxE,SAACA,GAClBA,EAAEoD,iBAEF,IAAMlE,EAASmE,KAEf,GAAGC,OAAOC,KAAKrE,GAAQuD,OAAS,EAC5BxB,EAAU/B,OACT,CACD,IAAIyH,EAAgB,GAEpB,GAAGqP,GAAiBvT,OAAS,EAAE,CAC3B,IAAIoQ,EAAe,GACf7G,EAAavG,EAAU,IAAIhL,MAAK,IAAIA,MAAOmL,SAAQ,IAAInL,MAAOyI,UAAU,MACxEgQ,GAAcmF,KAAKC,MAAsB,IAAhBD,KAAKE,UAAoB,KAAO1K,WAAWrS,UAAU,GAC9EuX,EAAciD,GAElBnD,EAAY,WAAiB7G,EAC7B6G,EAAY,WAAiBK,EAC7BL,EAAY,YAAkBE,EAC9BpM,EAAgB,CAACkM,GAGrB,IAAI2F,EAAY,GAChBA,EAAS,YAAkB9U,EAC3B8U,EAAS,gBAAsBhS,EAC/BgS,EAAS,UAAgBlO,GACzBkO,EAAS,cAAoB7R,EAC7B6R,EAAS,SAAe5B,GAGxBnZ,MAAM,GAAD,OAAIlD,EAAJ,yBAA4B4K,EAAIzL,GAAhC,SAA0C,CAC3CsE,OAAS,QACTC,QAAS,CACL,eAAgB,oBAEpBC,KAAOC,KAAKC,UAAUoa,KACvBna,MAAK,SAACX,GAAD,OAAOA,EAAIC,UACdU,KAAK8F,OAAOiC,MAAM9N,EAAE,+BACpB+F,KAAKuJ,EAAQc,KAAK,CACfjQ,SAAW,mBAEd6F,OAAM,SAACC,GAAD,OAAOC,QAAQC,IAAIF,MAE9BuW,eAAesD,SAoL2ErZ,CAAaiB,IAAnG,SAAwG1H,EAAE,wBC3b3GmgB,GAjBY,SAAC,GAAS,IAARngB,EAAO,EAAPA,EAGnB2M,EADQ4C,cACc8B,SAAS9D,MAErC,OACI,sBAAK5M,UAAU,YAAf,UACI,qBAAKA,UAAU,aAAf,SACI,6BAAKX,EAAE,0BAEX,uBACA,cAAC,GAAD,CAA+B2M,YAAaA,EAAa3M,EAAGA,IAC5D,cAAC,GAAD,CAAwB2M,YAAaA,EAAa3M,EAAGA,QC4ClDogB,GAxDO,SAAC,GAAsB,IAArBzT,EAAoB,EAApBA,YAAa3M,EAAO,EAAPA,EAEjC,EAAwB4D,oBAAS,GAAjC,mBAAOmJ,EAAP,KAAaC,EAAb,KAOA,IAAIC,EAAuC,KAAlC,IAAI9K,MAAQ+K,oBACrB,OACI,sBAAKvM,UAAU,oCAAoCkB,QAAS,SAAA6F,GAAC,OAPjE,SAAqBA,GACjBA,EAAEoD,iBACFkC,GAASD,GAKwDS,CAAY9F,IAA7E,UACI,sBAAK/G,UAAU,MAAf,UACI,mBAAGA,UAAU,8BAAb,SAA4CgM,EAAYe,cACxD,sBAAK/M,UAAU,OAAf,UACI,4BAAIX,EAAE,UACN,4BAAI2M,EAAYlC,KAAO,IAAItI,KAAK,IAAIA,KAAKwK,EAAYlC,MAAMwC,GAAGG,cAAcC,MAAM,EAAE,IAAM,KAC1F,4BAAIV,EAAYlC,KAAO,IAAItI,KAAK,IAAIA,KAAKwK,EAAYlC,MAAMwC,GAAGG,cAAcC,MAAM,GAAG,IAAM,WAGnG,qBAAKvF,MAAO,CAACC,QAAS,OAAQC,eAAe,iBAA7C,SACI,gCACI,cAAC,IAAD,CAAW9H,KAAM,KAChBF,EAAE,eAFP,OAE8B2M,EAAYiB,OAASjB,EAAYiB,OAAOpL,UAAY,IAAMmK,EAAYiB,OAAOhL,SAAY,QAG1H+J,EAAYuB,gBAAmB,mCAC3BnB,EACG,gCACI,uBACA,sBAAKpM,UAAU,cAAf,UACI,cAAC,IAAD,CAAST,KAAM,KACf,mBAAGS,UAAU,SAAb,SAAuBX,EAAE,wBAE7B,6BACI,6BAAK2M,EAAYuB,oBAErB,uBAEA,sBAAKvN,UAAU,cAAf,UACI,cAAC,IAAD,CAAQT,KAAM,KACd,mBAAGS,UAAU,SAAb,SAAuBX,EAAE,yBAE7B,4BAAI2M,EAAYe,cAChB,uBACA,sBAAK/M,UAAU,cAAf,UACI,cAAC,IAAD,CAAaT,KAAM,KACnB,mBAAGS,UAAU,SAAb,SAAuBX,EAAE,uBAE7B,4BAAI2M,EAAY0B,cAAgBrO,EAAE,wBAA0BA,EAAE,wBAC5D,OACR,SCfHqgB,GAnCW,SAAC,GAAS,IAARrgB,EAAO,EAAPA,EAGlB2M,EADQ4C,cACc8B,SAAS9D,MACrC,EAAwD3J,mBAAS,IAAjE,mBAAO0c,EAAP,KAA6BC,EAA7B,KAEA1b,qBAAU,WACN,IAAM+K,EAAe,uCAAG,4BAAA7K,EAAA,sEACOmL,IADP,OACdzB,EADc,OAEpB8R,EAAwB9R,EAAaA,cAFjB,2CAAH,qDAIrBmB,MACD,IAEH,IAAMM,EAAiB,uCAAG,4BAAAnL,EAAA,sEACJI,MAAM,GAAD,OAAIlD,EAAJ,qBAAwB0K,EAAY1H,QAAQ7D,GAA5C,sBADD,cAChBgE,EADgB,gBAETA,EAAIC,OAFK,mFAAH,qDAKvB,OACI,sBAAK1E,UAAU,YAAf,UACI,qBAAKA,UAAU,aAAf,SACI,6BAAKX,EAAE,2BAEX,cAAC,GAAD,CAA+B2M,YAAaA,EAAa3M,EAAGA,IAC3DsgB,EAAqBnW,OAAS,EAC3B,qBAAKxJ,UAAU,kBAAf,SACK2f,EAAqB3U,KAAI,SAAA6U,GAAkB,OAAI,cAAC,GAAD,CAA2C7T,YAAa6T,EAAoBxgB,EAAGA,GAA3DwgB,EAAmBpf,SAClF,sBAAM0G,MAAO,CAACuT,UAAY,MAA1B,SAAkCrb,EAAE,8B,UCyC9CygB,GApEI,SAAC,GAAS,IAARzgB,EAAO,EAAPA,EAEjB,EAA0B4D,mBAAS,IAAnC,mBAAOuE,EAAP,KAAcC,EAAd,KAEMuE,EADQ4C,cACc8B,SAAS9D,MAErC1I,qBAAU,WACN,IAAM6b,EAAQ,uCAAG,4BAAA3b,EAAA,sEACO4b,IADP,OACPxY,EADO,OAEbC,EAASD,GAFI,2CAAH,qDAIduY,MACD,IAEH,IAAMC,EAAU,uCAAG,4BAAA5b,EAAA,sEACGI,MAAM,GAAD,OAAIlD,EAAJ,qBAAwB0K,EAAY1H,QAAQ7D,GAA5C,WADR,cACTgE,EADS,gBAEFA,EAAIC,OAFF,mFAAH,qDAoBhB,OACI,sBAAK1E,UAAU,YAAf,UACI,qBAAKA,UAAU,aAAf,SACI,6BAAKX,EAAE,oBAEX,cAAC,GAAD,CAA+B2M,YAAaA,EAAa3M,EAAGA,IAC3DmI,EAAMgC,OAAS,EACZ,eAAC,KAAD,CAAOxJ,UAAU,uDAAuDmH,MAAO,CAAC2D,MAAQ,OAAxF,UACI,uBAAO3D,MAAO,CAAC4D,gBAAkB,WAAjC,SACA,+BACI,+BAAK1L,EAAE,QAAP,OACA,+BAAKA,EAAE,eAAP,OACA,6BAAKA,EAAE,gBACP,6BAAKA,EAAE,iBAGX,gCACCmI,EAAMwD,KAAI,SAACzC,GAAD,OACP,+BACI,6BAAKA,EAAK7B,OACV,6BAAK6B,EAAKkC,cACV,6BAAKlC,EAAK0C,aACV,6BACI,cAAC3D,EAAA,EAAD,CAAQ1H,QAAQ,UAAUsB,QAAS,SAAA6F,GAAC,OAtCrC,SAACA,EAAGwB,GAC3BxB,EAAEoD,iBACF3F,MAAM,GAAD,OAAIlD,EAAJ,qBAAwB0K,EAAY1H,QAAQ7D,GAA5C,kBAAwD8H,EAAK9H,KAC7D2E,MAAK,SAAAX,GAAG,OAAIA,EAAIC,UAChBU,MAAK,SAAAX,GACF,IAAIL,EAAI8G,OAAOC,SAASC,cAAc,KAClCC,EAAU,IAAI1B,WAAWlF,EAAI8D,MACjCnE,EAAEhD,KAAO8J,OAAOI,IAAIC,gBAAgB,IAAIC,KAAK,CAACH,GAAU,CAAC5E,KAAM8B,EAAK9B,QACpErC,EAAEqH,SAAWhH,EAAIiC,KACjByE,SAASlG,KAAKyG,YAAYtH,GAC1BA,EAAEuH,QACFR,SAASlG,KAAK2G,YAAYxH,MA2B8ByH,CAAmB9E,EAAGwB,IAA9D,SAAsElJ,EAAE,kBALvEkJ,EAAK9H,YAUX,sBAAMT,UAAU,YAAhB,SAA6BX,EAAE,iBCiG3C4gB,GAhKO,SAAC,GAAsC,IAArC1H,EAAoC,EAApCA,QAAS2E,EAA2B,EAA3BA,mBAAoB7d,EAAO,EAAPA,EACjD,EAA0B4D,oBAAS,GAAnC,mBAAO2J,EAAP,KAAc4L,EAAd,KACA,EAA8BvV,oBAAS,GAAvC,mBAAgBid,GAAhB,WACA,EAA8Bjd,mBAASsV,GAAvC,mBAAOE,EAAP,KAAgB0H,EAAhB,KACA,EAA4Bld,wBAASG,GAArC,mBAAO2F,EAAP,KAAeqX,EAAf,KACA,EAAwBnd,wBAASG,GAAjC,mBAAOmF,EAAP,KAAa8X,EAAb,KACA,EAAoDpd,wBAASG,GAA7D,mBAAOwV,EAAP,KAA2B0H,EAA3B,KACA,EAA4Brd,mBAAS,IAArC,mBAAOgD,EAAP,KAAe+B,EAAf,KACMC,EAAMC,mBACR9D,EAAIgX,KAAO5Z,KAAK6Z,OAChB1L,EAAIyL,KAAO3C,EAAQnU,QAAQ7B,WAE/B,SAAS8d,EAASxZ,GACdA,EAAEoD,iBACFqO,GAAU5L,GAGd1I,qBAAU,gBACSd,IAAZmV,GACC4H,EAAW5H,KAEjB,CAACA,IAEH,IAcMjQ,EAAkB,SAACC,GACrB,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACzB,IAAMC,EAAa,IAAIC,WACvBD,EAAWE,cAAcN,GACzBI,EAAWG,OAAS,WAChBL,EAAQE,EAAWI,SAEvBJ,EAAWK,QAAU,SAACC,GAClBP,EAAOO,QAKbC,EAAgB,uCAAG,WAAOnC,GAAP,6BAAA3C,EAAA,6DACfmE,EAAOxB,EAAEC,OAAOQ,MAAM,GADP,SAEAc,EAAgBC,GAFhB,OAOrB,IALMY,EAFe,OAGjBjG,EAAOiG,EAAO9G,MAAM,WAAW,GAC/B+G,EAAaC,KAAKnG,GAElBoG,EAAc,IAAIC,MAAMH,EAAWI,QAC/BC,EAAI,EAAGA,EAAIL,EAAWI,OAAQC,IAClCH,EAAYG,GAAKL,EAAWM,WAAWD,GAEvCtH,EAAO,IAAIwH,WAAWL,GACtBM,EAAQL,MAAMM,KAAK1H,GACvBke,EAAQzW,GAZa,4CAAH,sDAehB4W,EAAoB,SAACzZ,GACvBA,EAAEoD,iBAEF,IAAMlE,EA7Ca,WACnB,IAAMuE,EAAY,GAUlB,YARcpH,IAAX2F,GAAmC,KAAXA,IACvByB,EAAUzB,OAAS,8BAGV3F,IAATmF,IACAiC,EAAUjC,KAAO,uBAGdiC,EAkCQJ,GAEf,GAAIC,OAAOC,KAAKrE,GAAQuD,OAAS,EAC7BxB,EAAU/B,OACP,CAEH,IAAIsZ,EAAY,GAChBA,EAAS,OAAaxW,EACtBwW,EAAS,mBAAyB3G,EAClC2G,EAAS,KAAWhX,EAEpB/D,MAAM,GAAD,OAAIlD,EAAJ,yBAA4BmX,EAAQI,cAApC,uBAAgEJ,EAAQK,WAAa,CACtF/T,OAAQ,QACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUoa,KAExBna,MAAK,SAACX,GAAD,OAASA,EAAIC,UACdU,MAAK,kBAAI,IAAIoD,SAAQ,SAAAC,GAAO,OAAIgY,WAAWhY,EAAS,WACxDrD,KAAK8F,OAAOiC,MAAM9N,EAAE,qBACpBgG,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,MAC5B4X,EAAmBzE,GACnByH,GAAW,KAInB,OACI,sBAAKlgB,UAAU,wBAAf,UACI,sBAAKA,UAAU,MAAf,UACI,mBAAGA,UAAU,8BAAb,SAA4CyY,EAAQhL,qBACpD,sBAAKzN,UAAU,OAAf,UACI,4BAAIX,EAAE,UACN,4BAAI,IAAImC,KAAKiX,EAAQE,iBAAiBlM,cAAcC,MAAM,EAAE,MAC5D,4BAAI,IAAIlL,KAAKiX,EAAQE,iBAAiBlM,cAAcC,MAAM,GAAG,YAGrE,gCACI,8BAAG,cAAC,IAAD,CAAWnN,KAAM,KAAOkZ,EAAQnU,QAAWmU,EAAQnU,QAAQzC,UAAY,IAAM4W,EAAQnU,QAAQrC,SAAY,MAC5G,8BAAI5C,EAAE,OAAN,OAAoB+E,EAAEmX,KAAK5L,EAAG,eAEhC/C,GACF,qBAAKzF,MAAO,CAACC,QAAS,OAAQC,eAAgB,YAA9C,SACI,wBAAQrH,UAAU,eAAekB,QAASqf,EAA1C,SAAqDlhB,EAAE,sBAG1DuN,EACG,eAACzG,EAAA,EAAD,WACI,eAACA,EAAA,EAAKG,MAAN,CAAYtG,UAAU,OAAO2K,UAAU,oBAAvC,UACI,eAACxE,EAAA,EAAKI,MAAN,WAAalH,EAAE,eAAf,OACA,cAAC8G,EAAA,EAAKK,QAAN,CAAcoE,GAAG,WAAWwT,KAAM,EAAGnX,MAAO2R,EAAoB9R,SAAU,SAAAC,GACtEuZ,EAAsBvZ,EAAEC,OAAOC,aAGvC,eAACd,EAAA,EAAKG,MAAN,CAAYtG,UAAU,OAAO2K,UAAU,SAAvC,UACI,eAACxE,EAAA,EAAKI,MAAN,WAAalH,EAAE,UAAf,OACA,cAAC8G,EAAA,EAAKK,QAAN,CAAcoE,GAAG,WAAWwT,KAAM,EAAGvX,YAAaZ,EAAO8C,OAAQ9B,MAAO8B,EAAQjC,SAAU,SAAAC,GACtFqZ,EAAUrZ,EAAEC,OAAOC,OACdhB,EAAM,QACP+B,EAAU,2BACH/B,GADE,kBAEJ,SAAU,WAGvB,cAACE,EAAA,EAAKK,QAAQU,SAAd,CAAuBT,KAAK,UAA5B,SAAuCR,EAAO8C,YAElD,eAAC5C,EAAA,EAAKG,MAAN,CAAYqE,UAAU,OAAO3K,UAAU,OAAvC,UACI,cAACmG,EAAA,EAAKI,MAAN,UAAalH,EAAE,UACf,cAAC8G,EAAA,EAAKK,QAAN,CAAcoE,GAAG,QAAQ3C,IAAKA,EAAKxB,KAAK,OAAOI,YAAaZ,EAAOsC,KAAMzB,SAAU,SAAAC,GAC/EmC,EAAiBnC,GACZd,EAAM,MACP+B,EAAU,2BACH/B,GADE,kBAEJ,OAAQ,WAIrB,cAACE,EAAA,EAAKK,QAAQU,SAAd,CAAuBT,KAAK,UAA5B,SAAuCR,EAAOsC,UAEjDqE,GACD,sBAAK5M,UAAU,YAAYmH,MAAO,CAACC,QAAS,OAAQC,eAAgB,iBAApE,UACI,wBAAQrH,UAAU,eAAekB,QAAS,SAAC6F,GAAD,OAAKwZ,EAASxZ,IAAxD,SAA6D1H,EAAE,UAAUqhB,gBACzE,wBAAQ1gB,UAAU,YAAYkB,QAAS,SAAA6F,GAAC,OAAIyZ,EAAkBzZ,IAA9D,SAAmE1H,EAAE,UAAUqhB,sBAG5E,SC7DZC,GA7FW,SAAC,GAAS,IAARthB,EAAO,EAAPA,EAClBuO,EAAY,CAAC,EAAG,EAAG,IACzB,EAAgC3K,mBAAS,IAAzC,mBAAOyW,EAAP,KAAiBiC,EAAjB,KACA,EAA8C1Y,wBAASG,GAAvD,mBAAO6Z,EAAP,KAAwBC,EAAxB,KAEA,EAAwBja,mBAAS,GAAjC,mBAAOoL,EAAP,KAAaC,EAAb,KACA,EAA0BrL,mBAAS,GAAnC,mBAAOsL,EAAP,KAAcC,EAAd,KACA,EAAgCvL,mBAAS2K,EAAU,IAAnD,mBAAOa,EAAP,KAAiBC,EAAjB,KAEMG,EAAmB,SAACR,EAAMI,GAC5B,IAAIK,EAAS,GAQb,OANIT,IACAS,EAAM,KAAWT,EAAO,GAExBI,IACAK,EAAM,KAAWL,GAEdK,GAGX5K,qBAAU,WACN,IAAM2Z,EAAW,uCAAG,4BAAAzZ,EAAA,sEACO0Z,IADP,OACVpE,EADU,OAEhBiC,EAAYjC,EAASA,UACrBlL,EAASkL,EAASlK,YAHF,2CAAH,qDAKjBqO,MACD,CAACxP,EAAMI,EAAUwO,IAEpB/Y,qBAAU,gBACiBd,IAApB6Z,GACCtB,EAAYjC,EAAS9J,OAAOgR,MAEjC,CAAC3D,IAGJ,IAAMa,EAAa,uCAAG,gCAAA1Z,EAAA,yDAGE,QAFd0K,EAASD,EAAiBR,EAAMI,IAE3BJ,MAAiC,OAAhBS,EAAOvP,KAHjB,gCAIFiF,MAAM,GAAD,OAAIlD,EAAJ,+CAAkDwN,EAAOT,KAAzD,iBAAsES,EAAOvP,OAJhF,OAIdkF,EAJc,iCAKS,OAAhBqK,EAAOT,MAAiC,OAAhBS,EAAOvP,KALxB,kCAMFiF,MAAM,GAAD,OAAIlD,EAAJ,+CAAkDwN,EAAOT,OAN5D,QAMd5J,EANc,kCAOS,OAAhBqK,EAAOT,MAAiC,OAAhBS,EAAOvP,KAPxB,kCAQFiF,MAAM,GAAD,OAAIlD,EAAJ,+CAAkDwN,EAAOvP,OAR5D,QAQdkF,EARc,gDAUFD,MAAM,GAAD,OAAIlD,EAAJ,mCAVH,QAUdmD,EAVc,gCAaCA,EAAIC,OAbL,eAaZxB,EAbY,yBAeXA,GAfW,4CAAH,qDAkBnB,SAAS0d,EAAerI,GACpB,GAAGA,EAAQM,gBAAkBoE,EAAgBpE,eAAiBN,EAAQO,YAAcmE,EAAgBnE,UAChG,OAAOP,EAaf,OACI,sBAAKvY,UAAU,YAAf,UACI,qBAAKA,UAAU,aAAf,SACI,6BAAKX,EAAE,yBAEX,sBAAKW,UAAU,cAAf,UACI,8BAAIX,EAAE,kBAAN,UACA,wBAAQyH,SAZS,SAACqJ,GAC1BzB,EAAYyB,EAAMnJ,OAAOC,OACzBqH,EAAQ,IAUwCrH,MAAOwH,EAA/C,SACKb,EAAU5C,KAAI,SAACzL,GAAD,OACX,wBAAmB0H,MAAO1H,EAA1B,SACKA,GADQA,WAMxBma,EAAS1O,KAAI,SAAAyN,GAAO,OACjB,cAAC,GAAD,CAAeF,QAASE,EAASyE,mBAAoBA,EAAoB7d,EAAGA,OAEhF,cAAC+Q,EAAA,EAAD,CAAYpQ,UAAU,OAAOuO,MAAOA,EAAOF,KAAMA,EAAMgC,aAAc,EAAGC,cAAe,EAAG1O,MAAM,UAAUkF,SA3BzF,SAACqJ,EAAOlJ,GAC7BqH,EAAQrH,U,SCnED,OAA0B,uC,UC4F1B4Z,OA/Df,WACI,MAA4B5d,oBAAS,GAArC,mBAAO6d,EAAP,KACA,GADA,KACsC7d,oBAAS,IAA/C,mBAAO8d,EAAP,KAAoBC,EAApB,KAEA,EAAkBC,eAAX5hB,EAAP,EAAOA,EAAG6hB,EAAV,EAAUA,KAEJ9hB,EAAiB,SAACyR,GACpBqQ,EAAK9hB,eAAeyR,IAGlBiD,EAAc,WAChBkN,GAAgBD,IAGtB,OACI,eAAC,iBAAD,WACKA,GACG,gCACI,wBAAQ7f,QAAS,kBAAI4S,KAArB,qCACCgN,GACD,cAAC,EAAD,CAAY1hB,eAAgBA,EAAgBC,EAAGA,IAC/C,qBAAKW,UAAU,YAAf,SACI,qBAAKA,UAAU,UAAUmH,OAAgB,IAAT2Z,EAAiB,CAAChW,MAAO,OAAQqW,gBAAe,cAAUC,GAAV,MAA0B,CAACtW,MAAO,MAAOqW,gBAAiB,MAA1I,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOrgB,OAAK,EAACugB,KAAK,cAAcC,UAAW,kBAAM,cAAC,EAAD,CAAajiB,EAAGA,OACjE,cAAC,IAAD,CAAOyB,OAAK,EAACugB,KAAK,cAAeC,UAAW,kBAAM,cAAC,EAAD,CAAejiB,EAAGA,OACpE,cAAC,IAAD,CAAOyB,OAAK,EAACugB,KAAK,UAAUC,UAAW,kBAAM,cAAC,EAAD,CAAiBjiB,EAAGA,OACjE,cAAC,IAAD,CAAOyB,OAAK,EAACugB,KAAK,eAAeC,UAAW,kBAAM,cAAC,EAAD,CAAgBjiB,EAAGA,OACrE,cAAC,IAAD,CAAOyB,OAAK,EAACugB,KAAK,eAAeC,UAAW,kBAAM,cAAC,EAAD,CAAcjiB,EAAGA,OACnE,cAAC,IAAD,CAAOyB,OAAK,EAACugB,KAAK,UAAUC,UAAW,kBAAM,cAAC,GAAD,CAAcjiB,EAAGA,OAC9D,cAAC,IAAD,CAAOyB,OAAK,EAACugB,KAAK,WAAWC,UAAW,kBAAM,cAAC,GAAD,CAAajiB,EAAGA,OAC9D,cAAC,IAAD,CAAOyB,OAAK,EAACugB,KAAK,WAAWC,UAAW,kBAAM,cAAC,GAAD,CAAkBjiB,EAAGA,OACnE,cAAC,IAAD,CAAOyB,OAAK,EAACugB,KAAK,aAAaC,UAAW7G,KAC1C,cAAC,IAAD,CAAO3Z,OAAK,EAACugB,KAAK,eAAeC,UAAWrG,YAIxD,cAAC,EAAD,CAAQ5b,EAAGA,QAGjB0hB,GACE,gCACI,wBAAQ7f,QAAS,kBAAI4S,KAArB,sCACA,cAAC,GAAD,CAAkB1U,eAAgBA,EAAgBC,EAAGA,IACrD,qBAAKW,UAAU,YAAf,SACI,qBAAKA,UAAU,UAAf,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOc,OAAK,EAACugB,KAAK,gBAAgBC,UAAW,kBAAM,cAAC,GAAD,CAAsBjiB,EAAGA,OAC5E,cAAC,IAAD,CAAOyB,OAAK,EAACugB,KAAK,4BAA4BC,UAAW,kBAAM,cAAC,GAAD,CAAoBjiB,EAAGA,OACtF,cAAC,IAAD,CAAOyB,OAAK,EAACugB,KAAK,2CAA2CC,UAAW,kBAAM,cAAC,GAAD,CAAmBjiB,EAAGA,OACpG,cAAC,IAAD,CAAOyB,OAAK,EAACugB,KAAK,sCAAsCC,UAAW,kBAAM,cAAC,GAAD,CAAajiB,EAAGA,OACzF,cAAC,IAAD,CAAOyB,OAAK,EAACugB,KAAK,kCAAkCC,UAAW,kBAAM,cAAC,GAAD,CAAYjiB,EAAGA,OACpF,cAAC,IAAD,CAAOyB,OAAK,EAACugB,KAAK,aAAaC,UAAW,kBAAM,cAAC,GAAD,CAAmBjiB,EAAGA,cAIlF,cAAC,EAAD,CAAQA,EAAGA,W,wDChF7B6hB,KAAKK,IAAIC,MAASD,IAAIE,MAAkBF,IAAIG,MAAkBC,KAAK,CAC/DC,YAAa,KACbC,OAAO,EACPC,UAAW,CACPC,MAAO,CAAC,cAAe,UACvBC,MAAO,CAAC,WAEZC,cAAe,CACXC,aAAa,KAINhB,GAAf,ECTAiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,WAAD,CAAUC,SAAU,6CAApB,SACI,cAAC,GAAD,QAGNnX,SAASmH,eAAe,W","file":"static/js/main.e220bede.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.cdf2223c.png\";","import React from \"react\";\r\nimport logo from '../../logo.png';\r\nimport {Navbar, Nav, NavDropdown, Container, ListGroup} from \"react-bootstrap\";\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\nimport {BsPerson} from 'react-icons/bs'\r\nimport {useLocation} from \"react-router-dom\";\r\n\r\nfunction Navigation({changeLanguage, t}){\r\n    const profileTitle = (<BsPerson size={46}/>);\r\n    const {pathname} = useLocation()\r\n    return(\r\n            <Navbar bg=\"light\" variant=\"light\" expand=\"lg\" collapseOnSelect=\"true\" sticky=\"top\" className=\"navContainer\">\r\n                <Container fluid>\r\n                    <Navbar.Brand className=\"navbar-brand\"><img alt=\"Portal pacjenta\" src={logo}/></Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\r\n                    <Navbar.Collapse id=\"navbarToggleExternalContent\" className=\"navCollapse\">\r\n                        <Nav className=\"navNav\" key={pathname}>\r\n                                <LinkContainer to=\"/wizyty\" activeHref=\"active\">\r\n                                    <Nav.Link exact className=\"navItemLink\" >{t(\"appointments\")}</Nav.Link>\r\n                                </LinkContainer>\r\n                                <LinkContainer to=\"/skierowania\" activeHref=\"active\">\r\n                                    <Nav.Link exact className=\"navItemLink\" >{t(\"referrals\")}</Nav.Link>\r\n                                </LinkContainer>\r\n                                <LinkContainer to=\"/grafik\" activeHref=\"active\">\r\n                                    <Nav.Link exact className=\"navItemLink\" >{t(\"schedules\")}</Nav.Link>\r\n                                </LinkContainer>\r\n                                <LinkContainer to=\"/badania\" activeHref=\"active\">\r\n                                    <Nav.Link exact className=\"navItemLink\" >{t(\"checkups\")}</Nav.Link>\r\n                                </LinkContainer>\r\n                                <LinkContainer to=\"/recepty\" activeHref=\"active\">\r\n                                    <Nav.Link exact className=\"navItemLink\" >{t(\"prescriptions\")}</Nav.Link>\r\n                                </LinkContainer>\r\n                        </Nav>\r\n                        <NavDropdown className=\"navItemLanguages\" title={profileTitle} id=\"basic-nav-dropdown\">\r\n                            <LinkContainer to=\"/moje-konto\" activeHref=\"active\">\r\n                                <Nav.Link exact className=\"navItemLink2 nav-link\">{t(\"myAccount\")}</Nav.Link>\r\n                            </LinkContainer>\r\n                            <LinkContainer to=\"/moje-pliki\" activeHref=\"active\">\r\n                                <Nav.Link exact className=\"navItemLink2\">{t(\"myFiles\")}</Nav.Link>\r\n                            </LinkContainer>\r\n\r\n                            <NavDropdown title={t(\"language\")} id=\"basic-nav-dropdown\">\r\n                                <NavDropdown.Item onClick={() => {changeLanguage('en')}}>English</NavDropdown.Item>\r\n                                <NavDropdown.Item onClick={() => {changeLanguage('pl')}}>Polski</NavDropdown.Item>\r\n                            </NavDropdown>\r\n                            <NavDropdown.Divider />\r\n                            <NavDropdown.Item href=\"#wyloguj\">{t(\"logout\")}</NavDropdown.Item>\r\n                        </NavDropdown>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n    )\r\n}\r\n\r\nexport default Navigation;","import React from \"react\";\r\n\r\nfunction Footer({t}){\r\n    return(\r\n        <footer>\r\n            {t(\"footer\")}\r\n        </footer>\r\n    )\r\n}\r\nexport default Footer;","export const baseUrl = process.env.NODE_ENV === 'development' ? 'http://localhost:8080' : 'https://medical-center.herokuapp.com'","import React, {useState, useEffect} from \"react\";\r\nimport {Col, Row} from \"react-bootstrap\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport {Formik} from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport {baseUrl} from \"../../config/config\";\r\n\r\nconst  today = new Date();\r\n\r\nconst PatientData = ({t}) => {\r\n\r\n    const schema = yup.object().shape({\r\n        firstName: yup.string().min(2, t(\"firstNameMinCharacter\")).max(50, t(\"firstNameMaxCharacter\")).required(t(\"required\")),\r\n        lastName: yup.string().min(2, t(\"lastNameMinCharacter\")).max(50, t(\"lastNameMaxCharacter\")).required(t(\"required\")),\r\n        pesel: yup.string().min(11, t(\"peselCharacterError\")).max(11, t(\"peselCharacterError\"))\r\n            .test('test-name', t(\"invalidPeselError\"),\r\n                function validatePesel(pesel) {\r\n                    let reg = /^[0-9]{11}$/;\r\n                    if (reg.test(pesel) === false)\r\n                        return false;\r\n                    else {\r\n                        let digits = (\"\" + pesel).split(\"\");\r\n                        if ((parseInt(pesel.substring(4, 6)) > 31) || (parseInt(pesel.substring(2, 4)) > 12))\r\n                            return false;\r\n\r\n                        let checksum = (1 * parseInt(digits[0]) + 3 * parseInt(digits[1]) + 7 * parseInt(digits[2]) + 9 * parseInt(digits[3]) + 1 * parseInt(digits[4]) + 3 * parseInt(digits[5]) + 7 * parseInt(digits[6]) + 9 * parseInt(digits[7]) + 1 * parseInt(digits[8]) + 3 * parseInt(digits[9])) % 10;\r\n                        if (checksum === 0)\r\n                            checksum = 10;\r\n                        checksum = 10 - checksum;\r\n\r\n                        return (parseInt(digits[10]) === checksum);\r\n                    }\r\n                }).required(t(\"required\")),\r\n        birthDate: yup.date().max(today, t(\"dateFromFuture\")).required(t(\"required\")),\r\n        phoneNumber: yup.string().min(9, t(\"phoneNumberError\")).required(t(\"required\")),\r\n        email: yup.string().email(t(\"emailError\")).required(t(\"required\")),\r\n        street: yup.string().min(2).required(t(\"required\")),\r\n        streetNumber: yup.string().required(t(\"required\")),\r\n        city: yup.string().required(t(\"required\")),\r\n        postCode: yup.string().required(t(\"required\")),\r\n        country: yup.string().required(t(\"required\"))\r\n    });\r\n\r\n    const [data, setPatient] = useState([]);\r\n    const [firstName, setFirstName] = useState(undefined);\r\n    const [lastName, setLastName] = useState(undefined);\r\n    const [pesel, setPesel] = useState(undefined);\r\n    const [birthDate, setBirthDate] = useState(undefined);\r\n    const [phoneNumber, setPhone] = useState(undefined);\r\n    const [email, setEmail] = useState(undefined);\r\n    const [patientsFiles, setPatientFiles] = useState(undefined);\r\n\r\n    const [street, setStreet] = useState(undefined);\r\n    const [streetNumber, setStreetNumber] = useState(undefined);\r\n    const [city, setCity] = useState(undefined);\r\n    const [postCode, setPostCode] = useState(undefined);\r\n    const [country, setCountry] = useState(undefined);\r\n\r\n\r\n    useEffect(() => {\r\n        const getPatient = async () =>{\r\n            const patient = await fetchPatient()\r\n            setPatient(patient);\r\n        }\r\n\r\n        getPatient()\r\n    }, [])\r\n\r\n    useEffect(()=>{\r\n        if(data !== undefined){\r\n            setFirstName(data.firstName);\r\n            setLastName(data.lastName);\r\n            setPesel(data.pesel);\r\n            setBirthDate(data.birthDate);\r\n            setPhone(data.phoneNumber);\r\n            setEmail(data.email);\r\n            setPatientFiles(data.patientsFiles);\r\n            data.address ? setStreet(data.address.street) : setStreet(undefined);\r\n            data.address ? setStreetNumber(data.address.streetNumber) : setStreetNumber(undefined);\r\n            data.address ? setCity(data.address.city) : setCity(undefined);\r\n            data.address ? setPostCode(data.address.postCode) : setPostCode(undefined);\r\n            data.address ? setCountry(data.address.country) : setCountry(undefined);\r\n        }\r\n    },[data])\r\n\r\n    const fetchPatient = async () => {\r\n        const res = await fetch(`${baseUrl}/patients/1`)\r\n        const data = await res.json()\r\n\r\n        return data\r\n    }\r\n\r\n    function handleSubmit(){\r\n        const newObj = {\r\n            \"id\": 1,\r\n            address: {\r\n                street,\r\n                streetNumber,\r\n                postCode,\r\n                city,\r\n                country\r\n            },\r\n            phoneNumber,\r\n            firstName,\r\n            lastName,\r\n            email,\r\n            birthDate,\r\n            pesel,\r\n            patientsFiles,\r\n        };\r\n\r\n        fetch(`${baseUrl}/patients`,{\r\n            method: 'PUT',\r\n            headers: {'Access-Control-Allow-Origin': `${baseUrl}`,\r\n                'Content-Type': 'application/json;charset=UTF-8'},\r\n            body: JSON.stringify(newObj)\r\n        }).then((res)=>res.json())\r\n            .catch((err)=>console.log(err));\r\n    }\r\n\r\n    if(!data) {\r\n        return null;\r\n    }else{\r\n        return(\r\n            <div className=\"itemsList\">\r\n                <div className=\"listHeader\">\r\n                    <h2>{t('myData')}</h2>\r\n                </div>\r\n                <Formik validationSchema={schema}\r\n                        enableReinitialize={true}\r\n                        onSubmit={handleSubmit}\r\n                        initialErrors={{}}\r\n                        validateOnChange={true}\r\n                        validateOnMount={true}\r\n                        initialValues={{\r\n                            firstName : firstName,\r\n                            lastName : lastName,\r\n                            pesel : pesel,\r\n                            birthDate : birthDate,\r\n                            phoneNumber : phoneNumber,\r\n                            email : email,\r\n                            street : street,\r\n                            streetNumber : streetNumber,\r\n                            city: city,\r\n                            postCode : postCode,\r\n                            country : country\r\n                        }} >\r\n                    {({\r\n                          handleChange,\r\n                          handleSubmit,\r\n                          values,\r\n                          touched,\r\n                          isValid,\r\n                          errors\r\n                      })=>(\r\n                        <Form className=\"newAppointmentForm\" onSubmit={handleSubmit}>\r\n                            <Row className=\"align-items-center mb-3\">\r\n                                <Col>\r\n                                    <Form.Group>\r\n                                        <Form.Label>{t(\"firstName\")}</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"firstName\" placeholder={t(\"firstName\")} size=\"lg\" defaultValue={values.firstName} isInvalid={!!errors.firstName} isValid={touched.firstName && !errors.firstName} onChange={(e)=>setFirstName(e.target.value)}/>\r\n                                        <Form.Control.Feedback type=\"invalid\">{errors.firstName}</Form.Control.Feedback>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Form.Group>\r\n                                        <Form.Label>{t(\"lastName\")}</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"lastName\" placeholder={t(\"lastName\")} size=\"lg\"  defaultValue={values.lastName} isInvalid={!!errors.lastName} isValid={touched.lastName && !errors.lastName} onChange={(e)=>setLastName(e.target.value)}/>\r\n                                        <Form.Control.Feedback type=\"invalid\">{errors.lastName}</Form.Control.Feedback>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"align-items-center mb-3\">\r\n                                <Col>\r\n                                    <Form.Group>\r\n                                        <Form.Label>PESEL:</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"pesel\" placeholder=\"PESEL\" size=\"lg\" defaultValue={values.pesel} isInvalid={!!errors.pesel} isValid={touched.pesel && !errors.pesel} onChange={(e)=>setPesel(e.target.value)}/>\r\n                                        <Form.Control.Feedback type=\"invalid\">{errors.pesel}</Form.Control.Feedback>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Form.Group>\r\n                                        <Form.Label>{t(\"birthDate\")}</Form.Label>\r\n                                        <Form.Control type=\"date\" name=\"birthDate\" placeholder={t(\"birthDate\")} size=\"lg\" defaultValue={values.birthDate} isInvalid={!!errors.birthDate} isValid={touched.birthDate && !errors.birthDate} onChange={(e)=>setBirthDate(e.target.value)}/>\r\n                                        <Form.Control.Feedback type=\"invalid\">{errors.birthDate}</Form.Control.Feedback>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"align-items-center mb-3\">\r\n                                <Col>\r\n                                    <Form.Group>\r\n                                        <Form.Label>{t(\"phoneNumber\")}</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"phoneNumber\" placeholder={t(\"phoneNumber\")} size=\"lg\" defaultValue={values.phoneNumber} isInvalid={!!errors.phoneNumber} isValid={touched.phoneNumber && !errors.phoneNumber} onChange={(e)=>setPhone(e.target.value)}/>\r\n                                        <Form.Control.Feedback type=\"invalid\">{errors.phoneNumber}</Form.Control.Feedback>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Form.Group>\r\n                                        <Form.Label>Email:</Form.Label>\r\n                                        <Form.Control type=\"email\" name=\"email\" placeholder=\"Email\" size=\"lg\" defaultValue={values.email} isInvalid={!!errors.email} isValid={touched.email && !errors.email} onChange={(e)=>setEmail(e.target.value)}/>\r\n                                        <Form.Control.Feedback type=\"invalid\">{errors.email}</Form.Control.Feedback>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                            </Row>\r\n                            <br/>\r\n                            <Row className=\"align-items-center mb-3\">\r\n                                <Col>\r\n                                    <Form.Group>\r\n                                        <Form.Label>{t(\"street\")}</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"street\" placeholder={t(\"street\")} size=\"lg\" defaultValue={values.street} isInvalid={!!errors.street} isValid={touched.street && !errors.street} onChange={(e)=>setStreet(e.target.value)}/>\r\n                                        <Form.Control.Feedback type=\"invalid\">{errors.street}</Form.Control.Feedback>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Form.Group>\r\n                                        <Form.Label>{t(\"streetNumber\")}</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"streetNumber\" placeholder={t(\"streetNumber\")} size=\"lg\" defaultValue={values.streetNumber} isInvalid={!!errors.streetNumber} isValid={touched.streetNumber && !errors.streetNumber} onChange={(e)=>setStreetNumber(e.target.value)}/>\r\n                                        <Form.Control.Feedback type=\"invalid\">{errors.streetNumber}</Form.Control.Feedback>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"align-items-center mb-3\">\r\n                                <Col>\r\n                                    <Form.Group>\r\n                                        <Form.Label>{t(\"city\")}</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"city\" placeholder={t(\"city\")} size=\"lg\" defaultValue={values.city} isInvalid={!!errors.city} isValid={touched.city && !errors.city} onChange={(e)=>setCity(e.target.value)}/>\r\n                                        <Form.Control.Feedback type=\"invalid\">{errors.city}</Form.Control.Feedback>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Form.Group>\r\n                                        <Form.Label>{t(\"postCode\")}</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"postCode\" placeholder={t(\"postCode\")} size=\"lg\" defaultValue={values.postCode} isInvalid={!!errors.postCode} isValid={touched.postCode && !errors.postCode} onChange={(e)=>setPostCode(e.target.value)}/>\r\n                                        <Form.Control.Feedback type=\"invalid\">{errors.postCode}</Form.Control.Feedback>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"align-items-center mb-3\">\r\n                                <Col>\r\n                                    <Form.Group>\r\n                                        <Form.Label>{t(\"country\")}</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"country\" placeholder={t(\"country\")} size=\"lg\" defaultValue={values.country} isInvalid={!!errors.country} isValid={touched.country && !errors.country} onChange={(e)=>setCountry(e.target.value)}/>\r\n                                        <Form.Control.Feedback type=\"invalid\">{errors.country}</Form.Control.Feedback>\r\n                                    </Form.Group>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Form.Group/>\r\n                                </Col>\r\n                            </Row>\r\n                            <div style={{display:\"flex\", justifyContent: 'center'}}>\r\n                                <Button variant=\"primary\" size=\"lg\" type=\"submit\">{t(\"edit\")}</Button>\r\n                            </div>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PatientData;","import React, {useState, useEffect, useRef} from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport {baseUrl} from \"../../config/config\";\r\n\r\n\r\nfunction UploadNewFile({t}) {\r\n    const [files, setFiles] = useState([]);\r\n    const [selectedFile, setSelectedFile] = useState(undefined);\r\n    const [deletedFile, setDeletedFile] = useState(undefined);\r\n    const [fileDescription, setFileDescription] = useState(undefined);\r\n    const [errors, setErrors] = useState({});\r\n    const ref = useRef();\r\n\r\n    const reset = () =>{\r\n        ref.current.value = \"\";\r\n    };\r\n\r\n    useEffect(()=>{\r\n        const getPatientFiles = async ()=>{\r\n            if(selectedFile === undefined){\r\n                const patientFiles = await fetchPatientFiles()\r\n                setFiles(patientFiles);\r\n            }\r\n        }\r\n        getPatientFiles()\r\n\r\n    },[selectedFile])\r\n\r\n    useEffect(()=>{\r\n        const getPatientFiles = async () =>{\r\n            if(deletedFile !== undefined){\r\n                const patientFiles = await fetchPatientFiles()\r\n                setFiles(patientFiles);\r\n                setDeletedFile(undefined);\r\n            }\r\n        }\r\n        getPatientFiles()\r\n    },[deletedFile])\r\n\r\n    const fetchPatientFiles = async ()=>{\r\n        const res = await fetch(`${baseUrl}/patients/1/files`)\r\n        const data = await res.json()\r\n\r\n        return data;\r\n    }\r\n\r\n    const convertToBase64 = (file) => {\r\n        return new Promise((resolve, reject) => {\r\n            const fileReader = new FileReader();\r\n            fileReader.readAsDataURL(file);\r\n            fileReader.onload = () => {\r\n                resolve(fileReader.result);\r\n            };\r\n            fileReader.onerror = (error) => {\r\n                reject(error);\r\n            };\r\n        });\r\n    };\r\n\r\n    const handleFileUpload = async (e) =>{\r\n        const file = e.target.files[0];\r\n        const base64 = await convertToBase64(file);\r\n        let data = base64.split('base64,')[1];\r\n        let binaryData = atob(data);\r\n\r\n        let byteNumbers = new Array(binaryData.length);\r\n        for(let i = 0; i < binaryData.length; i++){\r\n            byteNumbers[i] = binaryData.charCodeAt(i);\r\n        }\r\n        let test = new Uint8Array(byteNumbers);\r\n        let array = Array.from(test);\r\n\r\n        let today = new Date();\r\n        let date = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();\r\n\r\n        let fileToUpload = {\r\n            \"upload_date\" : date,\r\n            \"file\" : array,\r\n            \"type\" : e.target.files[0].type,\r\n            \"name\" : e.target.files[0].name,\r\n        }\r\n        setSelectedFile(fileToUpload);\r\n    }\r\n\r\n     const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n\r\n        const errors = findFormErrors();\r\n\r\n        if(Object.keys(errors).length > 0){\r\n            setErrors(errors);\r\n        }else{\r\n            if(selectedFile !== undefined && fileDescription !== undefined){\r\n                selectedFile[\"description\"] = fileDescription;\r\n\r\n                fetch(`${baseUrl}/patients/1/files`,{\r\n                    method : 'POST',\r\n                    headers :{\r\n                        'Content-Type': 'application/json',\r\n                        'Access-Control-Allow-Origin': `${baseUrl}`\r\n                    },\r\n                    body: JSON.stringify(selectedFile)\r\n                }).then(()=>{\r\n                    setSelectedFile(undefined)\r\n                    setFileDescription('');\r\n                    reset();\r\n                })\r\n                    .catch(err=>console.log(err));\r\n            }\r\n        }\r\n     }\r\n\r\n     const handleFileDownload = (e, file) => {\r\n         e.preventDefault();\r\n         fetch(`${baseUrl}/patients/1/files/${file.id}`)\r\n             .then(res => res.json())\r\n             .then(res => {\r\n                 let a = window.document.createElement('a');\r\n                 let byteArr = new Uint8Array(res.file);\r\n                 a.href = window.URL.createObjectURL(new Blob([byteArr], {type: file.type}))\r\n                 a.download = res.name;\r\n                 document.body.appendChild(a);\r\n                 a.click();\r\n                 document.body.removeChild(a);\r\n             });\r\n     }\r\n\r\n     const handleFileDeletion = (e, file) =>{\r\n        e.preventDefault();\r\n\r\n        fetch(`${baseUrl}/patients/1/files/${file.id}`,{\r\n            method: 'DELETE',\r\n        }).then(res => res.json())\r\n            .catch(err => console.log(err))\r\n     }\r\n\r\n     const findFormErrors = () =>{\r\n        const newErrors = {};\r\n        const fileTypes = [\"image/png\", \"image/jpeg\", \"application/pdf\", \"application/msword\"]\r\n\r\n        if(selectedFile === undefined){\r\n            newErrors.file = t(\"selectFileError\");\r\n        }\r\n\r\n        if(fileDescription === undefined || fileDescription === ''){\r\n            newErrors.description = t(\"fileDescriptionError\");\r\n        }\r\n\r\n        if(selectedFile !== undefined && !fileTypes.includes(selectedFile.type)){\r\n            newErrors.file = t(\"uploadFileFormatsError\");\r\n        }\r\n\r\n        return newErrors;\r\n     }\r\n\r\n    return(\r\n        <div className=\"itemsList\">\r\n            <div className=\"listHeader\">\r\n                <h2>{t(\"addNewFile\")}</h2>\r\n            </div>\r\n            <Form className=\"newAppointmentForm\" >\r\n                <Form.Group controlId=\"file\" className=\"mb-2\">\r\n                    <Form.Label>{t(\"file\")}</Form.Label>\r\n                    <Form.Control as=\"input\" ref={ref} type=\"file\" isInvalid={!!errors.file} onChange={(e)=>{\r\n                        handleFileUpload(e);\r\n                        if(!!errors['file'])\r\n                            setErrors({\r\n                                ...errors,\r\n                                ['file']:null\r\n                            })\r\n                    }}/>\r\n                    <Form.Control.Feedback type='invalid'>{errors.file}</Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"description\" className=\"mb-2\">\r\n                    <Form.Label>{t(\"fileDescription\")}</Form.Label>\r\n                    <Form.Control as=\"textarea\" value={fileDescription} isInvalid={!!errors.description} onChange={(e)=>{\r\n                        setFileDescription(e.target.value);\r\n                        if(!!errors['description'])\r\n                            setErrors({\r\n                                ...errors,\r\n                                ['description']:null\r\n                            })\r\n                    }}/>\r\n                    <Form.Control.Feedback type='invalid'>{errors.description}</Form.Control.Feedback>\r\n                </Form.Group>\r\n                <div style={{display:\"flex\", justifyContent: 'center'}}>\r\n                    <Button variant='primary' onClick={(e)=>handleSubmit(e)}>{t(\"addFile\")}</Button>\r\n                </div>\r\n            </Form>\r\n            {files.length > 0 ?\r\n                <Table className=\"table table-hover table-bordered fileTable\" style={{width : '80%'}}>\r\n                    <thead style={{backgroundColor : '#e6eeff'}}>\r\n                    <tr>\r\n                        <th>{t(\"fileNameFormat\")}</th>\r\n                        <th>{t(\"fileDescription\")}</th>\r\n                        <th>{t(\"createDate\")}</th>\r\n                        <th>{t(\"action\")}</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {files.map((file)=>\r\n                        <tr key={file.id}>\r\n                            <td>{file.name}</td>\r\n                            <td>{file.description}</td>\r\n                            <td>{file.uploadDate}</td>\r\n                            <td>\r\n                                <ul className=\"listActions\">\r\n                                    <li>\r\n                                        <Button variant='primary' href={`${baseUrl}/patients/1/files/${file.id}`} onClick={e=>handleFileDownload(e, file)}>{t(\"download\")}</Button>\r\n                                    </li>\r\n                                    <li>\r\n                                        <Button variant='danger' href={`${baseUrl}/patients/1/files/${file.id}`} onClick={e=>{\r\n                                            setDeletedFile(file);\r\n                                            handleFileDeletion(e, file)\r\n                                        }}>{t(\"delete\")}</Button>\r\n                                    </li>\r\n                                </ul>\r\n                            </td>\r\n                        </tr>\r\n                    )}\r\n                    </tbody>\r\n                </Table> : t(\"noFiles\")\r\n            }\r\n        </div>\r\n        );\r\n}\r\n\r\nexport default UploadNewFile;","import React from \"react\";\r\nimport {useState, useEffect} from \"react\";\r\nimport {FaRegUser, FaCheck, FaFile} from 'react-icons/fa'\r\nimport {GiMedicines} from 'react-icons/gi'\r\nimport {Button} from \"react-bootstrap\";\r\nimport {baseUrl} from \"../../config/config\";\r\nimport {GiConfirmed} from \"react-icons/all\";\r\n\r\n\r\nconst Appointment = ({appointment, setCancelledAppointment, t}) =>{\r\n    const [app, setAppointment] = useState(appointment);\r\n    const [open, setOpen] = useState(false);\r\n\r\n    useEffect(()=>{\r\n        if(appointment!==undefined){\r\n            setAppointment(appointment);\r\n        }\r\n    }, [appointment])\r\n\r\n    function togglePanel(e){\r\n        e.preventDefault();\r\n        setOpen(!open);\r\n    }\r\n\r\n    function handleConfirmation(e){\r\n        e.preventDefault();\r\n        let confirmedApp = app;\r\n        confirmedApp.state = 'CONFIRMED';\r\n        setAppointment(confirmedApp);\r\n\r\n        fetch(`${baseUrl}/appointments/${appointment.id}/confirm`, {\r\n            method: 'PATCH',\r\n            headers:{\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }).then((res)=>res.json())\r\n            .then(window.alert(t(\"confirmedAppointmentInfo\")))\r\n            .catch((err)=>console.log(err));\r\n    }\r\n\r\n    function handleCancellation(e){\r\n        e.preventDefault();\r\n        let cancelledApp = app;\r\n        cancelledApp.state = 'AVAILABLE';\r\n        setCancelledAppointment(cancelledApp);\r\n\r\n        fetch(`${baseUrl}/appointments/${appointment.id}/cancel`,{\r\n            method: 'PATCH',\r\n            headers:{\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }).then((res)=>res.json())\r\n            .then(window.alert(t(\"canceledAppointmentInfo\")))\r\n            .catch((err)=>console.log(err));\r\n    }\r\n\r\n    var x = (new Date()).getTimezoneOffset() * 60000;\r\n    const formatYmd = date => date.toISOString().slice(0, 10);\r\n        return(\r\n            <div className={app.date ? ((new Date(new Date().setDate(new Date().getDate()+1)) < (new Date(app.date.slice(0,10))))&& app.state === 'RESERVED') ? 'appointmentAndCheckup incomingApp'  :\r\n                (((new Date(new Date().setDate(new Date().getDate()+1))).getDate() === (new Date(app.date.slice(0,10))).getDate()) && app.state === 'RESERVED') ? 'appointmentAndCheckup appToConfirm' :\r\n                ((formatYmd(new Date()) === app.date.slice(0,10)) || (((new Date(new Date().setDate(new Date().getDate()+1))).getDate() === (new Date(app.date.slice(0,10))).getDate() && app.state === 'CONFIRMED')) ? 'appointmentAndCheckup todayApp' :\r\n                'appointmentAndCheckup archivalApp') : ''} onClick={e=>togglePanel(e)}>\r\n                <div className=\"top\">\r\n                    <p className=\"appointmentAndCheckupHeader\">{(app.service ? (app.service.name) : app.serviceName)}</p>\r\n                    <div className=\"data\">\r\n                        <p>{t(\"date\")}</p>\r\n                        <p>{appointment.date ? new Date(new Date(appointment.date)-x).toISOString().slice(0,10) : ''}</p>\r\n                        <p>{appointment.date ? new Date(new Date(appointment.date)-x).toISOString().slice(11,16) : ''}</p>\r\n                        {(appointment.state === 'DONE' && (formatYmd(new Date()) === app.date.slice(0,10))) && <p><GiConfirmed size={42} style={{color: \"#18a74b\"}}/></p>}\r\n                    </div>\r\n                </div>\r\n                {app.date?\r\n                    <div style={{display: 'flex', justifyContent:'space-between'}}>\r\n                        <div>\r\n                            <FaRegUser size={42}/>\r\n                            {t(\"doctorTitle\")}&nbsp;{(app.doctor? (app.doctor.firstName + ' ' + app.doctor.lastName) : '')}\r\n                        </div>\r\n                        <div className=\"appointmentButtons\">\r\n                            {(((new Date(new Date().setDate(new Date().getDate()+1))).getDate() === (new Date(app.date.slice(0,10))).getDate())  && (app.state === 'RESERVED'))&&\r\n                            <Button variant='danger' size=\"lg\" onClick={e=>handleConfirmation(e)}>{t(\"confirmAppointmentMessage\")}</Button>\r\n                            }\r\n\r\n                            {(app.state === 'RESERVED') &&\r\n                            <Button variant='primary' size='lg' onClick={e=>handleCancellation(e)}>{t(\"cancelAppointmentMessage\")}</Button>\r\n                            }\r\n                        </div>\r\n                </div> : ''}\r\n                {(app.state === 'DONE')  ?\r\n                    <>\r\n                    {open ? (\r\n                        <div>\r\n                            <hr/>\r\n                            <div className=\"subsections\">\r\n                                <FaCheck size={42}/>\r\n                                <p className=\"header\">{t(\"recommendations\")}</p>\r\n                            </div>\r\n                            <ol>\r\n                                <li>{app.recommendations ? app.recommendations : t(\"noRecommendations\")}</li>\r\n                            </ol>\r\n                            <hr/>\r\n\r\n                            <div className=\"subsections\">\r\n                                <FaFile size={42}/>\r\n                                <p className=\"header\">{t(\"madeCheckUps\")}</p>\r\n                            </div>\r\n                            <p>{app.diagnosticTests.length > 0 ? (app.diagnosticTests.map((test)=>test.diagnosticTestName)) : t(\"noCheckUps\")}</p>\r\n                            <hr/>\r\n\r\n                            <div className=\"subsections\">\r\n                                <GiMedicines size={42}/>\r\n                                <p className=\"header\">{t(\"eReceipt\")}</p>\r\n                            </div>\r\n                            <p>{app.prescriptions.length > 0 ? t(\"eReceiptIssued\"): t(\"noReceipts\")}</p>\r\n                        </div>) : null}\r\n                    </> : null}\r\n            </div>);\r\n}\r\n\r\nexport default Appointment;","import React, {useState, useEffect} from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Appointment from \"./Appointment\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport \"react-datepicker/dist/react-datepicker.css\"\r\nimport {baseUrl} from \"../../config/config\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\n\r\n\r\nconst AppointmentList = ({t}) =>{\r\n    const pageSizes = [3, 5, 10];\r\n    const formatYmd = date => date.toISOString().slice(0,10);\r\n    const facility = 'FACILITY';\r\n    const phone = 'TELEPHONE';\r\n    const reserved = 'RESERVED';\r\n    const confirmed = 'CONFIRMED';\r\n    const done = 'DONE';\r\n    const [appointments, setAppointments] = useState([]);\r\n    const [appDate, setAppDate] = useState(undefined);\r\n    const [filteredAppointments, setFilteredAppointments] = useState([appointments]);\r\n    const [canceledAppointment, setCancelledAppointment] = useState(undefined);\r\n\r\n    const [page, setPage] = useState(1);\r\n    const [count, setCount] = useState(0);\r\n    const [pageSize, setPageSize] = useState(pageSizes[0]);\r\n    let history = useHistory();\r\n\r\n    const getRequestParams = (page, pageSize) =>{\r\n        let params = {};\r\n\r\n        if(page){\r\n            params[\"page\"] = page - 1;\r\n        }\r\n        if(pageSize){\r\n            params[\"size\"] = pageSize;\r\n        }\r\n        return params;\r\n    }\r\n\r\n    useEffect(() =>{\r\n        const getAppointments = async () =>{\r\n            let todaysVisits = [];\r\n            let visitToConfirm =[];\r\n            let futureVisits = [];\r\n            let pastVisits = [];\r\n            let finalApps=[];\r\n            const appointments = await fetchAppointments()\r\n                .then(res=>{\r\n                    setCount(res.totalPages);\r\n                    res.appointments.map((app) => {\r\n                        if(((new Date(app.date.slice(0,10))) > new Date(new Date().setDate(new Date().getDate()+1)))&&app.state === reserved){\r\n                            futureVisits.push(app)\r\n                        }else if(((new Date(new Date().setDate(new Date().getDate()+1))).getDate() === (new Date(app.date.slice(0,10))).getDate()) && app.state === reserved){\r\n                            visitToConfirm.push(app)\r\n                        }else if(app.state === confirmed){\r\n                            todaysVisits.push(app)\r\n                        }else if(app.state === done){\r\n                            pastVisits.push(app)\r\n                        }\r\n                    })\r\n                }).then(()=>{\r\n                    todaysVisits = todaysVisits.sort((a,b)=>new Date(a.date) - new Date(b.date))\r\n                    finalApps = [...visitToConfirm, ...todaysVisits, ...futureVisits, ...pastVisits];\r\n                })\r\n\r\n            setAppointments(finalApps);\r\n            setFilteredAppointments(finalApps);\r\n        }\r\n\r\n        getAppointments()\r\n    }, [canceledAppointment, page, pageSize])\r\n\r\n\r\n    function checkAppId(app){\r\n        return app.patientId !=null;\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(canceledAppointment!==undefined){\r\n            const result = appointments.filter(checkAppId);\r\n            setAppointments(result);\r\n        }\r\n    },[canceledAppointment])\r\n\r\n\r\n    const fetchAppointments = async () =>{\r\n        const params = getRequestParams(page, pageSize);\r\n        let res;\r\n        if(params.page !== null && params.size !== null){\r\n            res = await fetch(`${baseUrl}/patients/1/appointments?page=${params.page}&size=${params.size}`)\r\n        }else if(params.page !== null && params.size === null){\r\n            res = await fetch(`${baseUrl}/patients/1/appointments?page=${params.page}`)\r\n        }else if(params.page === null && params.size !== null){\r\n            res = await fetch(`${baseUrl}/patients/1/appointments?size=${params.size}`)\r\n        }else{\r\n            res = await fetch(`${baseUrl}/patients/1/appointments`)\r\n        }\r\n\r\n        const data = await res.json();\r\n\r\n        return data;\r\n    }\r\n\r\n    const handlePageChange = (event, value) => {\r\n        setPage(value);\r\n    };\r\n\r\n    const handlePageSizeChange = (event) => {\r\n        setPageSize(event.target.value);\r\n        setPage(1);\r\n    };\r\n\r\n    const handleFacilityFilter = () =>{\r\n        let facilityAppointments = appointments.filter(appointment => (appointment.type === facility));\r\n        setFilteredAppointments(facilityAppointments);\r\n    }\r\n\r\n    const handlePhoneFilter = () =>{\r\n        let phoneAppointments = appointments.filter(appointment => (appointment.type === phone));\r\n        setFilteredAppointments(phoneAppointments);\r\n    }\r\n\r\n    const handleShowAll = () =>{\r\n        setFilteredAppointments(appointments);\r\n    }\r\n\r\n    const handleDateFilter = (e) =>{\r\n        e.preventDefault();\r\n        if(e.target.value){\r\n            let x = (new Date()).getTimezoneOffset() * 60000;\r\n            let appointmentsFilteredByDate = appointments.filter(appointment => (appointment.date.slice(0,10) === e.target.value))\r\n            setFilteredAppointments(appointmentsFilteredByDate);\r\n        }else{\r\n            setAppDate(formatYmd(new Date()));\r\n        }\r\n\r\n    }\r\n\r\n    const handleClick = () =>{\r\n        history.push(\"/nowa-wizyta\");\r\n    }\r\n\r\n    return(\r\n        <div className=\"itemsList\">\r\n            <div className=\"listHeader\">\r\n                <h2>{t(\"yourAppointments\")}</h2>\r\n            </div>\r\n            <div className=\"appointmentListHeader\">\r\n                <div className=\"checkBoxesAndButton\">\r\n                    <div className=\"checkboxes\">\r\n                        <div className=\"checkbox\">\r\n                            <input type=\"radio\" id=\"all\" name=\"box\" value=\"all\" onChange={handleShowAll}/>\r\n                            <label htmlFor=\"all\">{t(\"all\")}</label>\r\n                        </div>\r\n                        <div className=\"checkbox\">\r\n                            <input type=\"radio\" id=\"normal\" name=\"box\" value=\"normal\" onChange={handleFacilityFilter}/>\r\n                            <label htmlFor=\"normal\">{t(\"facilityAppointment\")}</label>\r\n                        </div>\r\n                        <div className=\"checkbox\">\r\n                            <input type=\"radio\" id=\"tele\" name=\"box\" value=\"tele\" onChange={handlePhoneFilter}/>\r\n                            <label htmlFor=\"tele\">{t(\"teleconsultation\")}</label>\r\n                        </div>\r\n                    </div>\r\n                    <div >\r\n                        <button className=\"actionButton\" onClick={handleClick}>{t(\"makeAppointment\")}</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"test\">\r\n                <div className=\"appDate\">\r\n                    <Form>\r\n                        <Form.Group>\r\n                            <Form.Label>{t(\"date\")}</Form.Label>\r\n                            <Form.Control type='date' onChange={(e) => {\r\n                                setAppDate(e.target.value)\r\n                                handleDateFilter(e)\r\n                            }} value={appDate}/>\r\n                        </Form.Group>\r\n                    </Form>\r\n                </div>\r\n                <div className=\"itemsNumber\" style={{height : '4%'}}>\r\n                    <p>{t(\"elementsNumber\")}&nbsp;</p>\r\n                    <select onChange={handlePageSizeChange} value={pageSize}>\r\n                        {pageSizes.map((size) => (\r\n                            <option key={size} value={size}>\r\n                                {size}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"appointmentList\">\r\n                {filteredAppointments.map((appointment)=>(\r\n                    <Appointment key={appointment.id} appointment={appointment} setCancelledAppointment={setCancelledAppointment} t={t}/>\r\n                ))}\r\n            </div>\r\n            <Pagination className=\"my-3\" count={count} page={page} siblingCount={1} boundaryCount={1} shape=\"rounded\" onChange={handlePageChange}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppointmentList;","import React from \"react\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {useState, useEffect} from 'react';\r\nimport {useHistory} from 'react-router';\r\nimport {Col, Row} from \"react-bootstrap\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport {baseUrl} from \"../../config/config\";\r\n\r\n\r\nconst NewAppointmentForm = ({getAppointments, t}) =>{\r\n\r\n    let history = useHistory();\r\n    const formatYmd = date => date.toISOString().slice(0,10);\r\n\r\n    const languages = [\"polski\", \"english\"];\r\n\r\n    const referral = history.location.state;\r\n\r\n    const [appointmentType, setAppointmentType] = useState(undefined);\r\n    const [language, setLanguage] = useState(languages[0]);\r\n    const [service, setService] = useState(undefined);\r\n    const [receivedReferral, setReceivedReferral] = useState(referral ? referral : undefined);\r\n    const [selectedReferral, setSelectedReferral] = useState(receivedReferral ? receivedReferral : undefined);\r\n    const [doctor, setSelectedDoctor] = useState(undefined);\r\n\r\n    const [referrals, setReferrals] = useState([]);\r\n    const [services, setServices] = useState([]);\r\n    const [doctors, setDoctors] = useState([]);\r\n    const [dateFrom, setDateFrom] = useState(formatYmd(new Date()));\r\n    const [dateTo, setDateTo] = useState(formatYmd(new Date(new Date().setDate(new Date().getDate()+14))));\r\n    const [errors, setErrors] = useState({});\r\n\r\n    useEffect(()=>{\r\n        if(appointmentType !== undefined){\r\n            if(appointmentType === 'facility'){\r\n                const getServices = async () =>{\r\n                    const services = await fetchServices(true)\r\n                    setServices(services)\r\n                }\r\n                getServices();\r\n\r\n            }else{\r\n                const getServices = async () =>{\r\n                    const services = await fetchServices(false)\r\n                    setServices(services)\r\n                }\r\n                getServices();\r\n            }\r\n        }\r\n    },[appointmentType])\r\n\r\n    useEffect(()=>{\r\n        if(service !== undefined){\r\n            if(service.doneByMedicalStaff === false){\r\n                const getDoctors = async () =>{\r\n                    const doctors = await fetchDoctors()\r\n                    setDoctors(doctors)\r\n                    const doctorSelect = document.querySelector('#doctorr');\r\n                    doctorSelect.disabled = false;\r\n                }\r\n                getDoctors()\r\n            }else{\r\n                const doctorSelect = document.querySelector('#doctorr');\r\n                doctorSelect.disabled = true;\r\n            }\r\n        }\r\n\r\n    },[service])\r\n\r\n    useEffect(()=>{\r\n        if(receivedReferral !== undefined){\r\n            setSelectedReferral(receivedReferral);\r\n            let element = document.getElementById('selectedReferral');\r\n            element.value = receivedReferral;\r\n            if(receivedReferral.medicalService.facilityService === true){\r\n                setAppointmentType('facility');\r\n                const radioBtnFacility = document.querySelector('#facility');\r\n                radioBtnFacility.checked = true;\r\n            }else{\r\n                setAppointmentType('phone');\r\n                const radioBtnPhone = document.querySelector('#phone');\r\n                radioBtnPhone.checked = true;\r\n            }\r\n            setService(receivedReferral.medicalService);\r\n            const serviceSelect = document.querySelector('#selectService');\r\n            serviceSelect.disabled = true;\r\n        }\r\n\r\n    },[receivedReferral])\r\n\r\n    useEffect(()=>{\r\n        if(selectedReferral !== undefined){\r\n            if(selectedReferral.medicalService.facilityService === true){\r\n                setAppointmentType('facility');\r\n                const radioBtnFacility = document.querySelector('#facility');\r\n                radioBtnFacility.checked = true;\r\n                radioBtnFacility.disabled = true;\r\n                const radioBtnPhone = document.querySelector('#phone');\r\n                radioBtnPhone.disabled = true;\r\n            }else{\r\n                setAppointmentType('phone');\r\n                const radioBtnPhone = document.querySelector('#phone');\r\n                radioBtnPhone.checked = true;\r\n                radioBtnPhone.disabled = true;\r\n                const radioBtnFacility = document.querySelector('#facility');\r\n                radioBtnFacility.disabled = true;\r\n            }\r\n            setService(selectedReferral.medicalService);\r\n            const serviceSelect = document.querySelector('#selectService');\r\n            serviceSelect.disabled = true;\r\n        }\r\n\r\n    }, [selectedReferral])\r\n\r\n    useEffect(()=>{\r\n        const getReferrals = async () =>{\r\n            const formatYmd = date => date.toISOString().slice(0, 10);\r\n            const referrals = await fetchReferrals()\r\n            const availableReferrals = referrals.referrals.filter(ref=>(formatYmd(new Date(ref.expiryDate)) >= formatYmd(new Date())));\r\n            setReferrals(availableReferrals);\r\n        }\r\n        getReferrals()\r\n    }, [])\r\n\r\n\r\n    const fetchReferrals = async () =>{\r\n        const res = await fetch(`${baseUrl}/patients/1/referrals?size=100`);\r\n        const data = await res.json();\r\n\r\n        return data;\r\n    }\r\n\r\n    const fetchDoctors = async () =>{\r\n        let res;\r\n        if(language === 'polski'){\r\n            res = await fetch(`${baseUrl}/doctors/services?language=PL&medicalServiceId=${service.id}`);\r\n        }else{\r\n            res = await fetch(`${baseUrl}/doctors/services?language=EN&medicalServiceId=${service.id}`);\r\n        }\r\n\r\n        const data = await res.json();\r\n\r\n        return data;\r\n    }\r\n\r\n    const fetchServices = async (type) =>{\r\n        let res;\r\n        if(type === true){\r\n            res = await fetch(`${baseUrl}/medicalServices?type=FACILITY`);\r\n        }else{\r\n            res = await fetch(`${baseUrl}/medicalServices?type=TELEPHONE`);\r\n        }\r\n\r\n        const data = await res.json();\r\n\r\n        return data;\r\n    }\r\n\r\n\r\n    const findFormErrors = () =>{\r\n        const newErrors = {};\r\n        if(appointmentType === undefined){\r\n            newErrors.appType = t(\"appointmentTypeError\");\r\n        }\r\n\r\n        if(service === undefined){\r\n            newErrors.serviceMess = t(\"serviceError\");\r\n        }\r\n\r\n        return newErrors;\r\n    }\r\n\r\n    function clearReferralFields(e){\r\n        e.preventDefault();\r\n        setSelectedReferral(undefined);\r\n        setReceivedReferral(undefined);\r\n        setAppointmentType(undefined);\r\n        const radioBtnFacility = document.querySelector('#facility');\r\n        radioBtnFacility.checked = false;\r\n        radioBtnFacility.disabled = false;\r\n        const radioBtnPhone = document.querySelector('#phone');\r\n        radioBtnPhone.checked = false;\r\n        radioBtnPhone.disabled = false;\r\n        setService(undefined);\r\n        const serviceSelect = document.querySelector('#selectService');\r\n        serviceSelect.disabled = false;\r\n        setServices([]);\r\n        setDoctors([]);\r\n    }\r\n\r\n    function clearService(e){\r\n        if(selectedReferral === undefined){\r\n            e.preventDefault();\r\n            setService(undefined);\r\n            setDoctors([]);\r\n        }\r\n    }\r\n\r\n    function handleSubmit(e){\r\n        e.preventDefault();\r\n\r\n        const errors = findFormErrors();\r\n\r\n        if(Object.keys(errors).length > 0){\r\n            setErrors(errors)\r\n        }else{\r\n            if(doctor !== undefined){\r\n                if(selectedReferral !== undefined){\r\n                    getAppointments(appointmentType, language, service, doctor, dateFrom, dateTo, selectedReferral);\r\n                }else{\r\n                    getAppointments(appointmentType, language, service, doctor, dateFrom, dateTo, null);\r\n                }\r\n            }else{\r\n                if(selectedReferral !== undefined){\r\n                    getAppointments(appointmentType, language, service, null,  dateFrom, dateTo, selectedReferral);\r\n                }else{\r\n                    getAppointments(appointmentType, language, service, null,  dateFrom, dateTo, null);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return(\r\n        <Form className=\"newAppointmentForm\">\r\n            <Form.Group className=\"mb-3\">\r\n                <Form.Label >{t(\"appointmentType\")}</Form.Label>\r\n                <Form.Check type=\"radio\" name=\"type\" id=\"facility\" label={t(\"facility\")} onClick={(e)=>{\r\n                    setAppointmentType('facility');\r\n                    if(!!errors['appType'])\r\n                        setErrors({\r\n                            ...errors,\r\n                            ['appType']:null\r\n                        })\r\n                }} isInvalid={!!errors.appType}/>\r\n                <Form.Check type=\"radio\" name=\"type\" id=\"phone\" label={t(\"teleconsultation\")} onClick={(e)=>{\r\n                    setAppointmentType('phone');\r\n                    if(!!errors['appType'])\r\n                        setErrors({\r\n                            ...errors,\r\n                            ['appType']:null\r\n                        })\r\n                }} isInvalid={!!errors.appType}/>\r\n                <Form.Control.Feedback type='invalid'>{errors.appType}</Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Row className=\"align-items-center mb-3\">\r\n                <Col>\r\n                    <Form.Group>\r\n                        <Form.Label>{t(\"language\")}:</Form.Label>\r\n                        <Form.Select id='selectedLanguage'>\r\n                            {languages.map((lang)=>(\r\n                                <option value={lang} onClick={(e)=>setLanguage(lang)}>{lang}</option>\r\n                            ))}\r\n                        </Form.Select>\r\n                    </Form.Group>\r\n                </Col>\r\n                <Col>\r\n                    <Form.Group>\r\n                        <Form.Label>{t(\"referral\")}:</Form.Label>\r\n                        <Form.Select id='selectedReferral' defaultValue={receivedReferral}>\r\n\r\n                            {!receivedReferral &&\r\n                            <>\r\n                                <option onClick={e=>{clearReferralFields(e)}} value=\"0\">{t(\"useReferral\")}</option>\r\n                                {referrals.map((ref) => (\r\n                                    <option value={ref} key={ref.id} onClick={(e)=>{\r\n                                        setSelectedReferral(ref)\r\n                                        setErrors({\r\n                                            ['serviceMess']:null,\r\n                                            ['appType']:null\r\n                                        })\r\n                                    }}>{ref.medicalService ? (t(\"dueTo\") + \" \" + ref.expiryDate + ' - ' + ref.medicalService.name) : ''}</option>\r\n                                ))}\r\n                            </>\r\n                            }\r\n\r\n                            {receivedReferral &&\r\n                                <>\r\n                                    <option >{(t(\"dueTo\") + \" \" + receivedReferral.expiryDate + ' - ' + receivedReferral.medicalService.name)}</option>\r\n                                    <option onClick={e=>{clearReferralFields(e)}} value=\"0\">{t(\"useReferral\")}</option>\r\n\r\n                                    {referrals.filter(ref=>ref.id!==receivedReferral.id).map((ref) => (\r\n                                        <option value={ref} key={ref.id} onClick={(e)=>{\r\n                                            setSelectedReferral(ref)\r\n                                            setErrors({\r\n                                                ['serviceMess']:null,\r\n                                                ['appType']:null\r\n                                            })\r\n                                        }}>{ref.medicalService ? (t(\"dueTo\") + \" \" + ref.expiryDate + ' - ' + ref.medicalService.name) : ''}</option>\r\n                                    ))}\r\n                                </>\r\n                            }\r\n                        </Form.Select>\r\n                    </Form.Group>\r\n                </Col>\r\n            </Row>\r\n            <Form.Group className=\"mb-3\">\r\n                <Form.Label>{t(\"service\")}</Form.Label>\r\n                <Form.Select id = 'selectService' isInvalid={!!errors.serviceMess}>\r\n                    <option onClick={e=>clearService(e)}>{selectedReferral ? selectedReferral.medicalService.name : t(\"chooseService\")}</option>\r\n                    {services.map((ser)=>(\r\n                        <option value={ser.name} onClick={(e)=>{\r\n                            setService(ser);\r\n                            if(!!errors['serviceMess'])\r\n                                setErrors({\r\n                                    ...errors,\r\n                                    ['serviceMess']:null\r\n                                })\r\n                        }}>{ser.name}</option>\r\n                    ))}\r\n                </Form.Select>\r\n                <Form.Control.Feedback type='invalid'>{errors.serviceMess}</Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\">\r\n                <Form.Label>{t(\"doctor\")}</Form.Label>\r\n                <Form.Select id='doctorr'>\r\n                    <option value=\"0\">{t(\"chooseDoctor\")}</option>\r\n                    {doctors.map((doc) =>(\r\n                        <option value={doc.firstName + ' ' + doc.lastName} onClick={(e)=>setSelectedDoctor(doc)}>{doc.firstName + ' ' + doc.lastName}</option>\r\n                    ))}\r\n                </Form.Select>\r\n            </Form.Group>\r\n            <Row className=\"align-items-center mb-3\">\r\n                <Col>\r\n                    <Form.Group>\r\n                        <Form.Label>{t(\"dateFrom\")}</Form.Label>\r\n                        <Form.Control type='date' placeholder={t(\"dateFrom\")} value={dateFrom} onChange={(e)=>setDateFrom(e.target.value)}/>\r\n                    </Form.Group>\r\n                </Col>\r\n                <Col>\r\n                    <Form.Group>\r\n                        <Form.Label>{t(\"dateTo\")}</Form.Label>\r\n                        <Form.Control type='date' placeholder={t(\"dateTo\")} value={dateTo} onChange={(e)=>setDateTo(e.target.value)}/>\r\n                    </Form.Group>\r\n                </Col>\r\n            </Row>\r\n            <div style={{display:\"flex\", justifyContent: 'center'}}>\r\n                <Button variant='primary' onClick={e=>handleSubmit(e)}>{t(\"searchAppointment\")}</Button>\r\n            </div>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default withRouter(NewAppointmentForm);\r\n","import React, {useState, useEffect} from \"react\";\r\n\r\nconst AvailableAppointment = ({appointment, setOpenModal, setSelectedAppointment, t}) =>{\r\n    const [app, setApp] = useState(appointment);\r\n\r\n    useEffect(()=>{\r\n        if(appointment !== undefined){\r\n            setApp(appointment);\r\n        }\r\n    },[appointment])\r\n\r\n    function handleClick(e){\r\n        e.preventDefault();\r\n        setSelectedAppointment(app);\r\n        setOpenModal(true);\r\n    }\r\n\r\n    var x = (new Date()).getTimezoneOffset() * 60000;\r\n    return(\r\n        <div className='availableAppointment' title={t(\"chooseAppointment\")}>\r\n            <div className=\"availableAppointmentDate\">\r\n                <p>{new Date(new Date(app.date)-x).toISOString().slice(0,10)}</p>\r\n                <p>{new Date(new Date(app.date)-x).toISOString().slice(11,16)}</p>\r\n            </div>\r\n            <div className=\"availableAppointmentDoctor\">\r\n                <p>{appointment.doctor ? t(\"doctorTitle\")+ ' ' + appointment.doctor.firstName + ' '+ appointment.doctor.lastName : t(\"medicalStaff\")}</p>\r\n            </div>\r\n            <div className=\"availableAppointmentBtn\">\r\n                <button className=\"actionButton\" onClick={(e)=>handleClick(e)}>{t(\"reserve\")}</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AvailableAppointment;","import React from 'react';\r\nimport {useState, useEffect} from \"react\";\r\nimport {useHistory} from 'react-router';\r\nimport {baseUrl} from \"../../config/config\";\r\n\r\nconst AppointmentModal = ({selectedAppointment, setOpenModal, selectedReferral, t}) => {\r\n    const history = useHistory();\r\n    const [appointment, setAppointment] = useState(selectedAppointment);\r\n    const [referral, setReferral] = useState(selectedReferral);\r\n\r\n    useEffect(()=>{\r\n        if(selectedAppointment !== undefined){\r\n            setAppointment(selectedAppointment);\r\n\r\n        }\r\n    }, [selectedAppointment])\r\n\r\n    useEffect(()=>{\r\n        if(selectedReferral !== undefined){\r\n            setReferral(selectedReferral);\r\n        }\r\n    },[selectedReferral])\r\n\r\n    var x = (new Date()).getTimezoneOffset() * 60000;\r\n\r\n    function bookAnAppointment(e){\r\n        e.preventDefault();\r\n\r\n        const formatYmd = date => date.toISOString().slice(0, 10);\r\n        let data;\r\n        if(referral !== null){\r\n            data = {\r\n                patientId : 1,\r\n                referralId : referral.id\r\n            }\r\n        }else{\r\n            data = {\r\n                patientId : 1\r\n            }\r\n        }\r\n\r\n        if(formatYmd(new Date()) === new Date(new Date(appointment.date)-x).toISOString().slice(0,10)){\r\n            data = {\r\n                ...data,\r\n                confirmed : true\r\n            };\r\n        }\r\n\r\n        fetch(`${baseUrl}/appointments/${selectedAppointment.id}/reserve`,{\r\n            method: 'PATCH',\r\n            headers:{\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(data),\r\n        }).then((res) => res.json())\r\n            .then(window.alert('Umówiono wizytę'))\r\n            .then(history.push({\r\n                pathname : '/wizyty'\r\n            })).catch((err)=> console.log(err));\r\n    }\r\n\r\n\r\n    const formatYmd = date => date.toISOString().slice(0, 10);\r\n    return (\r\n        <div className=\"modalBackground\">\r\n            <div className=\"modalContainer\">\r\n                <div className=\"titleCloseBtn\">\r\n                    <button onClick={()=>setOpenModal(false)}> X </button>\r\n                </div>\r\n                <div className=\"modalTitle\">\r\n                    <h2>{t(\"confirmAppointment\")}</h2>\r\n                    <hr/>\r\n                </div>\r\n                <div className=\"modalBody\">\r\n                    <div className=\"modalSection\">\r\n                        <p>{t(\"date\")}</p>\r\n                        <p>{new Date(new Date(appointment.date)-x).toISOString().slice(0,10)}</p>\r\n                    </div>\r\n                    <div className=\"modalSection\">\r\n                        <p>{t(\"hour\")}</p>\r\n                        <p>{new Date(new Date(appointment.date)-x).toISOString().slice(11,16)}</p>\r\n                    </div>\r\n                    <div className=\"modalSection\">\r\n                        <p>{t(\"appointmentType\")}</p>\r\n                        <p>{appointment.type === 'FACILITY' ? t(\"facility\") : t(\"teleconsultation\")}</p>\r\n                    </div>\r\n                    <div className=\"modalSection\">\r\n                        <p>{t(\"service\")}</p>\r\n                        <p>{appointment.service.name}</p>\r\n                    </div>\r\n                    {appointment.doctor &&  <div className=\"modalSection\">\r\n                        <p>{t(\"doctor\")}</p>\r\n                        <p>{appointment.doctor.firstName + ' ' + appointment.doctor.lastName}</p>\r\n                    </div>}\r\n                    {referral !== null && <div className=\"modalSection\">\r\n                        <p>{t(\"usedReferral\")}</p>\r\n                        <p>{referral ? 'tak' : 'nie'}</p>\r\n                    </div>}\r\n                    {(new Date(new Date(appointment.date)-x).toISOString().slice(0,10) === (formatYmd(new Date()))) && <div className=\"warning\">\r\n                        <p>{t(\"appointmentAutoConfirm\")}</p>\r\n                    </div>}\r\n                <div className=\"modalFooter\">\r\n                    <button onClick={()=>setOpenModal(false)} className=\"cancelButton\">{t(\"cancel\")}</button>\r\n                    <button onClick={(e)=>bookAnAppointment(e)}>{t(\"confirm\")}</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AppointmentModal;\r\n","import React from \"react\";\r\nimport {useState, useEffect} from \"react\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport \"react-datepicker/dist/react-datepicker.css\"\r\nimport NewAppointmentForm from \"./NewAppointmentForm\";\r\nimport AvailableAppointment from \"./AvailableAppointment\";\r\nimport AppointmentModal from \"./AppointmentModal\";\r\nimport {baseUrl} from \"../../config/config\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\n\r\nconst NewAppointment = ({t}) =>{\r\n    const [appointments, setAppointments] = useState([]);\r\n    const [receivedService, setReceivedService] = useState(undefined);\r\n    const [selectedAppointment, setSelectedAppointment] = useState(undefined);\r\n    const [selectedReferral, setSelectedReferral] = useState(undefined);\r\n    const [openModal, setOpenModal] = useState(false);\r\n    const [dateFrom, setDateFrom] = useState(undefined);\r\n    const [dateTo, setDateTo] = useState(undefined);\r\n    const [doctor, setDoctor] = useState(undefined);\r\n    const [language, setLanguage] = useState(undefined);\r\n\r\n    const pageSizes = [3, 5, 10];\r\n    const [page, setPage] = useState(1);\r\n    const [count, setCount] = useState(0);\r\n    const [pageSize, setPageSize] = useState(pageSizes[0]);\r\n\r\n    const getRequestParams = (page, pageSize) =>{\r\n        let params = {};\r\n\r\n        if(page){\r\n            params[\"page\"] = page - 1;\r\n        }\r\n        if(pageSize){\r\n            params[\"size\"] = pageSize;\r\n        }\r\n        return params;\r\n    }\r\n\r\n    function handleAppointmentSearch(appointmentType, language, service, doctor, dateFrom, dateTo, selectedReferral){\r\n        setReceivedService(service);\r\n        setSelectedReferral(selectedReferral);\r\n        setDateFrom(dateFrom);\r\n        setDateTo(dateTo);\r\n        setDoctor(doctor);\r\n        if(language==='polski'){\r\n            setLanguage(\"PL\");\r\n        }else{\r\n            setLanguage(\"EN\");\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(receivedService !== undefined){\r\n            const getAvailableAppointments = async () =>{\r\n                const apps = await fetchAppointments();\r\n                setAppointments(apps.appointments)\r\n                setCount(apps.totalPages);\r\n            }\r\n\r\n            getAvailableAppointments()\r\n        }\r\n    },[receivedService, page, pageSize])\r\n\r\n    useEffect(()=>{\r\n        if(selectedAppointment!==undefined){\r\n            setSelectedAppointment(selectedAppointment)\r\n        }\r\n    }, [selectedAppointment])\r\n\r\n    const fetchAppointments = async ()=>{\r\n        const params = getRequestParams(page, pageSize);\r\n        let time = new Date().toString().slice(16,24);\r\n        let res;\r\n        if(doctor!==null){\r\n            if(params.page !== null && params.size !== null){\r\n                res = await fetch(`${baseUrl}/appointments?medicalServiceId=${receivedService.id}&doctorId=${doctor.id}&dateFrom=${dateFrom}T${time}&dateTo=${dateTo}T23:59:00&language=${language}&page=${params.page}&size=${params.size}`);\r\n            }else if(params.page !== null && params.size === null){\r\n                res = await fetch(`${baseUrl}/appointments?medicalServiceId=${receivedService.id}&doctorId=${doctor.id}&dateFrom=${dateFrom}T${time}&dateTo=${dateTo}T23:59:00&language=${language}&page=${params.page}`);\r\n            }else if(params.page === null && params.size !== null){\r\n                res = await fetch(`${baseUrl}/appointments?medicalServiceId=${receivedService.id}&doctorId=${doctor.id}&dateFrom=${dateFrom}T${time}&dateTo=${dateTo}T23:59:00&language=${language}&size=${params.size}`);\r\n            }else{\r\n                res = await fetch(`${baseUrl}/appointments?medicalServiceId=${receivedService.id}&doctorId=${doctor.id}&dateFrom=${dateFrom}T${time}&dateTo=${dateTo}T23:59:00&language=${language}`);\r\n            }\r\n        }else{\r\n            if(params.page !== null && params.size !== null){\r\n                res = await fetch(`${baseUrl}/appointments?medicalServiceId=${receivedService.id}&dateFrom=${dateFrom}T${time}&dateTo=${dateTo}T23:59:00&language=${language}&page=${params.page}&size=${params.size}`);\r\n            }else if(params.page !== null && params.size === null){\r\n                res = await fetch(`${baseUrl}/appointments?medicalServiceId=${receivedService.id}&dateFrom=${dateFrom}T${time}&dateTo=${dateTo}T23:59:00&language=${language}&page=${params.page}`);\r\n            }else if(params.page === null && params.size !== null){\r\n                res = await fetch(`${baseUrl}/appointments?medicalServiceId=${receivedService.id}&dateFrom=${dateFrom}T${time}&dateTo=${dateTo}T23:59:00&language=${language}&size=${params.size}`);\r\n            }else{\r\n                res = await fetch(`${baseUrl}/appointments?medicalServiceId=${receivedService.id}&dateFrom=${dateFrom}T${time}&dateTo=${dateTo}T23:59:00&language=${language}`);\r\n            }\r\n        }\r\n        const data = await res.json();\r\n\r\n        return data;\r\n    }\r\n\r\n    const handlePageChange = (event, value) => {\r\n        setPage(value);\r\n    };\r\n\r\n    const handlePageSizeChange = (event) => {\r\n        setPageSize(event.target.value);\r\n        setPage(1);\r\n    };\r\n\r\n    return(\r\n        <div className=\"itemsList\">\r\n            <div className=\"listHeader\">\r\n                <h2>{t(\"newAppointment\")}</h2>\r\n            </div>\r\n                <NewAppointmentForm getAppointments={handleAppointmentSearch} t={t}/>\r\n                <>\r\n                    {appointments.length > 0 &&\r\n                        <>\r\n                            <h3 style={{fontFamily : 'Montserrat, sans-serif'}}>{t(\"availableAppointments\")}</h3>\r\n                            <div className=\"itemsNumber availableAppsPagination\">\r\n                                <p>{t(\"elementsNumber\")}&nbsp;</p>\r\n                                <select onChange={handlePageSizeChange} value={pageSize}>\r\n                                    {pageSizes.map((size) => (\r\n                                        <option key={size} value={size}>\r\n                                            {size}\r\n                                        </option>\r\n                                    ))}\r\n                                </select>\r\n                            </div>\r\n                        </>\r\n\r\n                    }\r\n                    {appointments.length > 0 ?\r\n                        (appointments.map((app)=>(\r\n                            <AvailableAppointment key={app.id} appointment={app} setOpenModal={setOpenModal} setSelectedAppointment={setSelectedAppointment} t={t}/>\r\n                        ))) : (receivedService !== undefined ? t(\"noAppointments\") : '')}\r\n                    {appointments.length > 0 &&\r\n                    <Pagination className=\"my-3\" count={count} page={page} siblingCount={1} boundaryCount={1} shape=\"rounded\" onChange={handlePageChange}/>\r\n                    }\r\n                    {(openModal && selectedAppointment !== undefined) ? <AppointmentModal selectedAppointment={selectedAppointment} setOpenModal={setOpenModal} selectedReferral={selectedReferral} t={t}/> : ''}\r\n                </>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(NewAppointment);","import React from \"react\";\r\nimport {useHistory} from 'react-router';\r\nimport {useState, useEffect} from \"react\";\r\n\r\n\r\nconst Referral = ({referral, setSelectedReferral, t}) =>{\r\n    const history = useHistory();\r\n    const [ref, setRef] = useState(referral);\r\n\r\n    useEffect(()=>{\r\n        if(referral !== undefined){\r\n            setRef(referral);\r\n        }\r\n    },[referral])\r\n\r\n    const handleClick = (e)=>{\r\n        e.preventDefault();\r\n        setSelectedReferral(referral);\r\n\r\n        history.push({\r\n            pathname: '/nowa-wizyta',\r\n            state: ref\r\n        });\r\n    }\r\n\r\n    const formatYmd = date => date.toISOString().slice(0, 10);\r\n\r\nreturn(\r\n    <div className=\"referral\">\r\n        <div className=\"referralDiv1\">\r\n            <p className=\"referralHeader\">{ref.medicalService.name}</p>\r\n        </div>\r\n        <div className=\"referralDiv2\">\r\n            <p>{t(\"issueDate\")}&nbsp;{ref.issueDate}</p>\r\n            <p>{t(\"referralValidUntil\")}&nbsp;{ref.expiryDate}</p>\r\n        </div>\r\n        <hr/>\r\n        <div style={{display: 'flex' ,justifyContent: 'flex-end'}}>\r\n            {formatYmd(new Date(ref.expiryDate))>= formatYmd(new Date()) ?\r\n            <button className=\"actionButton\" onClick={(e) => handleClick(e)}>UMÓW WIZYTĘ</button>\r\n           : <p style={{color : 'red'}}>{t(\"referralInvalid\")}</p> }\r\n        </div>\r\n    </div>\r\n)}\r\n\r\nexport default Referral","import React, {useState, useEffect} from \"react\";\r\nimport Referral from \"./Referral\";\r\nimport {baseUrl} from \"../../config/config\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\n\r\nconst ReferralList = ({t}) =>{\r\n    const pageSizes = [3, 5, 10];\r\n    const [referrals, setReferrals] = useState([]);\r\n    const [selectedReferral, setSelectedReferral] = useState(undefined);\r\n\r\n    const [page, setPage] = useState(1);\r\n    const [count, setCount] = useState(0);\r\n    const [pageSize, setPageSize] = useState(pageSizes[0]);\r\n\r\n    const getRequestParams = (page, pageSize) =>{\r\n        let params = {};\r\n\r\n        if(page){\r\n            params[\"page\"] = page - 1;\r\n        }\r\n        if(pageSize){\r\n            params[\"size\"] = pageSize;\r\n        }\r\n        return params;\r\n    }\r\n\r\n    useEffect(() =>{\r\n        const getReferrals = async () =>{\r\n                const referrals = await fetchReferrals()\r\n                setReferrals(referrals.referrals)\r\n                setCount(referrals.totalPages)\r\n        }\r\n        getReferrals()\r\n    },[page, pageSize])\r\n\r\n    useEffect(()=>{\r\n        if(selectedReferral!==undefined) {\r\n            setReferrals(referrals.filter(filterReferrals));\r\n\r\n        }\r\n    },[selectedReferral])\r\n\r\n\r\n    const fetchReferrals = async() => {\r\n        const params = getRequestParams(page, pageSize);\r\n        let res;\r\n        if(params.page !== null && params.size !== null){\r\n            res = await fetch(`${baseUrl}/patients/1/referrals?page=${params.page}&size=${params.size}`)\r\n        }else if(params.page !== null && params.size === null){\r\n            res = await fetch(`${baseUrl}/patients/1/referrals?page=${params.page}`)\r\n        }else if(params.page === null && params.size !== null){\r\n            res = await fetch(`${baseUrl}/patients/1/referrals?size=${params.size}`)\r\n        }else{\r\n            res = await fetch(`${baseUrl}/patients/1/referrals`)\r\n        }\r\n\r\n        const data = await res.json()\r\n\r\n        return data\r\n    }\r\n\r\n    function filterReferrals(referral){\r\n        if(referral.id !== selectedReferral.id){\r\n            return referral;\r\n        }\r\n    }\r\n\r\n    const handlePageChange = (event, value) => {\r\n        setPage(value);\r\n    };\r\n\r\n    const handlePageSizeChange = (event) => {\r\n        setPageSize(event.target.value);\r\n        setPage(1);\r\n    };\r\n\r\n\r\n    return(\r\n        <div className=\"itemsList\">\r\n            <div className=\"listHeader\">\r\n                <h2>{t(\"yourReferrals\")}</h2>\r\n            </div>\r\n            <div className=\"itemsNumber\">\r\n                <p>{t(\"elementsNumber\")}&nbsp;</p>\r\n                <select onChange={handlePageSizeChange} value={pageSize}>\r\n                    {pageSizes.map((size) => (\r\n                        <option key={size} value={size}>\r\n                            {size}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n\r\n            {referrals.map((referral) =>(\r\n                <Referral key={referral.id} referral={referral} setSelectedReferral={setSelectedReferral} t={t}/>\r\n                ))}\r\n            <Pagination className=\"my-3\" count={count} page={page} siblingCount={1} boundaryCount={1} shape=\"rounded\" onChange={handlePageChange}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReferralList","import * as React from 'react';\r\nimport {useEffect, useState} from \"react\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {Scheduler , WeekView, Appointments, Toolbar, DateNavigator, TodayButton } from '@devexpress/dx-react-scheduler-material-ui';\r\nimport { ViewState } from '@devexpress/dx-react-scheduler';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { fade } from '@material-ui/core/styles/colorManipulator';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    todayCell: {\r\n        backgroundColor: fade(theme.palette.primary.main, 0.1),\r\n        '&:hover': {\r\n            backgroundColor: fade(theme.palette.primary.main, 0.14),\r\n        },\r\n        '&:focus': {\r\n            backgroundColor: fade(theme.palette.primary.main, 0.16),\r\n        },\r\n    },\r\n    weekendCell: {\r\n        backgroundColor: fade(theme.palette.action.disabledBackground, 0.04),\r\n        '&:hover': {\r\n            backgroundColor: fade(theme.palette.action.disabledBackground, 0.04),\r\n        },\r\n        '&:focus': {\r\n            backgroundColor: fade(theme.palette.action.disabledBackground, 0.04),\r\n        },\r\n    },\r\n    today: {\r\n        backgroundColor: fade(theme.palette.primary.main, 0.16),\r\n    },\r\n    weekend: {\r\n        backgroundColor: fade(theme.palette.action.disabledBackground, 0.06),\r\n    },\r\n}));\r\n\r\nconst TimeTableCell = (props) => {\r\n    const classes = useStyles();\r\n    const { startDate } = props;\r\n    const date = new Date(startDate);\r\n\r\n    if (date.getDate() === new Date().getDate()) {\r\n        return <WeekView.TimeTableCell {...props} className={classes.todayCell} />;\r\n    } if (date.getDay() === 0 || date.getDay() === 6) {\r\n        return <WeekView.TimeTableCell {...props} className={classes.weekendCell} />;\r\n    } return <WeekView.TimeTableCell {...props} />;\r\n};\r\n\r\nconst DayScaleCell = (props) => {\r\n    const classes = useStyles();\r\n    const { startDate, today } = props;\r\n\r\n    if (today) {\r\n        return <WeekView.DayScaleCell {...props} className={classes.today} />;\r\n    } if (startDate.getDay() === 0 || startDate.getDay() === 6) {\r\n        return <WeekView.DayScaleCell {...props} className={classes.weekend} />;\r\n    } return <WeekView.DayScaleCell {...props} />;\r\n};\r\n\r\nconst Schedule = ({schedule}) =>{\r\n\r\n    const [appointments, setAppointments] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        if(schedule !== undefined){\r\n            let processedAppointments = convertAppointments(schedule);\r\n            setAppointments(processedAppointments);\r\n        }\r\n    },[schedule])\r\n\r\n    function convertDate(date){\r\n        let year, month, day, hours, minutes;\r\n        year = date.substring(0, 4)-0;\r\n        month = date.substring(5,7)-1;\r\n        day = date.substring(8,10)-0;\r\n        hours = date.substring(11,13)-0;\r\n        minutes = date.substring(14,16)-0;\r\n\r\n        return new Date(year, month, day, hours, minutes);\r\n    }\r\n\r\n    function convertAppointments(schedule){\r\n        let properAppointments = [];\r\n\r\n        Object.entries(schedule).forEach((([key,value])=>Object.entries(value)\r\n            .forEach(([key,value])=>{\r\n                let date = new Object();\r\n                date[\"startDate\"] = convertDate(value.startDate);\r\n                date[\"endDate\"] = convertDate(value.endDate);\r\n                properAppointments.push(date);\r\n            })))\r\n\r\n        return properAppointments;\r\n    }\r\n\r\n    return(\r\n        <Paper>\r\n            <Scheduler data={appointments} firstDayOfWeek={1} locale='pl-PL'>\r\n                <ViewState/>\r\n                <WeekView\r\n                    startDayHour={8}\r\n                    endDayHour={18}\r\n                    timeTableCellComponent={TimeTableCell}\r\n                    dayScaleCellComponent={DayScaleCell}\r\n                />\r\n                <Toolbar/>\r\n                <DateNavigator/>\r\n                <TodayButton/>\r\n                <Appointments/>\r\n            </Scheduler>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default Schedule;","import React from \"react\";\r\nimport {useState, useEffect, useRef} from 'react';\r\nimport {Col, Row} from \"react-bootstrap\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Schedule from \"./Schedule\";\r\nimport {baseUrl} from \"../../config/config\";\r\n\r\nconst ScheduleForm = ({t}) =>{\r\n    const [specializations, setSpecializations] = useState([]);\r\n    const [doctors, setDoctors] = useState([]);\r\n    const [selectedSpecialization, setSelectedSpecialization] = useState(undefined);\r\n    const [selectedDoctor, setSelectedDoctor] = useState(undefined);\r\n    const [schedule, setSchedule] = useState(undefined);\r\n    const [errors, setErrors] = useState({});\r\n    const ref = useRef();\r\n\r\n    const reset = () =>{\r\n        ref.current.value = t(\"chooseDoctor\");\r\n    };\r\n\r\n    useEffect(()=>{\r\n        const getSpecializations = async () =>{\r\n            const specializations = await fetchSpecializations()\r\n            setSpecializations(specializations)\r\n        }\r\n\r\n        getSpecializations();\r\n    },[])\r\n\r\n\r\n    useEffect(()=>{\r\n        if(selectedSpecialization!==undefined){\r\n            const getDoctors = async () =>{\r\n                const doctors = await fetchDoctors()\r\n                setDoctors(doctors)\r\n            }\r\n\r\n            getDoctors()\r\n        }\r\n\r\n    }, [selectedSpecialization])\r\n\r\n    const fetchSpecializations = async () =>{\r\n        const res = await fetch(`${baseUrl}/specializations`)\r\n        const data = await res.json()\r\n\r\n        return data\r\n    }\r\n\r\n    const fetchDoctors = async () =>{\r\n        const res = await fetch(`${baseUrl}/doctors/specialization?id=${selectedSpecialization.id}`)\r\n        const data = await res.json()\r\n\r\n        return data\r\n    }\r\n\r\n    function clearSpecialization(){\r\n        setSelectedSpecialization(undefined);\r\n        setDoctors([]);\r\n        setSchedule(undefined);\r\n    }\r\n\r\n    function clearDoctor(){\r\n        setSelectedDoctor(undefined);\r\n        setSchedule(undefined);\r\n    }\r\n\r\n    const findFormErrors = () =>{\r\n        const newErrors = {};\r\n        if(selectedSpecialization === undefined){\r\n            newErrors.specialization = t(\"specializationError\");\r\n        }\r\n\r\n        if(selectedDoctor === undefined){\r\n            newErrors.doctor = t(\"doctorError\");\r\n        }\r\n\r\n        return newErrors;\r\n    }\r\n\r\n    function handleSubmit(e){\r\n        e.preventDefault();\r\n        const errors = findFormErrors();\r\n\r\n        if(Object.keys(errors).length > 0){\r\n            setErrors(errors);\r\n        }else{\r\n            fetch(`${baseUrl}/doctors/${selectedDoctor.id}/schedule?specializationId=${selectedSpecialization.id}`)\r\n                .then((res)=>res.json())\r\n                .then((obj)=>{\r\n                    setSchedule(obj)\r\n                })\r\n                .catch((err)=>console.log(err));\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"itemsList\">\r\n            <div className=\"listHeader\">\r\n                <h2>{t(\"doctorSchedule\")}</h2>\r\n            </div>\r\n            <Form className=\"newAppointmentForm\">\r\n                <Row className=\"align-items-center mb-3\">\r\n                    <Col>\r\n                        <Form.Group>\r\n                            <Form.Label>{t(\"chooseSpecialization\")}:</Form.Label>\r\n                            <Form.Select id=\"selectedSpecialization\" isInvalid={!!errors.specialization}>\r\n                                <option onClick={clearSpecialization}>{t(\"chooseSpecialization\")}</option>\r\n                                {specializations.map((spec)=>(\r\n                                    <option value={spec} onClick={(e)=>{\r\n                                        setSelectedDoctor(undefined);\r\n                                        reset();\r\n                                        setSchedule(undefined);\r\n                                        setSelectedSpecialization(spec);\r\n\r\n                                        if(!!errors['specialization'])\r\n                                            setErrors({\r\n                                                ...errors,\r\n                                                ['specialization']:null\r\n                                            })\r\n                                    }}>{spec.name}</option>\r\n                                ))}\r\n                            </Form.Select>\r\n                            <Form.Control.Feedback type='invalid'>{errors.specialization}</Form.Control.Feedback>\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"align-items-center mb-3\">\r\n                    <Col>\r\n                        <Form.Group>\r\n                            <Form.Label>{t(\"chooseDoctor\")}:</Form.Label>\r\n                            <Form.Select id=\"selectedDoctor\" isInvalid={!!errors.doctor} ref={ref}>\r\n                                <option onClick={clearDoctor}>{t(\"chooseDoctor\")}</option>\r\n                                {doctors.map((doc)=>(\r\n                                    <option value={doc} onClick={(e)=>{\r\n                                        setSelectedDoctor(doc);\r\n                                        setSchedule(undefined);\r\n                                        if(!!errors['doctor'])\r\n                                            setErrors({\r\n                                                ...errors,\r\n                                                ['doctor']:null\r\n                                            })\r\n                                    }}>{doc.firstName +  ' ' + doc.lastName}</option>\r\n                                ))}\r\n                            </Form.Select>\r\n                            <Form.Control.Feedback type='invalid'>{errors.doctor}</Form.Control.Feedback>\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                <div style={{display:\"flex\", justifyContent: 'center'}}>\r\n                    <Button variant='primary' onClick={e=>handleSubmit(e)}>{t(\"showSchedule\")}</Button>\r\n                </div>\r\n            </Form>\r\n            {(schedule !== undefined && selectedDoctor !== undefined && selectedSpecialization !== undefined) &&\r\n            <Schedule schedule={schedule} />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ScheduleForm;\r\n","import React, {useState, useEffect} from \"react\";\r\nimport {FaRegUser, FaCheck, FaFile, FaRegListAlt} from 'react-icons/fa'\r\nimport {Button} from \"react-bootstrap\";\r\nimport {baseUrl} from \"../../config/config\";\r\n\r\nconst CheckUp = ({checkup, t}) =>{\r\n    const [state, setState] = useState(false);\r\n    const [checkUp, setChekup] = useState(checkup);\r\n\r\n    useEffect(()=>{\r\n        if(checkup !== undefined){\r\n            setChekup(checkup);\r\n        }\r\n    }, [checkup])\r\n\r\n    function togglePanel(e){\r\n        e.preventDefault();\r\n        setState(!state)\r\n    }\r\n\r\n    function handleFileDownload(e, checkup){\r\n        e.preventDefault();\r\n\r\n        fetch(`${baseUrl}/appointments/diagnosticTests?appointmentId=${checkup.appointmentId}&checkUpId=${checkup.checkUpId}`)\r\n            .then(res => res.json())\r\n            .then(res =>{\r\n                let a = window.document.createElement('a');\r\n                let byteArr = new Uint8Array(res.file);\r\n                a.href = window.URL.createObjectURL(new Blob([byteArr], {type : \"application/pdf\"}))\r\n                let date = new Date(res.appointmentDate).toISOString().slice(0,10);\r\n                a.download = t(\"checkUpFileName\") + String(date);\r\n                document.body.appendChild(a);\r\n                a.click();\r\n                document.body.removeChild(a);\r\n            })\r\n    }\r\n\r\n\r\n    return(\r\n        <div className=\"appointmentAndCheckup\" onClick={(e)=> togglePanel(e)}>\r\n            <div className=\"top\">\r\n                <p className=\"appointmentAndCheckupHeader\">{checkUp.diagnosticTestName}</p>\r\n                <div className=\"data\">\r\n                    <p>{t(\"date\")}</p>\r\n                    <p>{new Date(checkUp.appointmentDate).toISOString().slice(0,10)}</p>\r\n                    <p>{new Date(checkUp.appointmentDate).toISOString().slice(11,16)}</p>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <FaRegUser size={42}/>\r\n                {t(\"medicalStaff\")}\r\n            </div>\r\n\r\n            {state ? (\r\n                <div>\r\n                    <hr/>\r\n                    <div className=\"subsections\">\r\n                        <FaRegListAlt size={42}/>\r\n                        <p className=\"header\">{t(\"checkUpDescription\")}</p>\r\n                    </div>\r\n                    <div className=\"subsections\">\r\n                        <p>{checkUp.doctorsDescription}</p>\r\n                    </div>\r\n                    <hr/>\r\n\r\n                    <div className=\"subsections\">\r\n                        <FaCheck size={42}/>\r\n                        <p className=\"header\">{t(\"result\")}</p>\r\n                    </div>\r\n                    <div>\r\n                        <p>{checkUp.result ? checkUp.result : t(\"resultNotAvailable\")}</p>\r\n                    </div>\r\n\r\n                    {(checkUp.result !== null && checkUp.file) &&\r\n                    <>\r\n                        <hr/>\r\n                        <div className=\"subsections\">\r\n                            <FaFile size={42}/>\r\n                            <p className=\"header\">{t(\"downloadResultPDF\")}</p>\r\n                            <Button className=\"download\" href={`${baseUrl}/patients/1/diagnosticTests`} onClick={(e)=>{\r\n                                handleFileDownload(e, checkup);\r\n                            }}>{t(\"download\")}</Button>\r\n                        </div>\r\n                    </>}\r\n                </div>) : null}\r\n        </div>);\r\n}\r\nexport default CheckUp;","import React from \"react\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst AppointmentDetailsButtonPanel = ({appointment, t}) => {\r\n\r\n    let history = useHistory();\r\n\r\n    const handleClick = e => {\r\n        e.preventDefault();\r\n\r\n        const button = e.target.id;\r\n        if (button === 'visitButton') {\r\n            history.push({\r\n                pathname: `/today-visits/${appointment.id}/details/visits-history`,\r\n                state: appointment\r\n            })\r\n        }\r\n        else if (button === 'checkUpButton') {\r\n            history.push({\r\n                pathname: `/today-visits/${appointment.id}/details/check-ups`,\r\n                state: {\r\n                    detail : appointment,\r\n                    patientId : appointment.patientId\r\n                }\r\n            })\r\n        }\r\n        else if (button === 'backButton') {\r\n            history.push({\r\n                pathname: `/today-visits/${appointment.id}/details`,\r\n                state: appointment\r\n            })\r\n        }\r\n        else {\r\n            history.push({\r\n                pathname: `/today-visits/${appointment.id}/details/files`,\r\n                state: appointment\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"topBuffer\" style={{display: 'flex' ,justifyContent: 'space-between', width:'60%'}}>\r\n            {(window.location.href.indexOf('visits-history') > -1 || window.location.href.indexOf('check-ups') > -1 || window.location.href.indexOf('details/files') > -1) &&  <button id=\"backButton\" className=\"actionButton\" onClick={handleClick}>{t(\"backToDetailsButton\")}</button>}\r\n            {window.location.href.indexOf('visits-history') < 0 && <button id=\"visitButton\" className=\"actionButton\" onClick={handleClick}>{t(\"visitsHistoryButton\")}</button> }\r\n            {window.location.href.indexOf('check-ups') < 0 && <button id=\"checkUpButton\" className=\"actionButton\" onClick={handleClick}>{t(\"checkUpsButton\")}</button> }\r\n            {window.location.href.indexOf('details/files') < 0 && <button id=\"filesButton\" className=\"actionButton\" onClick={handleClick}>{t(\"patientFilesButton\")}</button> }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppointmentDetailsButtonPanel;","import React, {useState, useEffect} from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport CheckUp from \"./CheckUp\";\r\nimport {baseUrl} from \"../../config/config\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport AppointmentDetailsButtonPanel from \"../appointment/doctor/AppointmentDetailsButtonPanel\";\r\n\r\nconst CheckUpList = ({t}) =>{\r\n    const location = useLocation();\r\n    const pageSizes = [3, 5, 10];\r\n    const [checkups, setCheckups] = useState([]);\r\n\r\n    const [page, setPage] = useState(1);\r\n    const [count, setCount] = useState(0);\r\n    const [pageSize, setPageSize] = useState(pageSizes[0]);\r\n\r\n    const [appointment, setAppointment] = useState(undefined);\r\n    const [patientId, setPatientId] = useState(undefined);\r\n\r\n    const getRequestParams = (page, pageSize) =>{\r\n        let params = {};\r\n\r\n        if(page){\r\n            params[\"page\"] = page - 1;\r\n        }\r\n        if(pageSize){\r\n            params[\"size\"] = pageSize;\r\n        }\r\n        return params;\r\n    }\r\n\r\n    useEffect(()=>{\r\n        const getCheckups = async () =>{\r\n            const checkUps = await fetchCheckups()\r\n            setCheckups(checkUps.diagnosticTests)\r\n            setCount(checkUps.totalPages)\r\n        }\r\n        getCheckups()\r\n    },[page, pageSize])\r\n\r\n    useEffect(()=>{\r\n        if(location.state !== undefined){\r\n            setAppointment(location.state.detail);\r\n            setPatientId(location.state.patientId)\r\n        }\r\n    },[location])\r\n\r\n    const fetchCheckups = async () =>{\r\n        const params = getRequestParams(page, pageSize);\r\n        let res;\r\n        if(params.page !== null && params.size !== null){\r\n            res = await fetch(`${baseUrl}/patients/1/diagnosticTests?page=${params.page}&size=${params.size}`)\r\n        }else if(params.page !== null && params.size === null){\r\n            res = await fetch(`${baseUrl}/patients/1/diagnosticTests?page=${params.page}`)\r\n        }else if(params.page === null && params.size !== null){\r\n            res = await fetch(`${baseUrl}/patients/1/diagnosticTests?size=${params.size}`)\r\n        }else{\r\n            res = await fetch(`${baseUrl}/patients/1/diagnosticTests`)\r\n        }\r\n\r\n        const data = await res.json();\r\n\r\n        return data;\r\n    }\r\n\r\n    const handlePageChange = (event, value) => {\r\n        setPage(value);\r\n    };\r\n\r\n    const handlePageSizeChange = (event) => {\r\n        setPageSize(event.target.value);\r\n        setPage(1);\r\n    };\r\n\r\n    return(\r\n        <div className=\"itemsList\">\r\n            <div className=\"listHeader\">\r\n                <h2>{t(\"yourCheckUps\")}</h2>\r\n            </div>\r\n            <br/>\r\n            {(appointment !== undefined) &&\r\n                <AppointmentDetailsButtonPanel appointment={appointment} t={t} />\r\n            }\r\n            <div className=\"itemsNumber\">\r\n                <p>{t(\"elementsNumber\")}&nbsp;</p>\r\n                <select onChange={handlePageSizeChange} value={pageSize}>\r\n                    {pageSizes.map((size) => (\r\n                        <option key={size} value={size}>\r\n                            {size}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n            {checkups.map((checkup) =>(\r\n                <CheckUp key={checkup.id} checkup={checkup} t={t}/>\r\n            ))}\r\n            <Pagination className=\"my-3\" count={count} page={page} siblingCount={1} boundaryCount={1} shape=\"rounded\" onChange={handlePageChange}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CheckUpList;","import React from \"react\";\r\n\r\nconst PrescriptionListTableRow = ({prescription}) =>{\r\n\r\n    return(\r\n        <tr key={prescription.id}>\r\n            <td>{prescription.creationDate}</td>\r\n            <td>\r\n                {(prescription.medications ?\r\n                    <ul>\r\n                    {prescription.medications.map((medicine)=>(\r\n                        <li key={medicine.id}>{medicine.name}</li>\r\n                    ))}\r\n                    </ul> : '')}\r\n            </td>\r\n            <td>\r\n                {(prescription.medications ?\r\n                    <ul>\r\n                    {prescription.medications.map((medicine)=>(\r\n                        <li key={medicine.id}>{medicine.numberOfPackages}</li>\r\n                    ))}\r\n                    </ul> : '')}\r\n            </td>\r\n            <td>Wystawiona</td>\r\n            <td>{prescription.accessCode}</td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default PrescriptionListTableRow;\r\n","import React from \"react\";\r\nimport PrescriptionListTableRow from \"./PrescriptionListTableRow\";\r\n\r\nfunction PrescriptionListTable({prescriptionData, t}){\r\n\r\n\r\n    return(\r\n        <table className=\"table table-hover fileTable\" style={{backgroundColor:\"white\", width : '90%'}}>\r\n            <thead>\r\n                <tr>\r\n                    <th>{t(\"issueDate\")}</th>\r\n                    <th>{t(\"medications\")}</th>\r\n                    <th>{t(\"numberOfPackages\")}</th>\r\n                    <th>{t(\"status\")}</th>\r\n                    <th>{t(\"eReceiptCode\")}</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n            {prescriptionData.map((prescription) =>\r\n                <PrescriptionListTableRow prescription={prescription} key={prescription.id}/>\r\n            )}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default PrescriptionListTable;","import React, {useState, useEffect} from \"react\";\r\nimport PrescriptionListTable from \"./PrescriptionListTable\";\r\nimport {baseUrl} from \"../../config/config\";\r\n\r\nconst PrescriptionList = ({t}) =>{\r\n\r\n    const [prescriptions, setPrescriptions] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        const getPrescriptions = async () =>{\r\n            const prescriptions = await fetchPrescriptions()\r\n            setPrescriptions(prescriptions)\r\n        }\r\n\r\n        getPrescriptions()\r\n    },[])\r\n\r\n\r\n    const fetchPrescriptions = async () =>{\r\n        const res = await fetch(`${baseUrl}/patients/1/prescriptions`)\r\n        const data = await res.json();\r\n\r\n        return data;\r\n    }\r\n\r\n    return(\r\n        <div className=\"itemsList\">\r\n            <div className=\"listHeader\">\r\n                <h2>{t(\"yourPrescriptions\")}</h2>\r\n            </div>\r\n            <div className=\"appointmentList\">\r\n                <PrescriptionListTable prescriptionData={prescriptions} t={t}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default PrescriptionList;","import {Button, Col, Form, Row} from \"react-bootstrap\";\r\nimport {Formik} from 'formik';\r\nimport * as yup from \"yup\";\r\nimport React from \"react\";\r\nimport {useHistory} from 'react-router';\r\n\r\nconst schema = yup.object().shape({\r\n    email: yup.string().email('Invalid email address!').required('Field required!'),\r\n    password: yup.string().required('Field required!')\r\n});\r\n\r\nconst LoginForm = () => {\r\n    const history = useHistory();\r\n\r\n    //TODO add login logic\r\n    const onSubmit = values =>{\r\n        console.log(values);\r\n    }\r\n\r\n    return (\r\n        <div className=\"loginForm\" style={{marginTop:\"17%\", marginBottom:\"27%\"}}>\r\n            <Formik\r\n                validationSchema={schema}\r\n                onSubmit={onSubmit}\r\n                initialErrors={{}}\r\n                validateOnChange={true}\r\n                validateOnMount={false}\r\n                initialValues={{\r\n                    email: '',\r\n                    password: '',\r\n                }}>\r\n                {({\r\n                      handleSubmit,\r\n                      handleChange,\r\n                      values,\r\n                      touched,\r\n                      isValid,\r\n                      errors\r\n                  }) => (\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Row className=\"mb-3\">\r\n                            <Form.Group as={Col} xs={12} md={6} controlId=\"email\">\r\n                                <Form.Label>E-mail:</Form.Label>\r\n                                <Form.Control type=\"email\" name=\"email\" placeholder=\"Enter email\" defaultValue={values.email} isInvalid={!!errors.email} isValid={touched.email && !errors.email} onChange={handleChange} />\r\n                                <Form.Control.Feedback type=\"invalid\">{errors.email}</Form.Control.Feedback>\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} xs={12} md={6} controlId=\"password\">\r\n                                <Form.Label>Password:</Form.Label>\r\n                                <Form.Control type=\"password\" name=\"password\" placeholder=\"Enter password\" defaultValue={values.password} isInvalid={!!errors.password} isValid={touched.password && !errors.password} onChange={handleChange}/>\r\n                                <Form.Control.Feedback type=\"invalid\">{errors.password}</Form.Control.Feedback>\r\n                            </Form.Group>\r\n                        </Row>\r\n                        <div>\r\n                            New user?&nbsp;\r\n                            <Button variant=\"primary\" size=\"sm\" onClick={()=>{\r\n                                history.push({\r\n                                    pathname : '/rejestracja'\r\n                                })\r\n                            }}>Create an account</Button>\r\n                        </div>\r\n                        <hr/>\r\n                        <div style={{display: 'flex',justifyContent: 'center'}}>\r\n                            <Button style={{fontSize:\"20px\"}} variant=\"primary\" type=\"submit\" disabled={!isValid}>Login</Button>\r\n                        </div>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginForm;","import React from \"react\";\r\nimport {Formik} from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport {Col, Row} from \"react-bootstrap\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport {useHistory} from 'react-router';\r\nimport {baseUrl} from \"../../config/config\";\r\n\r\nconst  today = new Date();\r\n\r\nconst schema = yup.object().shape({\r\n    firstName: yup.string().min(2, 'First name should have min. 2 characters!').max(50, 'First name should have max. 50 characters!').required('Field required!'),\r\n    lastName: yup.string().min(2, 'Last name should have min. 2 characters!').max(50, 'Last name should have max. 50 characters!').required('Field required!'),\r\n    pesel: yup.string().min(11, 'Pesel should have 11 digits!').max(11, 'Pesel should have 11 digits!')\r\n        .test('validatePesel', 'Invalid pesel!',\r\n            function validatePesel(pesel) {\r\n                let reg = /^[0-9]{11}$/;\r\n                if(reg.test(pesel) === false)\r\n                    return false;\r\n                else\r\n                {\r\n                    let digits = (\"\"+pesel).split(\"\");\r\n                    if ((parseInt(pesel.substring( 4, 6)) > 31)||(parseInt(pesel.substring( 2, 4)) > 12))\r\n                        return false;\r\n\r\n                    let checksum = (1*parseInt(digits[0]) + 3*parseInt(digits[1]) + 7*parseInt(digits[2]) + 9*parseInt(digits[3]) + 1*parseInt(digits[4]) + 3*parseInt(digits[5]) + 7*parseInt(digits[6]) + 9*parseInt(digits[7]) + 1*parseInt(digits[8]) + 3*parseInt(digits[9]))%10;\r\n                    if(checksum === 0)\r\n                        checksum = 10;\r\n                    checksum = 10 - checksum;\r\n\r\n                    return (parseInt(digits[10]) === checksum);\r\n                }\r\n            }).required('Field required!'),\r\n    birthDate: yup.date().max(today, 'Date cannot be from the future!').required('Field required!'),\r\n    phoneNumber: yup.string().min(9, 'Phone number should have min. 9 digits!').required('Field required!'),\r\n    email: yup.string().email('Invalid email address!').required('Field required!'),\r\n    street: yup.string().min(2).required('Field required!'),\r\n    streetNumber: yup.string().required('Field required!'),\r\n    city: yup.string().required('Field required!'),\r\n    postCode: yup.string().required('Field required!'),\r\n    country: yup.string().required('Field required!'),\r\n    password: yup.string().min(2, 'Password should have min. 2 characters!').max(50, 'Password should have max. 50 characters!').required('Field required!'),\r\n    confirmPassword: yup.string().oneOf([yup.ref('password'), ''], 'Password must match!').required('Field required!')\r\n});\r\n\r\nconst RegisterForm = () => {\r\n    const history = useHistory();\r\n\r\n    const onSubmit = values =>{\r\n        const newPerson = {\r\n            address : {\r\n                city : values.city,\r\n                country : values.country,\r\n                postCode : values.postCode,\r\n                street : values.street,\r\n                streetNumber : values.streetNumber\r\n            },\r\n            birthDate : values.birthDate,\r\n            email : values.email,\r\n            firstName : values.firstName,\r\n            lastName : values.lastName,\r\n            patientsFiles: [],\r\n            pesel : values.pesel,\r\n            phoneNumber : values.phoneNumber\r\n        };\r\n\r\n        fetch(`${baseUrl}/patients`,{\r\n            method : 'POST',\r\n            headers : {'Access-Control-Allow-Origin': `${baseUrl}`,\r\n                'Content-Type': 'application/json;charset=UTF-8'},\r\n            body : JSON.stringify(newPerson)\r\n        }).then((res)=>res.json())\r\n            .catch((err)=>console.log(err))\r\n    }\r\n\r\n    return(\r\n        <div className=\"loginForm\" style={{marginTop:\"1%\", marginBottom:\"12%\"}}>\r\n            <Formik\r\n                validationSchema={schema}\r\n                enableReinitialize={true}\r\n                onSubmit={onSubmit}\r\n                initialErrors={{}}\r\n                validateOnChange={true}\r\n                validateOnMount={false}\r\n                initialValues={{\r\n                    firstName : '',\r\n                    lastName : '',\r\n                    pesel : '',\r\n                    birthDate : '',\r\n                    phoneNumber : '',\r\n                    email : '',\r\n                    street : '',\r\n                    streetNumber : '',\r\n                    city: '',\r\n                    postCode : '',\r\n                    country : '',\r\n                    password: '',\r\n                    confirmPassword: ''\r\n                }} >\r\n                {({\r\n                      handleChange,\r\n                      handleSubmit,\r\n                      values,\r\n                      touched,\r\n                      isValid,\r\n                      errors\r\n                  })=>(\r\n                    <Form  onSubmit={handleSubmit}>\r\n                        <Row className=\"align-items-center mb-3\">\r\n                            <Col>\r\n                                <Form.Group>\r\n                                    <Form.Label>Imię:</Form.Label>\r\n                                    <Form.Control type=\"text\" name=\"firstName\" placeholder=\"Imię\" defaultValue={values.firstName} isInvalid={!!errors.firstName} isValid={touched.firstName && !errors.firstName} onChange={handleChange}/>\r\n                                    <Form.Control.Feedback type=\"invalid\">{errors.firstName}</Form.Control.Feedback>\r\n                                </Form.Group>\r\n                            </Col>\r\n                            <Col>\r\n                                <Form.Group>\r\n                                    <Form.Label>Nazwisko:</Form.Label>\r\n                                    <Form.Control type=\"text\" name=\"lastName\" placeholder=\"Nazwisko\" defaultValue={values.lastName} isInvalid={!!errors.lastName} isValid={touched.lastName && !errors.lastName} onChange={handleChange}/>\r\n                                    <Form.Control.Feedback type=\"invalid\">{errors.lastName}</Form.Control.Feedback>\r\n                                </Form.Group>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"align-items-center mb-3\">\r\n                            <Col>\r\n                                <Form.Group>\r\n                                    <Form.Label>PESEL:</Form.Label>\r\n                                    <Form.Control type=\"text\" name=\"pesel\" placeholder=\"PESEL\" defaultValue={values.pesel} isInvalid={!!errors.pesel} isValid={touched.pesel && !errors.pesel} onChange={handleChange}/>\r\n                                    <Form.Control.Feedback type=\"invalid\">{errors.pesel}</Form.Control.Feedback>\r\n                                </Form.Group>\r\n                            </Col>\r\n                            <Col>\r\n                                <Form.Group>\r\n                                    <Form.Label>Data urodzenia:</Form.Label>\r\n                                    <Form.Control type=\"date\" name=\"birthDate\" placeholder=\"Data urodzenia\" defaultValue={values.birthDate} isInvalid={!!errors.birthDate} isValid={touched.birthDate && !errors.birthDate} onChange={handleChange}/>\r\n                                    <Form.Control.Feedback type=\"invalid\">{errors.birthDate}</Form.Control.Feedback>\r\n                                </Form.Group>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"align-items-center mb-3\">\r\n                            <Col>\r\n                                <Form.Group>\r\n                                    <Form.Label>Telefon:</Form.Label>\r\n                                    <Form.Control type=\"text\" name=\"phoneNumber\" placeholder=\"Telefon\" defaultValue={values.phoneNumber} isInvalid={!!errors.phoneNumber} isValid={touched.phoneNumber && !errors.phoneNumber} onChange={handleChange}/>\r\n                                    <Form.Control.Feedback type=\"invalid\">{errors.phoneNumber}</Form.Control.Feedback>\r\n                                </Form.Group>\r\n                            </Col>\r\n                            <Col>\r\n                                <Form.Group>\r\n                                    <Form.Label>Email:</Form.Label>\r\n                                    <Form.Control type=\"email\" name=\"email\" placeholder=\"Email\" defaultValue={values.email} isInvalid={!!errors.email} isValid={touched.email && !errors.email} onChange={handleChange}/>\r\n                                    <Form.Control.Feedback type=\"invalid\">{errors.email}</Form.Control.Feedback>\r\n                                </Form.Group>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"align-items-center mb-3\">\r\n                            <Col>\r\n                                <Form.Group>\r\n                                    <Form.Label>Password:</Form.Label>\r\n                                    <Form.Control type=\"password\" name=\"password\" placeholder=\"Password\" defaultValue={values.password} isInvalid={!!errors.password} isValid={touched.password && !errors.password} onChange={handleChange}/>\r\n                                    <Form.Control.Feedback type=\"invalid\">{errors.password}</Form.Control.Feedback>\r\n                                </Form.Group>\r\n                            </Col>\r\n                            <Col>\r\n                                <Form.Group>\r\n                                    <Form.Label>Confirm Password:</Form.Label>\r\n                                    <Form.Control type=\"password\" name=\"confirmPassword\" placeholder=\"Confirm Password\" defaultValue={values.confirmPassword} isInvalid={!!errors.confirmPassword} isValid={touched.confirmPassword && !errors.confirmPassword} onChange={handleChange}/>\r\n                                    <Form.Control.Feedback type=\"invalid\">{errors.confirmPassword}</Form.Control.Feedback>\r\n                                </Form.Group>\r\n                            </Col>\r\n                        </Row>\r\n                        <br/>\r\n                        <Row className=\"align-items-center mb-3\">\r\n                            <Col>\r\n                                <Form.Group>\r\n                                    <Form.Label>Ulica:</Form.Label>\r\n                                    <Form.Control type=\"text\" name=\"street\" placeholder=\"Ulica\" defaultValue={values.street} isInvalid={!!errors.street} isValid={touched.street && !errors.street} onChange={handleChange}/>\r\n                                    <Form.Control.Feedback type=\"invalid\">{errors.street}</Form.Control.Feedback>\r\n                                </Form.Group>\r\n                            </Col>\r\n                            <Col>\r\n                                <Form.Group>\r\n                                    <Form.Label>Numer:</Form.Label>\r\n                                    <Form.Control type=\"text\" name=\"streetNumber\" placeholder=\"Numer\" defaultValue={values.streetNumber} isInvalid={!!errors.streetNumber} isValid={touched.streetNumber && !errors.streetNumber} onChange={handleChange}/>\r\n                                    <Form.Control.Feedback type=\"invalid\">{errors.streetNumber}</Form.Control.Feedback>\r\n                                </Form.Group>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"align-items-center mb-3\">\r\n                            <Col>\r\n                                <Form.Group>\r\n                                    <Form.Label>Miasto:</Form.Label>\r\n                                    <Form.Control type=\"text\" name=\"city\" placeholder=\"Miasto\" defaultValue={values.city} isInvalid={!!errors.city} isValid={touched.city && !errors.city} onChange={handleChange}/>\r\n                                    <Form.Control.Feedback type=\"invalid\">{errors.city}</Form.Control.Feedback>\r\n                                </Form.Group>\r\n                            </Col>\r\n                            <Col>\r\n                                <Form.Group>\r\n                                    <Form.Label>Kod pocztowy:</Form.Label>\r\n                                    <Form.Control type=\"text\" name=\"postCode\" placeholder=\"Kod pocztowy\" defaultValue={values.postCode} isInvalid={!!errors.postCode} isValid={touched.postCode && !errors.postCode} onChange={handleChange}/>\r\n                                    <Form.Control.Feedback type=\"invalid\">{errors.postCode}</Form.Control.Feedback>\r\n                                </Form.Group>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"align-items-center mb-3\">\r\n                            <Col>\r\n                                <Form.Group>\r\n                                    <Form.Label>Państwo:</Form.Label>\r\n                                    <Form.Control type=\"text\" name=\"country\" placeholder=\"Państwo\" defaultValue={values.country} isInvalid={!!errors.country} isValid={touched.country && !errors.country} onChange={handleChange}/>\r\n                                    <Form.Control.Feedback type=\"invalid\">{errors.country}</Form.Control.Feedback>\r\n                                </Form.Group>\r\n                            </Col>\r\n                            <Col>\r\n                                <Form.Group/>\r\n                            </Col>\r\n                        </Row>\r\n                         <div>\r\n                             Already have an account?&nbsp;\r\n                             <Button variant=\"primary\" size=\"sm\" onClick={()=>{\r\n                                 history.push({\r\n                                     pathname : '/logowanie'\r\n                                })\r\n                             }}>Login</Button>\r\n                         </div>\r\n                         <hr/>\r\n                        <div style={{display:\"flex\", justifyContent: 'center'}}>\r\n                            <Button variant=\"primary\" size=\"lg\" type=\"submit\" disabled={!isValid}>Register</Button>\r\n                        </div>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RegisterForm;","import React, {useState, useEffect} from \"react\";\r\nimport {FaRegUser} from \"react-icons/fa\";\r\nimport moment from \"moment\";\r\nimport {useHistory} from 'react-router';\r\nimport {GiConfirmed} from \"react-icons/all\";\r\n\r\nconst DoctorAppointment = ({app, t}) => {\r\n    const [appointment, setAppointment] = useState(app);\r\n\r\n    useEffect(()=>{\r\n        if(app !== undefined){\r\n            setAppointment(app);\r\n        }\r\n    },[app])\r\n\r\n    const history = useHistory();\r\n    let x = (new Date()).getTimezoneOffset() * 60000;\r\n    let a = moment(Date.now());\r\n    let b = moment(appointment.patient.birthDate)\r\n\r\n    const handleClick = e => {\r\n        e.preventDefault();\r\n\r\n        history.push({\r\n            pathname: `/today-visits/${appointment.id}/details`,\r\n            state: appointment\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className={appointment.state === 'DONE' ? \"appointmentAndCheckup todayApp\" : \"appointmentAndCheckup archivalApp\"}>\r\n            <div className=\"top\">\r\n                <p className=\"appointmentAndCheckupHeader\">{appointment.medicalServiceName}</p>\r\n                <div className=\"data\">\r\n                    {appointment.state === 'DONE' && <p><GiConfirmed size={42} style={{color: \"#18a74b\"}}/></p>}\r\n                    <p>{t(\"hour\")}&nbsp;{appointment.date ? new Date(new Date(appointment.date)-x).toISOString().slice(11,16) : ''}</p>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <p><FaRegUser size={42}/>{(appointment.patient ? (appointment.patient.firstName + ' ' + appointment.patient.lastName) : '')}</p>\r\n                <p>{t(\"age\")}&nbsp;{a.diff(b, 'year')}</p>\r\n                {appointment.type==='TELEPHONE' ? t(\"phoneNumber\") + ' ' + appointment.patient.phoneNumber : ''}\r\n            </div>\r\n            {appointment.state !== 'DONE' &&\r\n                <>\r\n                    <hr />\r\n                    <div style={{display: 'flex' ,justifyContent: 'flex-end'}}>\r\n                        <button className=\"actionButton\" onClick={e => handleClick(e)}>{t(\"addVisitDetails\")}</button>\r\n                    </div>\r\n                </>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DoctorAppointment;","import React, {useState, useEffect} from \"react\";\r\nimport {baseUrl} from \"../../../config/config\";\r\nimport DoctorAppointment from \"./DoctorAppointment\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\n\r\nconst TodayAppointmentList = ({t}) => {\r\n    const pageSizes = [3, 5, 10];\r\n    const [appointments, setAppointments] = useState([]);\r\n    const [page, setPage] = useState(1);\r\n    const [count, setCount] = useState(0);\r\n    const [pageSize, setPageSize] = useState(pageSizes[0]);\r\n\r\n    const getRequestParams = (page, pageSize) =>{\r\n        let params = {};\r\n\r\n        if(page){\r\n            params[\"page\"] = page - 1;\r\n        }\r\n        if(pageSize){\r\n            params[\"size\"] = pageSize;\r\n        }\r\n        return params;\r\n    }\r\n\r\n    useEffect(() => {\r\n        const getAppointments = async () => {\r\n            const appointments = await fetchAppointments()\r\n            setAppointments(appointments.appointments)\r\n            setCount(appointments.totalPages)\r\n        }\r\n        getAppointments();\r\n    }, [page, pageSize])\r\n\r\n    const fetchAppointments = async () =>{\r\n        const params = getRequestParams(page, pageSize);\r\n        let res;\r\n        if(params.page !== null && params.size !== null){\r\n            res = await fetch(`${baseUrl}/doctors/7/todaysVisits?page=${params.page}&size=${params.size}`);\r\n        }else if(params.page !== null && params.size === null){\r\n            res = await fetch(`${baseUrl}/doctors/7/todaysVisits?page=${params.page}`);\r\n        }else if(params.page === null && params.size !== null){\r\n            res = await fetch(`${baseUrl}/doctors/7/todaysVisits?size=${params.size}`);\r\n        }else{\r\n            res = await fetch(`${baseUrl}/doctors/7/todaysVisits`);\r\n        }\r\n\r\n        const data = await res.json();\r\n\r\n        return data;\r\n    }\r\n\r\n    const handlePageChange = (event, value) => {\r\n        setPage(value);\r\n    };\r\n\r\n    const handlePageSizeChange = (event) => {\r\n        setPageSize(event.target.value);\r\n        setPage(1);\r\n    };\r\n\r\n    return(\r\n        <div className=\"itemsList\">\r\n            <div className=\"listHeader\">\r\n                <h2>{t(\"todayAppointments\")}</h2>\r\n            </div>\r\n            <div className=\"itemsNumber\">\r\n                <p>{t(\"elementsNumber\")}&nbsp;</p>\r\n                <select onChange={handlePageSizeChange} value={pageSize}>\r\n                    {pageSizes.map((size) => (\r\n                        <option key={size} value={size}>\r\n                            {size}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n            <div className=\"appointmentList\">\r\n                {appointments.map(appointment => <DoctorAppointment key={appointment.id} app={appointment} t={t} />)}\r\n            </div>\r\n            <Pagination className=\"my-3\" count={count} page={page} siblingCount={1} boundaryCount={1} shape=\"rounded\" onChange={handlePageChange}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodayAppointmentList;","import React from \"react\";\r\nimport logo from '../../../logo.png';\r\nimport {Navbar, Nav, NavDropdown, Container} from \"react-bootstrap\";\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\nimport {BsPerson} from 'react-icons/bs'\r\n\r\nfunction DoctorNavigation({changeLanguage, t}){\r\n    const profileTitle = (<BsPerson size={42}/>);\r\n    return(\r\n        <Navbar bg=\"light\" variant=\"light\" expand=\"lg\" collapseOnSelect=\"true\" sticky=\"top\" className=\"navContainer\">\r\n            <Container fluid>\r\n                <Navbar.Brand className=\"navbar-brand\"><img src={logo} alt={\"Logo\"}/></Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"navbarToggleExternalContent\" className=\"navCollapse\">\r\n                    <Nav className=\"navNav\">\r\n                        <LinkContainer to=\"/today-visits\" activeHref=\"active\">\r\n                            <Nav.Link exact className=\"navItemLink\">{t(\"todayAppointments\")}</Nav.Link>\r\n                        </LinkContainer>\r\n                        <LinkContainer to=\"/check-ups\" activeHref=\"active\">\r\n                            <Nav.Link exact className=\"navItemLink\">{t(\"checkups\")}</Nav.Link>\r\n                        </LinkContainer>\r\n                    </Nav>\r\n                    <NavDropdown className=\"navItemLanguages\" title={profileTitle} id=\"basic-nav-dropdown\">\r\n                        <NavDropdown title={t(\"language\")} id=\"basic-nav-dropdown\">\r\n                            <NavDropdown.Item onClick={() => {changeLanguage('en')}}>English</NavDropdown.Item>\r\n                            <NavDropdown.Item onClick={() => {changeLanguage('pl')}}>Polski</NavDropdown.Item>\r\n                        </NavDropdown>\r\n                        <NavDropdown.Divider />\r\n                        <NavDropdown.Item href=\"#wyloguj\">{t(\"logout\")}</NavDropdown.Item>\r\n                    </NavDropdown>\r\n                </Navbar.Collapse>\r\n            </Container>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nexport default DoctorNavigation;","import React, {useEffect, useState, useRef} from 'react';\r\nimport {useHistory} from 'react-router';\r\nimport Form from \"react-bootstrap/Form\";\r\nimport {Col, Row} from \"react-bootstrap\";\r\nimport {baseUrl} from \"../../../config/config\";\r\nimport RangeSlider from \"react-bootstrap-range-slider\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nconst AppointmentDetailsForm = ({appointment, t}) => {\r\n\r\n    const formatYmd = date => date.toISOString().slice(0,10);\r\n    const ref = useRef();\r\n    const history = useHistory();\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const [services, setServices] = useState([]);\r\n    const [checkUps, setCheckUps] = useState([]);\r\n    const [medications, setMedications] = useState([]);\r\n\r\n    const [app, setApp] = useState(appointment);\r\n    const [description, setDescription] = useState(()=>{\r\n        const saved = sessionStorage.getItem('description');\r\n        return saved || undefined;\r\n    });\r\n\r\n    const [recommendations, setRecommendations] = useState(()=>{\r\n        const saved = sessionStorage.getItem('recommendations');\r\n        return saved || undefined;\r\n    });\r\n\r\n    const [service, setService] = useState(undefined);\r\n    const [referralExpiryDate, setReferralExpiryDate] = useState(formatYmd(new Date(new Date().setDate(new Date().getDate()+31))));\r\n    const [referralToDelete, setReferralToDelete] = useState(undefined);\r\n    const [referrals, setReferrals] = useState(()=>{\r\n        const saved = sessionStorage.getItem('referrals');\r\n        const savedReferrals = JSON.parse(saved);\r\n        return savedReferrals || [];\r\n    });\r\n\r\n    const [medication, setMedication] = useState(undefined);\r\n    const [medicationDosage, setMedicationDosage] = useState(undefined);\r\n    const [medicationQuantity, setMedicationQuantity] = useState(1);\r\n    const [medicationToDelete, setMedicationToDelete] = useState(undefined);\r\n    const [medicationsToAdd, setMedicationsToAdd] = useState(()=>{\r\n        const saved = sessionStorage.getItem('medications');\r\n        const savedMedications = JSON.parse(saved);\r\n        return savedMedications || [];\r\n    });\r\n\r\n    const [selectedCheckup, setSelectedCheckup] = useState(undefined);\r\n    const [checkupDescription, setCheckupDescription] = useState(undefined);\r\n    const [checkupResult, setCheckupResult] = useState(undefined);\r\n    const [checkupResultFile, setCheckupResultFile] = useState(undefined);\r\n    const [checkupToDelete, setCheckupToDelete] = useState(undefined);\r\n    const [checkUpsToAdd, setCheckUpsToAdd] = useState(()=>{\r\n        const saved = sessionStorage.getItem('checkups');\r\n        const savedCheckups = JSON.parse(saved);\r\n        return savedCheckups || [];\r\n    });\r\n\r\n    const reset = () =>{\r\n        ref.current.value = \"\";\r\n    };\r\n\r\n    useEffect(() => {\r\n        const getServices = async () => {\r\n            const services = await fetchServices()\r\n            setServices(services)\r\n        }\r\n        getServices();\r\n    }, [])\r\n\r\n    const fetchServices = async () =>{\r\n        const res = await fetch(`${baseUrl}/medicalServices`);\r\n        return await res.json();\r\n    }\r\n\r\n    useEffect(() => {\r\n        const getCheckUps = async () => {\r\n            const checkUps = await fetchCheckUps()\r\n            setCheckUps(checkUps)\r\n        }\r\n        getCheckUps()\r\n    }, [])\r\n\r\n    const fetchCheckUps = async () =>{\r\n        const res = await fetch(`${baseUrl}/checkups`);\r\n        return await res.json();\r\n    }\r\n\r\n    useEffect(() => {\r\n        const getMedications = async () => {\r\n            const checkUps = await fetchMedications()\r\n            setMedications(checkUps)\r\n        }\r\n        getMedications()\r\n    }, [])\r\n\r\n    const fetchMedications = async () =>{\r\n        const res = await fetch(`${baseUrl}/medications`);\r\n        return await res.json();\r\n    }\r\n\r\n    const handleReferralAddition = (e) => {\r\n        e.preventDefault();\r\n        let referral = {};\r\n\r\n        if (service !== undefined) {\r\n            referral[\"medicalServiceId\"] = service.id;\r\n            referral[\"medicalServiceName\"] = service.name;\r\n            referral[\"expiryDate\"] = referralExpiryDate;\r\n\r\n            referrals.push(referral);\r\n            sessionStorage.setItem('referrals', JSON.stringify(referrals));\r\n            setService(undefined);\r\n            let element = document.getElementById('serviceSelect');\r\n            element.value = t(\"chooseService\");\r\n            setReferralExpiryDate(formatYmd(new Date(new Date().setDate(new Date().getDate()+31))));\r\n        }\r\n    }\r\n\r\n    const handleReferralDeletion = (e) =>{\r\n        e.preventDefault();\r\n        if(referralToDelete !== undefined){\r\n           const refIndex = referrals.indexOf(referralToDelete);\r\n           if(refIndex > -1){\r\n               referrals.splice(refIndex, 1);\r\n               setReferrals(referrals);\r\n               sessionStorage.setItem('referrals', JSON.stringify(referrals));\r\n               setReferralToDelete(undefined);\r\n           }\r\n        }\r\n    }\r\n\r\n    const handleMedicationAddition = (e) =>{\r\n        e.preventDefault();\r\n        let medicine = {};\r\n\r\n        if(medication !== undefined && medicationDosage !== undefined){\r\n            if(medicationsToAdd.filter(e=>e.medicationId === medication.id).length === 0){\r\n                medicine[\"numberOfPackages\"] = medicationQuantity;\r\n                medicine[\"dosing\"] = medicationDosage;\r\n                medicine[\"medicationId\"] = medication.id;\r\n                medicine[\"name\"] = medication.name;\r\n\r\n                medicationsToAdd.push(medicine);\r\n                sessionStorage.setItem('medications', JSON.stringify(medicationsToAdd));\r\n                setMedication(undefined);\r\n                let element = document.getElementById('medicationSelect');\r\n                element.value = t(\"chooseMedication\");\r\n                setMedicationDosage('');\r\n                setMedicationQuantity(1);\r\n            }else{\r\n                window.alert(t(\"referralAddMedicationError\"));\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleMedicationDeletion = (e) =>{\r\n        e.preventDefault();\r\n        if(medicationToDelete !== undefined){\r\n            const medIndex = medicationsToAdd.indexOf(medicationToDelete);\r\n            if(medIndex > -1){\r\n                medicationsToAdd.splice(medIndex, 1);\r\n                setMedicationsToAdd(medicationsToAdd);\r\n                sessionStorage.setItem('medications', JSON.stringify(medicationsToAdd));\r\n                setMedicationToDelete(undefined);\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleCheckupAddition = (e) =>{\r\n        e.preventDefault();\r\n        let addedCheckup = {};\r\n\r\n        if(selectedCheckup !== undefined){\r\n            addedCheckup[\"checkUpId\"] = selectedCheckup.id;\r\n            addedCheckup[\"name\"] = selectedCheckup.name;\r\n\r\n            if(checkupDescription !== undefined){\r\n                addedCheckup[\"description\"] = checkupDescription;\r\n            }\r\n            if(checkupResult !== undefined && checkupResult !== ''){\r\n                addedCheckup[\"result\"] = checkupResult;\r\n            }\r\n            if(checkupResultFile !== undefined){\r\n                addedCheckup[\"file\"] = checkupResultFile;\r\n            }\r\n\r\n            checkUpsToAdd.push(addedCheckup);\r\n            sessionStorage.setItem('checkups', JSON.stringify(checkUpsToAdd));\r\n            setSelectedCheckup(undefined);\r\n            let element = document.getElementById('checkupSelect');\r\n            element.value = t(\"chooseCheckUp\");\r\n            setCheckupDescription('');\r\n            setCheckupResult('');\r\n            setCheckupResultFile(undefined);\r\n            reset();\r\n        }\r\n    }\r\n\r\n    const handleCheckupDeletion = (e) =>{\r\n        e.preventDefault();\r\n        if(checkupToDelete !== undefined){\r\n            const checkupIndex = checkUpsToAdd.indexOf(checkupToDelete);\r\n            if(checkupIndex > -1){\r\n                checkUpsToAdd.splice(checkupIndex, 1);\r\n                setCheckUpsToAdd(checkUpsToAdd);\r\n                sessionStorage.setItem('checkups', JSON.stringify(checkUpsToAdd));\r\n                setCheckupToDelete(undefined);\r\n            }\r\n        }\r\n    }\r\n\r\n    const convertToBase64 = (file) => {\r\n        return new Promise((resolve, reject) => {\r\n            const fileReader = new FileReader();\r\n            fileReader.readAsDataURL(file);\r\n            fileReader.onload = () => {\r\n                resolve(fileReader.result);\r\n            };\r\n            fileReader.onerror = (error) => {\r\n                reject(error);\r\n            };\r\n        });\r\n    };\r\n\r\n    const handleFileUpload = async (e) =>{\r\n        const file = e.target.files[0];\r\n        const base64 = await convertToBase64(file);\r\n        let data = base64.split('base64,')[1];\r\n        let binaryData = atob(data);\r\n\r\n        let byteNumbers = new Array(binaryData.length);\r\n        for(let i = 0; i < binaryData.length; i++){\r\n            byteNumbers[i] = binaryData.charCodeAt(i);\r\n        }\r\n        let test = new Uint8Array(byteNumbers);\r\n        let array = Array.from(test);\r\n        setCheckupResultFile(array);\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n\r\n        const errors = findFormErrors();\r\n\r\n        if(Object.keys(errors).length > 0){\r\n            setErrors(errors);\r\n        }else{\r\n            let prescriptions = [];\r\n\r\n            if(medicationsToAdd.length > 0){\r\n                let prescription = {};\r\n                let expiryDate = formatYmd(new Date(new Date().setDate(new Date().getDate()+31)));\r\n                let accessCode = (Math.floor(Math.random() * 10000) + 10000).toString().substring(1);\r\n                let medications = medicationsToAdd;\r\n\r\n                prescription[\"expiryDate\"] = expiryDate;\r\n                prescription[\"accessCode\"] = accessCode;\r\n                prescription[\"medications\"] = medications;\r\n                prescriptions = [prescription];\r\n            }\r\n\r\n            let fetchBody = {};\r\n            fetchBody[\"description\"] = description;\r\n            fetchBody[\"recommendations\"] = recommendations;\r\n            fetchBody[\"referrals\"] = referrals;\r\n            fetchBody[\"prescriptions\"] = prescriptions;\r\n            fetchBody[\"checkUps\"] = checkUpsToAdd;\r\n\r\n\r\n            fetch(`${baseUrl}/appointments/${app.id}/done`,{\r\n                method : 'PATCH',\r\n                headers :{\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body : JSON.stringify(fetchBody)\r\n            }).then((res)=>res.json())\r\n                .then(window.alert(t(\"appointmentDetailsMessage\")))\r\n                .then(history.push({\r\n                    pathname : '/today-visits'\r\n                }))\r\n                .catch((err)=>console.log(err));\r\n\r\n            sessionStorage.clear();\r\n        }\r\n    }\r\n\r\n    const findFormErrors = () =>{\r\n        const newErrors = {};\r\n\r\n        if(description === undefined || description === ''){\r\n            newErrors.description = t(\"appointmentDescriptionRequired\");\r\n        }\r\n\r\n        return newErrors;\r\n    }\r\n\r\n    return (\r\n        <Form className=\"newAppointmentForm\">\r\n            <Form.Group className=\"mb-3\" controlId=\"detailsForm.ControlTextArea1\">\r\n                <Form.Label>{t(\"appointmentDescription\")}</Form.Label>\r\n                <Form.Control as=\"textarea\" rows={3} value={description} isInvalid={!!errors.description} onChange={(e)=>{\r\n                    setDescription(e.target.value);\r\n                    sessionStorage.setItem('description', e.target.value);\r\n                    if(!!errors['description'])\r\n                        setErrors({\r\n                            ...errors,\r\n                            ['description']:null\r\n                        })\r\n                }}/>\r\n                <Form.Control.Feedback type='invalid'>{errors.description}</Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"detailForm.ControlTextArea2\">\r\n                <Form.Label>{t(\"recommendations\")}:</Form.Label>\r\n                <Form.Control as=\"textarea\" rows={3} value={recommendations} onChange={(e)=>{\r\n                    setRecommendations(e.target.value)\r\n                    sessionStorage.setItem('recommendations', e.target.value);\r\n                }}/>\r\n            </Form.Group>\r\n            <Row className=\"mb-3\">\r\n                <Form.Label>{t(\"referrals\")}:</Form.Label>\r\n                <Col md>\r\n                    <Form.Group>\r\n                        <Form.Label column=\"sm\">{t(\"chooseService\")}:</Form.Label>\r\n                        <Form.Select aria-label=\"Floating label select example\" id=\"serviceSelect\">\r\n                            <option onClick={() => setService(undefined)}>{t(\"chooseService\")}</option>\r\n                            {services.map((ser)=>(\r\n                                <option value={ser} onClick={()=>{\r\n                                    setService(ser);\r\n                                }}>{ser.name}</option>\r\n                            ))}\r\n                        </Form.Select>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label column=\"sm\">{t(\"chooseExpirationDate\")}</Form.Label>\r\n                        <Form.Control type='date' value={referralExpiryDate} onChange={(e) => setReferralExpiryDate(e.target.value)}/>\r\n                    </Form.Group>\r\n                </Col>\r\n                <Col md>\r\n                    <Form.Label column=\"sm\">{t(\"referralsList\")}</Form.Label>\r\n                    <div style={{overflow: \"scroll\", height: \"100px\"}}>\r\n                        {referrals.map((referral) => {\r\n                            return <div className=\"appointmentFormSubsectionItem\" key={referral.id} onClick={()=>{\r\n                                setReferralToDelete(referral);\r\n                            }}>{referral.medicalServiceName + ' do: ' +referral.expiryDate}</div>\r\n                        })}\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n\r\n            <div style={{display: 'flex' ,justifyContent: 'space-between'}}>\r\n                <button className=\"addButton\" onClick={e=>handleReferralAddition(e)}>{t(\"addReferral\")}</button>\r\n                <button className=\"deleteButton\" onClick={e=>handleReferralDeletion(e)}>{t(\"deleteReferral\")}</button>\r\n            </div>\r\n            <hr />\r\n\r\n            <Row className=\"mb-3 topBuffer\">\r\n                <Col md>\r\n                    <Form.Label>{t(\"medications\")}</Form.Label>\r\n                    <Form.Group>\r\n                        <Form.Label column=\"sm\">{t(\"chooseMedication\")}:</Form.Label>\r\n                        <Form.Select aria-label=\"Floating label select example\"  id=\"medicationSelect\">\r\n                            <option onClick={() => setMedication(undefined)}>{t(\"chooseMedication\")}</option>\r\n                            {medications.map((medication) =>(\r\n                                <option value={medication} key={medication.id}\r\n                                        onClick={()=>setMedication(medication)}>{medication.name}</option>\r\n                                ))}\r\n                        </Form.Select>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                        <Form.Label column=\"sm\">{t(\"dosage\")}:</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder={t(\"dosage\")} value={medicationDosage} onChange={(e)=>setMedicationDosage(e.target.value)}/>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Label column=\"sm\">{t(\"choosePackagesNumber\")}</Form.Label>\r\n                        <RangeSlider\r\n                            value={medicationQuantity}\r\n                            onChange={(e) => setMedicationQuantity(parseInt(e.target.value))}\r\n                        />\r\n                    </Form.Group>\r\n                </Col>\r\n                <Col md>\r\n                    <Form.Label column=\"sm\">{t(\"medicationsList\")}</Form.Label>\r\n                    <div style={{overflow: \"scroll\", height: \"216px\"}}>\r\n                        {medicationsToAdd.map((medication)=>{\r\n                            return <div className=\"appointmentFormSubsectionItem\" key={medication.id} onClick={()=>{\r\n                                setMedicationToDelete(medication);\r\n                            }}>{medication.name + ', '+medication.numberOfPackages + ' op.'}</div>\r\n                        })}\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            <div style={{display: 'flex' ,justifyContent: 'space-between'}}>\r\n                <button className=\"addButton\" onClick={(e)=>handleMedicationAddition(e)}>{t(\"addMedication\")}</button>\r\n                <button className=\"deleteButton\" onClick={(e)=>handleMedicationDeletion(e)}>{t(\"deleteMedication\")}</button>\r\n            </div>\r\n            <hr />\r\n            <Row>\r\n\r\n            </Row>\r\n            <div className=\"topBuffer\">\r\n                <Form.Label>{t(\"checkups\")}:</Form.Label>\r\n                <h6 style={{color: '#e60000'}}>{t(\"checkUpsInfo\")}</h6>\r\n                <Row className=\"mb-3\">\r\n                    <Col md>\r\n                        <Form.Group>\r\n                            <Form.Label column=\"sm\">{t(\"chooseCheckUp\")}:</Form.Label>\r\n                            <Form.Select aria-label=\"Floating label select example\" id=\"checkupSelect\">\r\n                                <option onClick={() => setSelectedCheckup(undefined)}>{t(\"chooseCheckUp\")}</option>\r\n                                {checkUps.map((checkUp)=>(\r\n                                   <option value={checkUp} key={checkUp.id}\r\n                                    onClick={()=>setSelectedCheckup(checkUp)}>{checkUp.name}</option>\r\n                                ))}\r\n                            </Form.Select>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col md />\r\n                </Row>\r\n                <Row className=\"mb-3\">\r\n                    <Col md>\r\n                        <Form.Group className=\"mb-3\" controlId=\"detailForm.ControlTextArea2\">\r\n                            <Form.Label column=\"sm\">{t(\"description\")}:</Form.Label>\r\n                            <Form.Control as=\"textarea\" rows={3} value={checkupDescription} onChange={(e)=>setCheckupDescription(e.target.value)}/>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col md>\r\n                        <Form.Group className=\"mb-3\" controlId=\"detailForm.ControlTextArea2\">\r\n                            <Form.Label column=\"sm\">{t(\"result\")}:</Form.Label>\r\n                            <Form.Control as=\"textarea\" rows={3} value={checkupResult} onChange={(e)=>setCheckupResult(e.target.value)}/>\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"mb-3\">\r\n                    <Col md>\r\n                        <Form.Group controlId=\"formFile\" className=\"mb-3\">\r\n                            <Form.Label column=\"sm\">{t(\"addFile\")}:</Form.Label>\r\n                            <Form.Control as=\"input\" type=\"file\" ref={ref} size=\"sm\" onChange={(e)=>handleFileUpload(e)}/>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col md>\r\n                        <Form.Label column=\"sm\">{t(\"checkUpsList\")}:</Form.Label>\r\n                        <div style={{overflow: \"scroll\", height: \"150px\"}}>\r\n                            {checkUpsToAdd.map((checkup)=>{\r\n                                return <div className=\"appointmentFormSubsectionItem\" key={checkup.id} onClick={()=>{\r\n                                    setCheckupToDelete(checkup);\r\n                                }}>{checkup.name}</div>\r\n                            })}\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                <div style={{display: 'flex' ,justifyContent: 'space-between'}}>\r\n                    <button className=\"addButton\" onClick={(e)=>handleCheckupAddition(e)}>{t(\"addCheckUp\")}</button>\r\n                    <button className=\"deleteButton\" onClick={(e)=>handleCheckupDeletion(e)}>{t(\"deleteCheckUp\")}</button>\r\n                </div>\r\n                <hr />\r\n            </div>\r\n            <div style={{display:\"flex\", justifyContent: 'center'}}>\r\n                <Button style={{marginLeft : '1%', marginRight:'1%'}} variant='danger' onClick={()=>{\r\n                    sessionStorage.clear();\r\n                    history.push({\r\n                        pathname : '/today-visits'\r\n                    })\r\n                }}>{t(\"cancel\")}</Button>\r\n                <Button style={{marginLeft : '1%', marginRight:'1%'}} variant='primary' onClick={(e)=>handleSubmit(e)}>{t(\"saveChanges\")}</Button>\r\n            </div>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default AppointmentDetailsForm;","import React from \"react\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport AppointmentDetailsForm from \"./AppointmentDetailsForm\";\r\nimport AppointmentDetailsButtonPanel from \"./AppointmentDetailsButtonPanel\";\r\n\r\nconst AppointmentDetails = ({t}) => {\r\n\r\n    let history = useHistory();\r\n    const appointment = history.location.state;\r\n\r\n    return (\r\n        <div className=\"itemsList\">\r\n            <div className=\"listHeader\">\r\n                <h2>{t(\"appointmentDetails\")}</h2>\r\n            </div>\r\n            <br/>\r\n            <AppointmentDetailsButtonPanel appointment={appointment} t={t} />\r\n            <AppointmentDetailsForm appointment={appointment} t={t}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppointmentDetails;","import React from \"react\";\r\nimport {useState} from \"react\";\r\nimport {FaCheck, FaFile, FaRegUser} from \"react-icons/fa\";\r\nimport {GiMedicines} from \"react-icons/gi\";\r\n\r\nconst ArchivalVisit = ({appointment, t}) => {\r\n\r\n    const [open, setOpen] = useState(false);\r\n\r\n    function togglePanel(e){\r\n        e.preventDefault();\r\n        setOpen(!open);\r\n    }\r\n\r\n    let x = (new Date()).getTimezoneOffset() * 60000;\r\n    return(\r\n        <div className=\"appointmentAndCheckup archivalApp\" onClick={e => togglePanel(e)}>\r\n            <div className=\"top\">\r\n                <p className=\"appointmentAndCheckupHeader\">{appointment.serviceName}</p>\r\n                <div className=\"data\">\r\n                    <p>{t(\"date\")}</p>\r\n                    <p>{appointment.date ? new Date(new Date(appointment.date)-x).toISOString().slice(0,10) : ''}</p>\r\n                    <p>{appointment.date ? new Date(new Date(appointment.date)-x).toISOString().slice(11,16) : ''}</p>\r\n                </div>\r\n            </div>\r\n            <div style={{display: 'flex', justifyContent:'space-between'}}>\r\n                <div>\r\n                    <FaRegUser size={42}/>\r\n                    {t(\"doctorTitle\")}&nbsp;{(appointment.doctor? (appointment.doctor.firstName + ' ' + appointment.doctor.lastName) : '')}\r\n                </div>\r\n            </div>\r\n            {appointment.recommendations  ? <>\r\n                {open ? (\r\n                    <div>\r\n                        <hr/>\r\n                        <div className=\"subsections\">\r\n                            <FaCheck size={42}/>\r\n                            <p className=\"header\">{t(\"recommendations\")}</p>\r\n                        </div>\r\n                        <ol>\r\n                            <li>{appointment.recommendations}</li>\r\n                        </ol>\r\n                        <hr/>\r\n\r\n                        <div className=\"subsections\">\r\n                            <FaFile size={42}/>\r\n                            <p className=\"header\">{t(\"realizedCheckUps\")}</p>\r\n                        </div>\r\n                        <p>{appointment.serviceName}</p>\r\n                        <hr/>\r\n                        <div className=\"subsections\">\r\n                            <GiMedicines size={42}/>\r\n                            <p className=\"header\">{t(\"ePrescriptions\")}</p>\r\n                        </div>\r\n                        <p>{appointment.prescriptions ? t(\"ePrescriptionsIssued\") : t(\"noPrescriptions\")}</p>\r\n                </div>) : null}\r\n            </> : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ArchivalVisit;","import React, {useEffect, useState} from \"react\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {baseUrl} from \"../../../../config/config\";\r\nimport ArchivalVisit from \"./ArchivalVisit\";\r\nimport AppointmentDetailsButtonPanel from \"../AppointmentDetailsButtonPanel\";\r\n\r\nconst VisitsHistoryList = ({t}) => {\r\n\r\n    let history = useHistory();\r\n    const appointment = history.location.state;\r\n    const [patientsAppointments, setPatientsAppointments] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const getAppointments = async () => {\r\n            const appointments = await fetchAppointments()\r\n            setPatientsAppointments(appointments.appointments)\r\n        }\r\n        getAppointments();\r\n    }, [])\r\n\r\n    const fetchAppointments = async () =>{\r\n        const res = await fetch(`${baseUrl}/patients/${appointment.patient.id}/doneAppointments`);\r\n        return await res.json();\r\n    }\r\n\r\n    return (\r\n        <div className=\"itemsList\">\r\n            <div className=\"listHeader\">\r\n                <h2>{t(\"appointmentsHistory\")}</h2>\r\n            </div>\r\n            <AppointmentDetailsButtonPanel appointment={appointment} t={t} />\r\n            {patientsAppointments.length > 0 ?\r\n                <div className=\"appointmentList\">\r\n                    {patientsAppointments.map(patientAppointment => <ArchivalVisit key={patientAppointment.id} appointment={patientAppointment} t={t} />)}\r\n                </div> : <span style={{marginTop : '1%'}}>{t(\"noAppointmentsToShow\")}</span>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VisitsHistoryList;","import React, {useEffect, useState} from \"react\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {baseUrl} from \"../../../../config/config\";\r\nimport {Table} from \"@material-ui/core\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport AppointmentDetailsButtonPanel from \"../AppointmentDetailsButtonPanel\";\r\n\r\nconst FilesTable = ({t}) => {\r\n\r\n    const [files, setFiles] = useState([]);\r\n    let history = useHistory();\r\n    const appointment = history.location.state;\r\n\r\n    useEffect(() => {\r\n        const getFiles = async () => {\r\n            const files = await fetchFiles()\r\n            setFiles(files)\r\n        }\r\n        getFiles();\r\n    }, [])\r\n\r\n    const fetchFiles = async () => {\r\n        const res = await fetch(`${baseUrl}/patients/${appointment.patient.id}/files`);\r\n        return await res.json();\r\n    }\r\n\r\n    const handleFileDownload = (e, file) => {\r\n        e.preventDefault();\r\n        fetch(`${baseUrl}/patients/${appointment.patient.id}/files/${file.id}`)\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                let a = window.document.createElement('a');\r\n                let byteArr = new Uint8Array(res.file);\r\n                a.href = window.URL.createObjectURL(new Blob([byteArr], {type: file.type}))\r\n                a.download = res.name;\r\n                document.body.appendChild(a);\r\n                a.click();\r\n                document.body.removeChild(a);\r\n            });\r\n    }\r\n\r\n    return(\r\n        <div className=\"itemsList\">\r\n            <div className=\"listHeader\">\r\n                <h2>{t(\"patientFiles\")}</h2>\r\n            </div>\r\n            <AppointmentDetailsButtonPanel appointment={appointment} t={t} />\r\n            {files.length > 0 ?\r\n                <Table className=\"table table-hover table-bordered fileTable topBuffer\" style={{width : '80%'}}>\r\n                    <thead style={{backgroundColor : '#e6eeff'}}>\r\n                    <tr>\r\n                        <th>{t(\"name\")}:</th>\r\n                        <th>{t(\"description\")}:</th>\r\n                        <th>{t(\"createDate\")}</th>\r\n                        <th>{t(\"action\")}</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {files.map((file)=>\r\n                        <tr key={file.id}>\r\n                            <td>{file.name}</td>\r\n                            <td>{file.description}</td>\r\n                            <td>{file.uploadDate}</td>\r\n                            <td>\r\n                                <Button variant='primary' onClick={e => handleFileDownload(e, file)}>{t(\"Download\")}</Button>\r\n                            </td>\r\n                        </tr>\r\n                    )}\r\n                    </tbody>\r\n                </Table> : <span className=\"topBuffer\">{t(\"noFiles\")}</span>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FilesTable;","import React, {useRef, useState, useEffect} from \"react\";\r\nimport {FaRegUser} from \"react-icons/fa\";\r\nimport moment from \"moment\";\r\nimport {Form} from \"react-bootstrap\";\r\nimport {baseUrl} from \"../../../config/config\";\r\n\r\nconst DoctorCheckUp = ({checkup, setSelectedCheckup, t}) => {\r\n    const [state, setState] = useState(false);\r\n    const [showAll, setShowAll] = useState(true);\r\n    const [checkUp, setCheckUp] = useState(checkup);\r\n    const [result, setResult] = useState(undefined);\r\n    const [file, setFile] = useState(undefined);\r\n    const [doctorsDescription, setDoctorsDescription] = useState(undefined);\r\n    const [errors, setErrors] = useState({});\r\n    const ref = useRef();\r\n    let a = moment(Date.now());\r\n    let b = moment(checkUp.patient.birthDate)\r\n\r\n    function showForm(e) {\r\n        e.preventDefault();\r\n        setState(!state);\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(checkup !== undefined){\r\n            setCheckUp(checkup);\r\n        }\r\n    },[checkup])\r\n\r\n    const findFormErrors = () => {\r\n        const newErrors = {};\r\n\r\n        if(result === undefined || result === ''){\r\n            newErrors.result = 'Result must be added!';\r\n        }\r\n\r\n        if (file === undefined) {\r\n            newErrors.file = 'File must be added!';\r\n        }\r\n\r\n        return newErrors;\r\n    }\r\n\r\n    const convertToBase64 = (file) => {\r\n        return new Promise((resolve, reject) => {\r\n            const fileReader = new FileReader();\r\n            fileReader.readAsDataURL(file);\r\n            fileReader.onload = () => {\r\n                resolve(fileReader.result);\r\n            };\r\n            fileReader.onerror = (error) => {\r\n                reject(error);\r\n            };\r\n        });\r\n    };\r\n\r\n    const handleFileUpload = async (e) =>{\r\n        const file = e.target.files[0];\r\n        const base64 = await convertToBase64(file);\r\n        let data = base64.split('base64,')[1];\r\n        let binaryData = atob(data);\r\n\r\n        let byteNumbers = new Array(binaryData.length);\r\n        for(let i = 0; i < binaryData.length; i++){\r\n            byteNumbers[i] = binaryData.charCodeAt(i);\r\n        }\r\n        let test = new Uint8Array(byteNumbers);\r\n        let array = Array.from(test);\r\n        setFile(array);\r\n    }\r\n\r\n    const handleRealization = (e) =>{\r\n        e.preventDefault();\r\n\r\n        const errors = findFormErrors();\r\n\r\n        if (Object.keys(errors).length > 0) {\r\n            setErrors(errors);\r\n        } else {\r\n\r\n            let fetchBody = {};\r\n            fetchBody['result'] = result;\r\n            fetchBody['doctorsDescription'] = doctorsDescription;\r\n            fetchBody['file'] = file;\r\n\r\n            fetch(`${baseUrl}/appointments/${checkUp.appointmentId}/testResult/${checkUp.checkUpId}`, {\r\n                method: 'PATCH',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(fetchBody)\r\n            })\r\n            .then((res) => res.json())\r\n                .then(()=>new Promise(resolve => setTimeout(resolve, 2000)))\r\n            .then(window.alert(t(\"checkUpRealized\")))\r\n            .catch((err) => console.log(err));\r\n            setSelectedCheckup(checkUp);\r\n            setShowAll(false);\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"appointmentAndCheckup\">\r\n            <div className=\"top\">\r\n                <p className=\"appointmentAndCheckupHeader\">{checkUp.diagnosticTestName}</p>\r\n                <div className=\"data\">\r\n                    <p>{t(\"date\")}</p>\r\n                    <p>{new Date(checkUp.appointmentDate).toISOString().slice(0,10)}</p>\r\n                    <p>{new Date(checkUp.appointmentDate).toISOString().slice(11,16)}</p>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <p><FaRegUser size={42}/>{(checkUp.patient ? (checkUp.patient.firstName + ' ' + checkUp.patient.lastName) : '')}</p>\r\n                <p>{t(\"age\")}&nbsp;{a.diff(b, 'year')}</p>\r\n            </div>\r\n            {!state &&\r\n            <div style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n                <button className=\"actionButton\" onClick={showForm}>{t(\"realizeCheckUp\")}</button>\r\n            </div>\r\n            }\r\n            {state ? (\r\n                <Form>\r\n                    <Form.Group className=\"mb-3\" controlId=\"doctorDescription\">\r\n                        <Form.Label>{t(\"description\")}:</Form.Label>\r\n                        <Form.Control as=\"textarea\" rows={3} value={doctorsDescription} onChange={e => {\r\n                            setDoctorsDescription(e.target.value)\r\n                        }} />\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-3\" controlId=\"result\">\r\n                        <Form.Label>{t(\"result\")}:</Form.Label>\r\n                        <Form.Control as=\"textarea\" rows={3} isInvalid={!!errors.result} value={result} onChange={e => {\r\n                            setResult(e.target.value);\r\n                            if(!!errors['result'])\r\n                                setErrors({\r\n                                    ...errors,\r\n                                    ['result']:null\r\n                                })\r\n                        }} />\r\n                        <Form.Control.Feedback type='invalid'>{errors.result}</Form.Control.Feedback>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"file\" className=\"mb-2\">\r\n                        <Form.Label>{t(\"file\")}</Form.Label>\r\n                        <Form.Control as=\"input\" ref={ref} type=\"file\" isInvalid={!!errors.file} onChange={e => {\r\n                            handleFileUpload(e);\r\n                            if(!!errors['file'])\r\n                                setErrors({\r\n                                    ...errors,\r\n                                    ['file']:null\r\n                                })\r\n                        }}\r\n                        />\r\n                        <Form.Control.Feedback type='invalid'>{errors.file}</Form.Control.Feedback>\r\n                    </Form.Group>\r\n                    {state &&\r\n                    <div className=\"topBuffer\" style={{display: 'flex', justifyContent: 'space-between'}}>\r\n                        <button className=\"deleteButton\" onClick={(e)=>showForm(e)}>{t(\"cancel\").toUpperCase()}</button>\r\n                        <button className=\"addButton\" onClick={e => handleRealization(e)}>{t(\"accept\").toUpperCase()}</button>\r\n                    </div>\r\n                    }\r\n                </Form>) : null}\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default DoctorCheckUp;","import React, {useEffect, useState} from \"react\";\r\nimport {baseUrl} from \"../../../config/config\";\r\nimport DoctorCheckUp from \"./DoctorCheckUp\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\n\r\nconst DoctorCheckUpList = ({t}) => {\r\n    const pageSizes = [3, 5, 10];\r\n    const [checkUps, setCheckUps] = useState([]);\r\n    const [selectedCheckup, setSelectedCheckup] = useState(undefined);\r\n\r\n    const [page, setPage] = useState(1);\r\n    const [count, setCount] = useState(0);\r\n    const [pageSize, setPageSize] = useState(pageSizes[0]);\r\n\r\n    const getRequestParams = (page, pageSize) => {\r\n        let params = {};\r\n\r\n        if (page) {\r\n            params[\"page\"] = page - 1;\r\n        }\r\n        if (pageSize) {\r\n            params[\"size\"] = pageSize;\r\n        }\r\n        return params;\r\n    }\r\n\r\n    useEffect(() => {\r\n        const getCheckUps = async () => {\r\n            const checkUps = await fetchCheckUps()\r\n            setCheckUps(checkUps.checkUps);\r\n            setCount(checkUps.totalPages);\r\n        }\r\n        getCheckUps()\r\n    }, [page, pageSize, selectedCheckup])\r\n\r\n    useEffect(()=>{\r\n        if(selectedCheckup !== undefined){\r\n            setCheckUps(checkUps.filter(filterCheckups));\r\n        }\r\n    }, [selectedCheckup])\r\n\r\n\r\n    const fetchCheckUps = async () => {\r\n        const params = getRequestParams(page, pageSize);\r\n        let res;\r\n        if (params.page !== null && params.size !== null) {\r\n            res = await fetch(`${baseUrl}/doctors/7/testsWithoutResults?page=${params.page}&size=${params.size}`)\r\n        } else if (params.page !== null && params.size === null) {\r\n            res = await fetch(`${baseUrl}/doctors/7/testsWithoutResults?page=${params.page}`)\r\n        } else if (params.page === null && params.size !== null) {\r\n            res = await fetch(`${baseUrl}/doctors/7/testsWithoutResults?size=${params.size}`)\r\n        } else {\r\n            res = await fetch(`${baseUrl}/doctors/7/testsWithoutResults`)\r\n        }\r\n\r\n        const data = await res.json();\r\n\r\n        return data;\r\n    }\r\n\r\n    function filterCheckups(checkup){\r\n        if(checkup.appointmentId !== selectedCheckup.appointmentId && checkup.checkUpId !== selectedCheckup.checkUpId){\r\n            return checkup;\r\n        }\r\n    }\r\n\r\n    const handlePageChange = (event, value) => {\r\n        setPage(value);\r\n    }\r\n\r\n    const handlePageSizeChange = (event) => {\r\n        setPageSize(event.target.value);\r\n        setPage(1);\r\n    };\r\n\r\n    return(\r\n        <div className=\"itemsList\">\r\n            <div className=\"listHeader\">\r\n                <h2>{t(\"checkUpsToRealize\")}</h2>\r\n            </div>\r\n            <div className=\"itemsNumber\">\r\n                <p>{t(\"elementsNumber\")}&nbsp;</p>\r\n                <select onChange={handlePageSizeChange} value={pageSize}>\r\n                    {pageSizes.map((size) => (\r\n                        <option key={size} value={size}>\r\n                            {size}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n            {checkUps.map(checkUp => (\r\n                <DoctorCheckUp checkup={checkUp} setSelectedCheckup={setSelectedCheckup} t={t}/>\r\n            ))}\r\n            <Pagination className=\"my-3\" count={count} page={page} siblingCount={1} boundaryCount={1} shape=\"rounded\" onChange={handlePageChange}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DoctorCheckUpList;","export default __webpack_public_path__ + \"static/media/stetoscope.a15ede8e.jpg\";","import React, {useState} from \"react\";\r\nimport Navigation from \"./components/fragments/Navigation\";\r\nimport Footer from \"./components/fragments/Footer\";\r\nimport PatientData from \"./components/patient/PatientData\";\r\nimport UploadNewFile from \"./components/patientFiles/UploadNewFile\";\r\nimport AppointmentList from \"./components/appointment/AppointmentList\";\r\nimport NewAppointment from \"./components/appointment/NewAppointment\";\r\nimport ReferralList from \"./components/referral/ReferralList\";\r\nimport ScheduleForm from \"./components/schedule/ScheduleForm\";\r\nimport CheckUpList from \"./components/checkup/CheckUpList\";\r\nimport PrescriptionList from \"./components/prescription/PrescriptionList\";\r\nimport LoginForm from \"./components/login/LoginForm\";\r\nimport RegisterForm from \"./components/login/RegisterForm\";\r\nimport TodayAppointmentList from \"./components/appointment/doctor/TodayAppointmentList\";\r\nimport DoctorNavigation from \"./components/fragments/doctor/DoctorNavigation\";\r\nimport AppointmentDetails from \"./components/appointment/doctor/AppointmentDetails\";\r\nimport VisitsHistoryList from \"./components/appointment/doctor/visitsHistory/VisitsHistoryList\";\r\nimport FilesTable from \"./components/appointment/doctor/files/FilesTable\";\r\nimport DoctorCheckUpList from \"./components/checkup/doctor/DoctorCheckUpList\";\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route\r\n} from \"react-router-dom\";\r\nimport background from '../src/stetoscope.jpg';\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\n\r\nfunction App() {\r\n    const [logged, setLogged] = useState(true);\r\n    const [patientMode, setPatientMode] = useState(true);\r\n\r\n    const {t, i18n} = useTranslation()\r\n\r\n    const changeLanguage = (language) => {\r\n        i18n.changeLanguage(language);\r\n    }\r\n\r\n    const handleClick = () =>{\r\n        setPatientMode(!patientMode);\r\n    }\r\n\r\n  return (\r\n      <Router>\r\n          {patientMode &&\r\n              <div>\r\n                  <button onClick={()=>handleClick()}>Switch to doctor's view</button>\r\n                  {logged &&\r\n                  <Navigation changeLanguage={changeLanguage} t={t}/>}\r\n                  <div className=\"wholePage\">\r\n                      <div className=\"content\" style={logged===false ? {width: '100%', backgroundImage : `url(${background})`}: {width: '80%', backgroundImage: null}}>\r\n                          <Switch>\r\n                              <Route exact path=\"/moje-konto\" component={() => <PatientData t={t} />} />\r\n                              <Route exact path=\"/moje-pliki\"  component={() => <UploadNewFile t={t} />}/>\r\n                              <Route exact path=\"/wizyty\" component={() => <AppointmentList t={t} />}/>\r\n                              <Route exact path=\"/nowa-wizyta\" component={() => <NewAppointment t={t} />}/>\r\n                              <Route exact path=\"/skierowania\" component={() => <ReferralList t={t} />}/>\r\n                              <Route exact path=\"/grafik\" component={() => <ScheduleForm t={t} />}/>\r\n                              <Route exact path=\"/badania\" component={() => <CheckUpList t={t} />}/>\r\n                              <Route exact path=\"/recepty\" component={() => <PrescriptionList t={t} />}/>\r\n                              <Route exact path=\"/logowanie\" component={LoginForm}/>\r\n                              <Route exact path=\"/rejestracja\" component={RegisterForm}/>\r\n                          </Switch>\r\n                      </div>\r\n                  </div>\r\n                  <Footer t={t}/>\r\n              </div>\r\n          }\r\n          {!patientMode &&\r\n              <div>\r\n                  <button onClick={()=>handleClick()}>Switch to patient's view</button>\r\n                  <DoctorNavigation changeLanguage={changeLanguage} t={t}/>\r\n                  <div className=\"wholePage\">\r\n                      <div className=\"content\">\r\n                          <Switch>\r\n                              <Route exact path=\"/today-visits\" component={() => <TodayAppointmentList t={t} />}/>\r\n                              <Route exact path=\"/today-visits/:id/details\" component={() => <AppointmentDetails t={t} />} />\r\n                              <Route exact path=\"/today-visits/:id/details/visits-history\" component={() => <VisitsHistoryList t={t} />} />\r\n                              <Route exact path=\"/today-visits/:id/details/check-ups\" component={() => <CheckUpList t={t} />} />\r\n                              <Route exact path=\"/today-visits/:id/details/files\" component={() => <FilesTable t={t} />} />\r\n                              <Route exact path=\"/check-ups\" component={() => <DoctorCheckUpList t={t} />} />\r\n                          </Switch>\r\n                      </div>\r\n                  </div>\r\n                  <Footer t={t}/>\r\n              </div>\r\n          }\r\n      </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import i18n from 'i18next'\r\nimport Backend from 'i18next-http-backend'\r\nimport LanguageDetector from 'i18next-browser-languagedetector'\r\nimport { initReactI18next } from 'react-i18next'\r\n\r\ni18n.use(Backend).use(LanguageDetector).use(initReactI18next).init({\r\n    fallbackLng: 'en',\r\n    debug: true,\r\n    detection: {\r\n        order: ['queryString', 'cookie'],\r\n        cache: ['cookie']\r\n    },\r\n    interpolation: {\r\n        escapeValue: false\r\n    }\r\n})\r\n\r\nexport default i18n","import React, {Suspense} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport './i18n'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Suspense fallback={<div>Loading...</div>}>\r\n        <App />\r\n    </Suspense>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}